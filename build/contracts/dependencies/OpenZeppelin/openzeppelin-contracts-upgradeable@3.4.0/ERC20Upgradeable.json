{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "2": "/Users/daweizhao/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/contracts/math/SafeMathUpgradeable.sol",
    "3": "/Users/daweizhao/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/contracts/proxy/Initializable.sol",
    "4": "/Users/daweizhao/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/contracts/token/ERC20/ERC20Upgradeable.sol",
    "5": "/Users/daweizhao/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/contracts/token/ERC20/IERC20Upgradeable.sol",
    "7": "/Users/daweizhao/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/contracts/utils/AddressUpgradeable.sol",
    "8": "/Users/daweizhao/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/contracts/utils/ContextUpgradeable.sol"
  },
  "ast": {
    "absolutePath": "/Users/daweizhao/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/contracts/token/ERC20/ERC20Upgradeable.sol",
    "exportedSymbols": {
      "ERC20Upgradeable": [
        4054
      ]
    },
    "id": 4055,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3526,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:4"
      },
      {
        "absolutePath": "/Users/daweizhao/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/contracts/utils/ContextUpgradeable.sol",
        "file": "../../utils/ContextUpgradeable.sol",
        "id": 3527,
        "nodeType": "ImportDirective",
        "scope": 4055,
        "sourceUnit": 4100,
        "src": "66:44:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/daweizhao/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/contracts/token/ERC20/IERC20Upgradeable.sol",
        "file": "./IERC20Upgradeable.sol",
        "id": 3528,
        "nodeType": "ImportDirective",
        "scope": 4055,
        "sourceUnit": 2156,
        "src": "111:33:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/daweizhao/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/contracts/math/SafeMathUpgradeable.sol",
        "file": "../../math/SafeMathUpgradeable.sol",
        "id": 3529,
        "nodeType": "ImportDirective",
        "scope": 4055,
        "sourceUnit": 2012,
        "src": "145:44:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/daweizhao/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/contracts/proxy/Initializable.sol",
        "file": "../../proxy/Initializable.sol",
        "id": 3530,
        "nodeType": "ImportDirective",
        "scope": 4055,
        "sourceUnit": 2078,
        "src": "190:39:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3532,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2077,
              "src": "1423:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$2077",
                "typeString": "contract Initializable"
              }
            },
            "id": 3533,
            "nodeType": "InheritanceSpecifier",
            "src": "1423:13:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3534,
              "name": "ContextUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4099,
              "src": "1438:18:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContextUpgradeable_$4099",
                "typeString": "contract ContextUpgradeable"
              }
            },
            "id": 3535,
            "nodeType": "InheritanceSpecifier",
            "src": "1438:18:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3536,
              "name": "IERC20Upgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2155,
              "src": "1458:17:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$2155",
                "typeString": "contract IERC20Upgradeable"
              }
            },
            "id": 3537,
            "nodeType": "InheritanceSpecifier",
            "src": "1458:17:4"
          }
        ],
        "contractDependencies": [
          2077,
          2155,
          4099
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3531,
          "nodeType": "StructuredDocumentation",
          "src": "231:1162:4",
          "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
        },
        "fullyImplemented": true,
        "id": 4054,
        "linearizedBaseContracts": [
          4054,
          2155,
          4099,
          2077
        ],
        "name": "ERC20Upgradeable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 3540,
            "libraryName": {
              "contractScope": null,
              "id": 3538,
              "name": "SafeMathUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2011,
              "src": "1488:19:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMathUpgradeable_$2011",
                "typeString": "library SafeMathUpgradeable"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1482:38:4",
            "typeName": {
              "id": 3539,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1512:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 3544,
            "mutability": "mutable",
            "name": "_balances",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4054,
            "src": "1526:46:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3543,
              "keyType": {
                "id": 3541,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1535:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1526:28:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3542,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1546:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3550,
            "mutability": "mutable",
            "name": "_allowances",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4054,
            "src": "1579:69:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 3549,
              "keyType": {
                "id": 3545,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1588:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1579:49:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 3548,
                "keyType": {
                  "id": 3546,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1608:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1599:28:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 3547,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1619:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3552,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4054,
            "src": "1655:28:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3551,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1655:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3554,
            "mutability": "mutable",
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4054,
            "src": "1690:20:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3553,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1690:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3556,
            "mutability": "mutable",
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4054,
            "src": "1716:22:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3555,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1716:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 3558,
            "mutability": "mutable",
            "name": "_decimals",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4054,
            "src": "1744:23:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 3557,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1744:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3576,
              "nodeType": "Block",
              "src": "2177:91:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3568,
                      "name": "__Context_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4074,
                      "src": "2187:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2187:26:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3570,
                  "nodeType": "ExpressionStatement",
                  "src": "2187:26:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3572,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3561,
                        "src": "2246:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3573,
                        "name": "symbol_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3563,
                        "src": "2253:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3571,
                      "name": "__ERC20_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3599,
                      "src": "2223:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 3574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2223:38:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3575,
                  "nodeType": "ExpressionStatement",
                  "src": "2223:38:4"
                }
              ]
            },
            "documentation": {
              "id": 3559,
              "nodeType": "StructuredDocumentation",
              "src": "1774:311:4",
              "text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
            },
            "id": 3577,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3566,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3565,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2060,
                  "src": "2165:11:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2165:11:4"
              }
            ],
            "name": "__ERC20_init",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3561,
                  "mutability": "mutable",
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3577,
                  "src": "2112:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3560,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2112:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3563,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3577,
                  "src": "2133:21:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3562,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2133:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2111:44:4"
            },
            "returnParameters": {
              "id": 3567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2177:0:4"
            },
            "scope": 4054,
            "src": "2090:178:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3598,
              "nodeType": "Block",
              "src": "2371:81:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3586,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3554,
                      "src": "2381:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3587,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3579,
                      "src": "2389:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2381:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3589,
                  "nodeType": "ExpressionStatement",
                  "src": "2381:13:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3590,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3556,
                      "src": "2404:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3591,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3581,
                      "src": "2414:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2404:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3593,
                  "nodeType": "ExpressionStatement",
                  "src": "2404:17:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3594,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3558,
                      "src": "2431:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3138",
                      "id": 3595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2443:2:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "2431:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 3597,
                  "nodeType": "ExpressionStatement",
                  "src": "2431:14:4"
                }
              ]
            },
            "documentation": null,
            "id": 3599,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3584,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3583,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2060,
                  "src": "2359:11:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2359:11:4"
              }
            ],
            "name": "__ERC20_init_unchained",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3579,
                  "mutability": "mutable",
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3599,
                  "src": "2306:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3578,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2306:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3581,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3599,
                  "src": "2327:21:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3580,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2327:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2305:44:4"
            },
            "returnParameters": {
              "id": 3585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2371:0:4"
            },
            "scope": 4054,
            "src": "2274:178:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3607,
              "nodeType": "Block",
              "src": "2577:29:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3605,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3554,
                    "src": "2594:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 3604,
                  "id": 3606,
                  "nodeType": "Return",
                  "src": "2587:12:4"
                }
              ]
            },
            "documentation": {
              "id": 3600,
              "nodeType": "StructuredDocumentation",
              "src": "2458:54:4",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 3608,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2530:2:4"
            },
            "returnParameters": {
              "id": 3604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3603,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3608,
                  "src": "2562:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3602,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2562:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2561:15:4"
            },
            "scope": 4054,
            "src": "2517:89:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3616,
              "nodeType": "Block",
              "src": "2781:31:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3614,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3556,
                    "src": "2798:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 3613,
                  "id": 3615,
                  "nodeType": "Return",
                  "src": "2791:14:4"
                }
              ]
            },
            "documentation": {
              "id": 3609,
              "nodeType": "StructuredDocumentation",
              "src": "2612:102:4",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 3617,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2734:2:4"
            },
            "returnParameters": {
              "id": 3613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3612,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3617,
                  "src": "2766:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3611,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2766:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2765:15:4"
            },
            "scope": 4054,
            "src": "2719:93:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3625,
              "nodeType": "Block",
              "src": "3491:33:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3623,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3558,
                    "src": "3508:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 3622,
                  "id": 3624,
                  "nodeType": "Return",
                  "src": "3501:16:4"
                }
              ]
            },
            "documentation": {
              "id": 3618,
              "nodeType": "StructuredDocumentation",
              "src": "2818:612:4",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "id": 3626,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3452:2:4"
            },
            "returnParameters": {
              "id": 3622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3621,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3626,
                  "src": "3484:5:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3620,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3484:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3483:7:4"
            },
            "scope": 4054,
            "src": "3435:89:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2086
            ],
            "body": {
              "id": 3635,
              "nodeType": "Block",
              "src": "3654:36:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3633,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3552,
                    "src": "3671:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3632,
                  "id": 3634,
                  "nodeType": "Return",
                  "src": "3664:19:4"
                }
              ]
            },
            "documentation": {
              "id": 3627,
              "nodeType": "StructuredDocumentation",
              "src": "3530:49:4",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 3636,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3629,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3627:8:4"
            },
            "parameters": {
              "id": 3628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3604:2:4"
            },
            "returnParameters": {
              "id": 3632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3631,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3636,
                  "src": "3645:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3630,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3645:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3644:9:4"
            },
            "scope": 4054,
            "src": "3584:106:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2094
            ],
            "body": {
              "id": 3649,
              "nodeType": "Block",
              "src": "3831:42:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3645,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3544,
                      "src": "3848:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 3647,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3646,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3639,
                      "src": "3858:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3848:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3644,
                  "id": 3648,
                  "nodeType": "Return",
                  "src": "3841:25:4"
                }
              ]
            },
            "documentation": {
              "id": 3637,
              "nodeType": "StructuredDocumentation",
              "src": "3696:47:4",
              "text": " @dev See {IERC20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 3650,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3641,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3804:8:4"
            },
            "parameters": {
              "id": 3640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3639,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3650,
                  "src": "3767:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3767:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3766:17:4"
            },
            "returnParameters": {
              "id": 3644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3643,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3650,
                  "src": "3822:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3642,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3822:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3821:9:4"
            },
            "scope": 4054,
            "src": "3748:125:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2104
            ],
            "body": {
              "id": 3670,
              "nodeType": "Block",
              "src": "4168:80:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3662,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4083,
                          "src": "4188:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 3663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4188:12:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3664,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3653,
                        "src": "4202:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3665,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3655,
                        "src": "4213:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3661,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3871,
                      "src": "4178:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4178:42:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3667,
                  "nodeType": "ExpressionStatement",
                  "src": "4178:42:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 3668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4237:4:4",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3660,
                  "id": 3669,
                  "nodeType": "Return",
                  "src": "4230:11:4"
                }
              ]
            },
            "documentation": {
              "id": 3651,
              "nodeType": "StructuredDocumentation",
              "src": "3879:192:4",
              "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "a9059cbb",
            "id": 3671,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3657,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4144:8:4"
            },
            "parameters": {
              "id": 3656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3653,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3671,
                  "src": "4094:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3652,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4094:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3655,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3671,
                  "src": "4113:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3654,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4113:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4093:35:4"
            },
            "returnParameters": {
              "id": 3660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3659,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3671,
                  "src": "4162:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3658,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4162:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4161:6:4"
            },
            "scope": 4054,
            "src": "4076:172:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2114
            ],
            "body": {
              "id": 3688,
              "nodeType": "Block",
              "src": "4404:51:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3682,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3550,
                        "src": "4421:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 3684,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3683,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3674,
                        "src": "4433:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4421:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 3686,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3685,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3676,
                      "src": "4440:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4421:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3681,
                  "id": 3687,
                  "nodeType": "Return",
                  "src": "4414:34:4"
                }
              ]
            },
            "documentation": {
              "id": 3672,
              "nodeType": "StructuredDocumentation",
              "src": "4254:47:4",
              "text": " @dev See {IERC20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 3689,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3678,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4377:8:4"
            },
            "parameters": {
              "id": 3677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3674,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3689,
                  "src": "4325:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3673,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4325:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3676,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3689,
                  "src": "4340:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3675,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4340:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4324:32:4"
            },
            "returnParameters": {
              "id": 3681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3680,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3689,
                  "src": "4395:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3679,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4395:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4394:9:4"
            },
            "scope": 4054,
            "src": "4306:149:4",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2124
            ],
            "body": {
              "id": 3709,
              "nodeType": "Block",
              "src": "4682:77:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3701,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4083,
                          "src": "4701:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 3702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4701:12:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3703,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3692,
                        "src": "4715:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3704,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3694,
                        "src": "4724:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3700,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4027,
                      "src": "4692:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4692:39:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3706,
                  "nodeType": "ExpressionStatement",
                  "src": "4692:39:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 3707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4748:4:4",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3699,
                  "id": 3708,
                  "nodeType": "Return",
                  "src": "4741:11:4"
                }
              ]
            },
            "documentation": {
              "id": 3690,
              "nodeType": "StructuredDocumentation",
              "src": "4461:127:4",
              "text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "095ea7b3",
            "id": 3710,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3696,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4658:8:4"
            },
            "parameters": {
              "id": 3695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3692,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3710,
                  "src": "4610:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3691,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4610:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3694,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3710,
                  "src": "4627:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3693,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4627:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4609:33:4"
            },
            "returnParameters": {
              "id": 3699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3698,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3710,
                  "src": "4676:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3697,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4676:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4675:6:4"
            },
            "scope": 4054,
            "src": "4593:166:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2136
            ],
            "body": {
              "id": 3747,
              "nodeType": "Block",
              "src": "5338:205:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3724,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3713,
                        "src": "5358:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3725,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3715,
                        "src": "5366:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3726,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3717,
                        "src": "5377:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3723,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3871,
                      "src": "5348:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5348:36:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3728,
                  "nodeType": "ExpressionStatement",
                  "src": "5348:36:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3730,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3713,
                        "src": "5403:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3731,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4083,
                          "src": "5411:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 3732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5411:12:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3740,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3717,
                            "src": "5463:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                            "id": 3741,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5471:42:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                              "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                            },
                            "value": "ERC20: transfer amount exceeds allowance"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                              "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 3733,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3550,
                                "src": "5425:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 3735,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 3734,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3713,
                                "src": "5437:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5425:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3738,
                            "indexExpression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3736,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4083,
                                "src": "5445:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 3737,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5445:12:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5425:33:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1962,
                          "src": "5425:37:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                          }
                        },
                        "id": 3742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5425:89:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3729,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4027,
                      "src": "5394:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5394:121:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3744,
                  "nodeType": "ExpressionStatement",
                  "src": "5394:121:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 3745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5532:4:4",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3722,
                  "id": 3746,
                  "nodeType": "Return",
                  "src": "5525:11:4"
                }
              ]
            },
            "documentation": {
              "id": 3711,
              "nodeType": "StructuredDocumentation",
              "src": "4765:456:4",
              "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
            },
            "functionSelector": "23b872dd",
            "id": 3748,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3719,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5314:8:4"
            },
            "parameters": {
              "id": 3718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3713,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3748,
                  "src": "5248:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3712,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5248:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3715,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3748,
                  "src": "5264:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3714,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5264:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3717,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3748,
                  "src": "5283:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3716,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5283:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5247:51:4"
            },
            "returnParameters": {
              "id": 3722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3721,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3748,
                  "src": "5332:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3720,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5332:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5331:6:4"
            },
            "scope": 4054,
            "src": "5226:317:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3775,
              "nodeType": "Block",
              "src": "6032:121:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3759,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4083,
                          "src": "6051:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 3760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6051:12:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3761,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3751,
                        "src": "6065:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3769,
                            "name": "addedValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3753,
                            "src": "6113:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 3762,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3550,
                                "src": "6074:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 3765,
                              "indexExpression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 3763,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4083,
                                  "src": "6086:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                    "typeString": "function () view returns (address payable)"
                                  }
                                },
                                "id": 3764,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6086:12:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6074:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3767,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3766,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3751,
                              "src": "6100:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6074:34:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1838,
                          "src": "6074:38:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 3770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6074:50:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3758,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4027,
                      "src": "6042:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6042:83:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3772,
                  "nodeType": "ExpressionStatement",
                  "src": "6042:83:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 3773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6142:4:4",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3757,
                  "id": 3774,
                  "nodeType": "Return",
                  "src": "6135:11:4"
                }
              ]
            },
            "documentation": {
              "id": 3749,
              "nodeType": "StructuredDocumentation",
              "src": "5549:384:4",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "id": 3776,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3751,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3776,
                  "src": "5965:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3750,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5965:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3753,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3776,
                  "src": "5982:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3752,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5982:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5964:37:4"
            },
            "returnParameters": {
              "id": 3757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3756,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3776,
                  "src": "6026:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3755,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6026:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6025:6:4"
            },
            "scope": 4054,
            "src": "5938:215:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3804,
              "nodeType": "Block",
              "src": "6739:167:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3787,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4083,
                          "src": "6758:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 3788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6758:12:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3789,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3779,
                        "src": "6772:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3797,
                            "name": "subtractedValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3781,
                            "src": "6820:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                            "id": 3798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6837:39:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                              "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                            },
                            "value": "ERC20: decreased allowance below zero"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                              "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 3790,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3550,
                                "src": "6781:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 3793,
                              "indexExpression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 3791,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4083,
                                  "src": "6793:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                    "typeString": "function () view returns (address payable)"
                                  }
                                },
                                "id": 3792,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6793:12:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6781:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3795,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3794,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3779,
                              "src": "6807:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6781:34:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1962,
                          "src": "6781:38:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                          }
                        },
                        "id": 3799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6781:96:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3786,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4027,
                      "src": "6749:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6749:129:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3801,
                  "nodeType": "ExpressionStatement",
                  "src": "6749:129:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 3802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6895:4:4",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3785,
                  "id": 3803,
                  "nodeType": "Return",
                  "src": "6888:11:4"
                }
              ]
            },
            "documentation": {
              "id": 3777,
              "nodeType": "StructuredDocumentation",
              "src": "6159:476:4",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "id": 3805,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3779,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3805,
                  "src": "6667:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3778,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6667:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3781,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3805,
                  "src": "6684:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3780,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6684:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6666:42:4"
            },
            "returnParameters": {
              "id": 3785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3784,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3805,
                  "src": "6733:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3783,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6733:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6732:6:4"
            },
            "scope": 4054,
            "src": "6640:266:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3870,
              "nodeType": "Block",
              "src": "7467:443:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3816,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3808,
                          "src": "7485:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3819,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7503:1:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7495:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3817,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7495:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7495:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "7485:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 3822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7507:39:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 3815,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7477:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7477:70:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3824,
                  "nodeType": "ExpressionStatement",
                  "src": "7477:70:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3826,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3810,
                          "src": "7565:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3829,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7586:1:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3828,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7578:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3827,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7578:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7578:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "7565:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 3832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7590:37:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 3825,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7557:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7557:71:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3834,
                  "nodeType": "ExpressionStatement",
                  "src": "7557:71:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3836,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3808,
                        "src": "7660:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3837,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3810,
                        "src": "7668:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3838,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3812,
                        "src": "7679:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3835,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4049,
                      "src": "7639:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7639:47:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3840,
                  "nodeType": "ExpressionStatement",
                  "src": "7639:47:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3841,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3544,
                        "src": "7697:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3843,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3842,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3808,
                        "src": "7707:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7697:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3848,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3812,
                          "src": "7739:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                          "id": 3849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7747:40:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                            "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                          },
                          "value": "ERC20: transfer amount exceeds balance"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                            "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3844,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3544,
                            "src": "7717:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3846,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 3845,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3808,
                            "src": "7727:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7717:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1962,
                        "src": "7717:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                        }
                      },
                      "id": 3850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7717:71:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7697:91:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3852,
                  "nodeType": "ExpressionStatement",
                  "src": "7697:91:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3853,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3544,
                        "src": "7798:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3855,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3854,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3810,
                        "src": "7808:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7798:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3860,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3812,
                          "src": "7846:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3856,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3544,
                            "src": "7821:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3858,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 3857,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3810,
                            "src": "7831:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7821:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1838,
                        "src": "7821:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7821:32:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7798:55:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3863,
                  "nodeType": "ExpressionStatement",
                  "src": "7798:55:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3865,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3808,
                        "src": "7877:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3866,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3810,
                        "src": "7885:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3867,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3812,
                        "src": "7896:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3864,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2145,
                      "src": "7868:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7868:35:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3869,
                  "nodeType": "EmitStatement",
                  "src": "7863:40:4"
                }
              ]
            },
            "documentation": {
              "id": 3806,
              "nodeType": "StructuredDocumentation",
              "src": "6912:463:4",
              "text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
            },
            "id": 3871,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3808,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3871,
                  "src": "7399:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3807,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7399:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3810,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3871,
                  "src": "7415:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7415:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3812,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3871,
                  "src": "7434:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3811,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7434:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7398:51:4"
            },
            "returnParameters": {
              "id": 3814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7467:0:4"
            },
            "scope": 4054,
            "src": "7380:530:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3925,
              "nodeType": "Block",
              "src": "8246:305:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3880,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3874,
                          "src": "8264:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8283:1:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8275:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3881,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8275:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8275:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "8264:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 3886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8287:33:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 3879,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8256:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8256:65:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3888,
                  "nodeType": "ExpressionStatement",
                  "src": "8256:65:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 3892,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8361:1:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8353:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3890,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8353:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8353:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3894,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3874,
                        "src": "8365:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3895,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3876,
                        "src": "8374:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3889,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4049,
                      "src": "8332:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8332:49:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3897,
                  "nodeType": "ExpressionStatement",
                  "src": "8332:49:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3898,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3552,
                      "src": "8392:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3901,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3876,
                          "src": "8424:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 3899,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3552,
                          "src": "8407:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1838,
                        "src": "8407:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8407:24:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8392:39:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3904,
                  "nodeType": "ExpressionStatement",
                  "src": "8392:39:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3905,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3544,
                        "src": "8441:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3907,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3906,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3874,
                        "src": "8451:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8441:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3912,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3876,
                          "src": "8485:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3908,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3544,
                            "src": "8462:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3910,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 3909,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3874,
                            "src": "8472:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8462:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1838,
                        "src": "8462:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8462:30:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8441:51:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3915,
                  "nodeType": "ExpressionStatement",
                  "src": "8441:51:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 3919,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8524:1:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8516:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3917,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8516:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8516:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3921,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3874,
                        "src": "8528:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3922,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3876,
                        "src": "8537:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3916,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2145,
                      "src": "8507:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8507:37:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3924,
                  "nodeType": "EmitStatement",
                  "src": "8502:42:4"
                }
              ]
            },
            "documentation": {
              "id": 3872,
              "nodeType": "StructuredDocumentation",
              "src": "7916:260:4",
              "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
            },
            "id": 3926,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3874,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3926,
                  "src": "8196:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3873,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8196:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3876,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3926,
                  "src": "8213:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3875,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8213:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8195:33:4"
            },
            "returnParameters": {
              "id": 3878,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8246:0:4"
            },
            "scope": 4054,
            "src": "8181:370:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3981,
              "nodeType": "Block",
              "src": "8936:345:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3935,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3929,
                          "src": "8954:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3938,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8973:1:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8965:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3936,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8965:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8965:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "8954:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 3941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8977:35:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 3934,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8946:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8946:67:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3943,
                  "nodeType": "ExpressionStatement",
                  "src": "8946:67:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3945,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3929,
                        "src": "9045:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 3948,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9062:1:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9054:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3946,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9054:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9054:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3950,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3931,
                        "src": "9066:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3944,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4049,
                      "src": "9024:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9024:49:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3952,
                  "nodeType": "ExpressionStatement",
                  "src": "9024:49:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3953,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3544,
                        "src": "9084:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 3955,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3954,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3929,
                        "src": "9094:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9084:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3960,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3931,
                          "src": "9128:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                          "id": 3961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9136:36:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                            "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                          },
                          "value": "ERC20: burn amount exceeds balance"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                            "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3956,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3544,
                            "src": "9105:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3958,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 3957,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3929,
                            "src": "9115:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9105:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1962,
                        "src": "9105:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                        }
                      },
                      "id": 3962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9105:68:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9084:89:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3964,
                  "nodeType": "ExpressionStatement",
                  "src": "9084:89:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3965,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3552,
                      "src": "9183:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3968,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3931,
                          "src": "9215:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 3966,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3552,
                          "src": "9198:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1860,
                        "src": "9198:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9198:24:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9183:39:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3971,
                  "nodeType": "ExpressionStatement",
                  "src": "9183:39:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3973,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3929,
                        "src": "9246:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 3976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9263:1:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9255:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3974,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9255:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9255:10:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3978,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3931,
                        "src": "9267:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3972,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2145,
                      "src": "9237:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9237:37:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3980,
                  "nodeType": "EmitStatement",
                  "src": "9232:42:4"
                }
              ]
            },
            "documentation": {
              "id": 3927,
              "nodeType": "StructuredDocumentation",
              "src": "8557:309:4",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
            },
            "id": 3982,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3929,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3982,
                  "src": "8886:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3928,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8886:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3931,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3982,
                  "src": "8903:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3930,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8903:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8885:33:4"
            },
            "returnParameters": {
              "id": 3933,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8936:0:4"
            },
            "scope": 4054,
            "src": "8871:410:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4026,
              "nodeType": "Block",
              "src": "9787:257:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3993,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3985,
                          "src": "9805:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9822:1:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9814:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3994,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9814:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9814:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "9805:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 3999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9826:38:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        },
                        "value": "ERC20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        }
                      ],
                      "id": 3992,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9797:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9797:68:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4001,
                  "nodeType": "ExpressionStatement",
                  "src": "9797:68:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4003,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3987,
                          "src": "9883:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 4006,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9902:1:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9894:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4004,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9894:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 4007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9894:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "9883:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 4009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9906:36:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 4002,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9875:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9875:68:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4011,
                  "nodeType": "ExpressionStatement",
                  "src": "9875:68:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 4012,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3550,
                          "src": "9954:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 4015,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 4013,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3985,
                          "src": "9966:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9954:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4016,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4014,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3987,
                        "src": "9973:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9954:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4017,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3989,
                      "src": "9984:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9954:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4019,
                  "nodeType": "ExpressionStatement",
                  "src": "9954:36:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4021,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3985,
                        "src": "10014:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4022,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3987,
                        "src": "10021:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4023,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3989,
                        "src": "10030:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4020,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2154,
                      "src": "10005:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10005:32:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4025,
                  "nodeType": "EmitStatement",
                  "src": "10000:37:4"
                }
              ]
            },
            "documentation": {
              "id": 3983,
              "nodeType": "StructuredDocumentation",
              "src": "9287:412:4",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
            },
            "id": 4027,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3985,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4027,
                  "src": "9722:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3984,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9722:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3987,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4027,
                  "src": "9737:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3986,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9737:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3989,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4027,
                  "src": "9754:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3988,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9754:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9721:48:4"
            },
            "returnParameters": {
              "id": 3991,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9787:0:4"
            },
            "scope": 4054,
            "src": "9704:340:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4037,
              "nodeType": "Block",
              "src": "10425:38:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4033,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3558,
                      "src": "10435:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4034,
                      "name": "decimals_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4030,
                      "src": "10447:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "10435:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 4036,
                  "nodeType": "ExpressionStatement",
                  "src": "10435:21:4"
                }
              ]
            },
            "documentation": {
              "id": 4028,
              "nodeType": "StructuredDocumentation",
              "src": "10050:312:4",
              "text": " @dev Sets {decimals} to a value other than the default one of 18.\n WARNING: This function should only be called from the constructor. Most\n applications that interact with token contracts will not expect\n {decimals} to ever change, and may work incorrectly if it does."
            },
            "id": 4038,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setupDecimals",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4030,
                  "mutability": "mutable",
                  "name": "decimals_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4038,
                  "src": "10391:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4029,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "10391:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10390:17:4"
            },
            "returnParameters": {
              "id": 4032,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10425:0:4"
            },
            "scope": 4054,
            "src": "10367:96:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4048,
              "nodeType": "Block",
              "src": "11139:3:4",
              "statements": []
            },
            "documentation": {
              "id": 4039,
              "nodeType": "StructuredDocumentation",
              "src": "10469:576:4",
              "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 4049,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4041,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4049,
                  "src": "11080:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4040,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11080:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4043,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4049,
                  "src": "11094:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11094:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4045,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4049,
                  "src": "11106:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4044,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11106:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11079:42:4"
            },
            "returnParameters": {
              "id": 4047,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11139:0:4"
            },
            "scope": 4054,
            "src": "11050:92:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 4053,
            "mutability": "mutable",
            "name": "__gap",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4054,
            "src": "11147:25:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$44_storage",
              "typeString": "uint256[44]"
            },
            "typeName": {
              "baseType": {
                "id": 4050,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "11147:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 4052,
              "length": {
                "argumentTypes": null,
                "hexValue": "3434",
                "id": 4051,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "11155:2:4",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_44_by_1",
                  "typeString": "int_const 44"
                },
                "value": "44"
              },
              "nodeType": "ArrayTypeName",
              "src": "11147:11:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$44_storage_ptr",
                "typeString": "uint256[44]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 4055,
        "src": "1394:9781:4"
      }
    ],
    "src": "33:11143:4"
  },
  "bytecode": "608060405234801561001057600080fd5b506109f4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063395093511161007157806339509351146101d957806370a082311461020557806395d89b411461022b578063a457c2d714610233578063a9059cbb1461025f578063dd62ed3e1461028b576100a9565b806306fdde03146100ae578063095ea7b31461012b57806318160ddd1461016b57806323b872dd14610185578063313ce567146101bb575b600080fd5b6100b66102b9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f05781810151838201526020016100d8565b50505050905090810190601f16801561011d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101576004803603604081101561014157600080fd5b506001600160a01b03813516906020013561034f565b604080519115158252519081900360200190f35b61017361036c565b60408051918252519081900360200190f35b6101576004803603606081101561019b57600080fd5b506001600160a01b03813581169160208101359091169060400135610372565b6101c36103f9565b6040805160ff9092168252519081900360200190f35b610157600480360360408110156101ef57600080fd5b506001600160a01b038135169060200135610402565b6101736004803603602081101561021b57600080fd5b50356001600160a01b0316610450565b6100b661046b565b6101576004803603604081101561024957600080fd5b506001600160a01b0381351690602001356104cc565b6101576004803603604081101561027557600080fd5b506001600160a01b038135169060200135610534565b610173600480360360408110156102a157600080fd5b506001600160a01b0381358116916020013516610548565b60368054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b600061036361035c610573565b8484610577565b50600192915050565b60355490565b600061037f848484610663565b6103ef8461038b610573565b6103ea85604051806060016040528060288152602001610929602891396001600160a01b038a166000908152603460205260408120906103c9610573565b6001600160a01b0316815260208101919091526040016000205491906107c0565b610577565b5060019392505050565b60385460ff1690565b600061036361040f610573565b846103ea8560346000610420610573565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610857565b6001600160a01b031660009081526033602052604090205490565b60378054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b60006103636104d9610573565b846103ea8560405180606001604052806025815260200161099a6025913960346000610503610573565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906107c0565b6000610363610541610573565b8484610663565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166105bc5760405162461bcd60e51b81526004018080602001828103825260248152602001806109766024913960400191505060405180910390fd5b6001600160a01b0382166106015760405162461bcd60e51b81526004018080602001828103825260228152602001806108e16022913960400191505060405180910390fd5b6001600160a01b03808416600081815260346020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106a85760405162461bcd60e51b81526004018080602001828103825260258152602001806109516025913960400191505060405180910390fd5b6001600160a01b0382166106ed5760405162461bcd60e51b81526004018080602001828103825260238152602001806108be6023913960400191505060405180910390fd5b6106f88383836108b8565b61073581604051806060016040528060268152602001610903602691396001600160a01b03861660009081526033602052604090205491906107c0565b6001600160a01b0380851660009081526033602052604080822093909355908416815220546107649082610857565b6001600160a01b0380841660008181526033602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561084f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108145781810151838201526020016107fc565b50505050905090810190601f1680156108415780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156108b1576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212207ad8adca22c81a1cd4a2bef2b3888f2decbe19fa6efca8327fa5bbe847b8da3864736f6c634300060c0033",
  "bytecodeSha1": "3f046b2bbe9efadf69bf8fa7fa24a554dd084055",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "ERC20Upgradeable",
  "coverageMap": {
    "branches": {
      "2": {
        "SafeMathUpgradeable.add": {
          "34": [
            2813,
            2819,
            true
          ]
        },
        "SafeMathUpgradeable.sub": {
          "33": [
            5556,
            5562,
            true
          ]
        }
      },
      "3": {},
      "4": {
        "ERC20Upgradeable._approve": {
          "29": [
            9805,
            9824,
            true
          ],
          "30": [
            9883,
            9904,
            true
          ]
        },
        "ERC20Upgradeable._transfer": {
          "31": [
            7485,
            7505,
            true
          ],
          "32": [
            7565,
            7588,
            true
          ]
        }
      },
      "5": {},
      "7": {},
      "8": {}
    },
    "statements": {
      "2": {
        "SafeMathUpgradeable.add": {
          "27": [
            2805,
            2851
          ],
          "28": [
            2861,
            2869
          ]
        },
        "SafeMathUpgradeable.sub": {
          "25": [
            5548,
            5577
          ],
          "26": [
            5587,
            5599
          ]
        }
      },
      "3": {},
      "4": {
        "ERC20Upgradeable._approve": {
          "15": [
            9797,
            9865
          ],
          "16": [
            9875,
            9943
          ],
          "17": [
            9954,
            9990
          ],
          "18": [
            10000,
            10037
          ]
        },
        "ERC20Upgradeable._transfer": {
          "19": [
            7477,
            7547
          ],
          "20": [
            7557,
            7628
          ],
          "21": [
            7639,
            7686
          ],
          "22": [
            7697,
            7788
          ],
          "23": [
            7798,
            7853
          ],
          "24": [
            7863,
            7903
          ]
        },
        "ERC20Upgradeable.allowance": {
          "13": [
            4414,
            4448
          ]
        },
        "ERC20Upgradeable.approve": {
          "1": [
            4692,
            4731
          ],
          "2": [
            4741,
            4752
          ]
        },
        "ERC20Upgradeable.balanceOf": {
          "9": [
            3841,
            3866
          ]
        },
        "ERC20Upgradeable.decimals": {
          "7": [
            3501,
            3517
          ]
        },
        "ERC20Upgradeable.decreaseAllowance": {
          "11": [
            6749,
            6878
          ]
        },
        "ERC20Upgradeable.increaseAllowance": {
          "8": [
            6042,
            6125
          ]
        },
        "ERC20Upgradeable.name": {
          "0": [
            2587,
            2599
          ]
        },
        "ERC20Upgradeable.symbol": {
          "10": [
            2791,
            2805
          ]
        },
        "ERC20Upgradeable.totalSupply": {
          "3": [
            3664,
            3683
          ]
        },
        "ERC20Upgradeable.transfer": {
          "12": [
            4178,
            4220
          ]
        },
        "ERC20Upgradeable.transferFrom": {
          "4": [
            5348,
            5384
          ],
          "5": [
            5394,
            5515
          ],
          "6": [
            5525,
            5536
          ]
        }
      },
      "5": {},
      "7": {},
      "8": {
        "ContextUpgradeable._msgSender": {
          "14": [
            908,
            925
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/AddressUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/ContextUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/IERC20Upgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/Initializable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/SafeMathUpgradeable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c8063395093511161007157806339509351146101d957806370a082311461020557806395d89b411461022b578063a457c2d714610233578063a9059cbb1461025f578063dd62ed3e1461028b576100a9565b806306fdde03146100ae578063095ea7b31461012b57806318160ddd1461016b57806323b872dd14610185578063313ce567146101bb575b600080fd5b6100b66102b9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f05781810151838201526020016100d8565b50505050905090810190601f16801561011d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101576004803603604081101561014157600080fd5b506001600160a01b03813516906020013561034f565b604080519115158252519081900360200190f35b61017361036c565b60408051918252519081900360200190f35b6101576004803603606081101561019b57600080fd5b506001600160a01b03813581169160208101359091169060400135610372565b6101c36103f9565b6040805160ff9092168252519081900360200190f35b610157600480360360408110156101ef57600080fd5b506001600160a01b038135169060200135610402565b6101736004803603602081101561021b57600080fd5b50356001600160a01b0316610450565b6100b661046b565b6101576004803603604081101561024957600080fd5b506001600160a01b0381351690602001356104cc565b6101576004803603604081101561027557600080fd5b506001600160a01b038135169060200135610534565b610173600480360360408110156102a157600080fd5b506001600160a01b0381358116916020013516610548565b60368054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b600061036361035c610573565b8484610577565b50600192915050565b60355490565b600061037f848484610663565b6103ef8461038b610573565b6103ea85604051806060016040528060288152602001610929602891396001600160a01b038a166000908152603460205260408120906103c9610573565b6001600160a01b0316815260208101919091526040016000205491906107c0565b610577565b5060019392505050565b60385460ff1690565b600061036361040f610573565b846103ea8560346000610420610573565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610857565b6001600160a01b031660009081526033602052604090205490565b60378054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b60006103636104d9610573565b846103ea8560405180606001604052806025815260200161099a6025913960346000610503610573565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906107c0565b6000610363610541610573565b8484610663565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166105bc5760405162461bcd60e51b81526004018080602001828103825260248152602001806109766024913960400191505060405180910390fd5b6001600160a01b0382166106015760405162461bcd60e51b81526004018080602001828103825260228152602001806108e16022913960400191505060405180910390fd5b6001600160a01b03808416600081815260346020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106a85760405162461bcd60e51b81526004018080602001828103825260258152602001806109516025913960400191505060405180910390fd5b6001600160a01b0382166106ed5760405162461bcd60e51b81526004018080602001828103825260238152602001806108be6023913960400191505060405180910390fd5b6106f88383836108b8565b61073581604051806060016040528060268152602001610903602691396001600160a01b03861660009081526033602052604090205491906107c0565b6001600160a01b0380851660009081526033602052604080822093909355908416815220546107649082610857565b6001600160a01b0380841660008181526033602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561084f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108145781810151838201526020016107fc565b50505050905090810190601f1680156108415780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156108b1576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212207ad8adca22c81a1cd4a2bef2b3888f2decbe19fa6efca8327fa5bbe847b8da3864736f6c634300060c0033",
  "deployedSourceMap": "1394:9781:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2517:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4593:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4593:166:4;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3584:106;;;:::i;:::-;;;;;;;;;;;;;;;;5226:317;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5226:317:4;;;;;;;;;;;;;;;;;:::i;3435:89::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5938:215;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5938:215:4;;;;;;;;:::i;3748:125::-;;;;;;;;;;;;;;;;-1:-1:-1;3748:125:4;-1:-1:-1;;;;;3748:125:4;;:::i;2719:93::-;;;:::i;6640:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6640:266:4;;;;;;;;:::i;4076:172::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4076:172:4;;;;;;;;:::i;4306:149::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4306:149:4;;;;;;;;;;:::i;2517:89::-;2594:5;2587:12;;;;;;;;-1:-1:-1;;2587:12:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2562:13;;2587:12;;2594:5;;2587:12;;2594:5;2587:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2517:89;:::o;4593:166::-;4676:4;4692:39;4701:12;:10;:12::i;:::-;4715:7;4724:6;4692:8;:39::i;:::-;-1:-1:-1;4748:4:4;4593:166;;;;:::o;3584:106::-;3671:12;;3584:106;:::o;5226:317::-;5332:4;5348:36;5358:6;5366:9;5377:6;5348:9;:36::i;:::-;5394:121;5403:6;5411:12;:10;:12::i;:::-;5425:89;5463:6;5425:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5425:19:4;;;;;;:11;:19;;;;;;5445:12;:10;:12::i;:::-;-1:-1:-1;;;;;5425:33:4;;;;;;;;;;;;-1:-1:-1;5425:33:4;;;:89;:37;:89::i;:::-;5394:8;:121::i;:::-;-1:-1:-1;5532:4:4;5226:317;;;;;:::o;3435:89::-;3508:9;;;;3435:89;:::o;5938:215::-;6026:4;6042:83;6051:12;:10;:12::i;:::-;6065:7;6074:50;6113:10;6074:11;:25;6086:12;:10;:12::i;:::-;-1:-1:-1;;;;;6074:25:4;;;;;;;;;;;;;;;;;-1:-1:-1;6074:25:4;;;:34;;;;;;;;;;;:38;:50::i;3748:125::-;-1:-1:-1;;;;;3848:18:4;3822:7;3848:18;;;:9;:18;;;;;;;3748:125::o;2719:93::-;2798:7;2791:14;;;;;;;;-1:-1:-1;;2791:14:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2766:13;;2791:14;;2798:7;;2791:14;;2798:7;2791:14;;;;;;;;;;;;;;;;;;;;;;;;6640:266;6733:4;6749:129;6758:12;:10;:12::i;:::-;6772:7;6781:96;6820:15;6781:96;;;;;;;;;;;;;;;;;:11;:25;6793:12;:10;:12::i;:::-;-1:-1:-1;;;;;6781:25:4;;;;;;;;;;;;;;;;;-1:-1:-1;6781:25:4;;;:34;;;;;;;;;;;:96;:38;:96::i;4076:172::-;4162:4;4178:42;4188:12;:10;:12::i;:::-;4202:9;4213:6;4178:9;:42::i;4306:149::-;-1:-1:-1;;;;;4421:18:4;;;4395:7;4421:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4306:149::o;828:104:8:-;915:10;828:104;:::o;9704:340:4:-;-1:-1:-1;;;;;9805:19:4;;9797:68;;;;-1:-1:-1;;;9797:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9883:21:4;;9875:68;;;;-1:-1:-1;;;9875:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9954:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10005:32;;;;;;;;;;;;;;;;;9704:340;;;:::o;7380:530::-;-1:-1:-1;;;;;7485:20:4;;7477:70;;;;-1:-1:-1;;;7477:70:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7565:23:4;;7557:71;;;;-1:-1:-1;;;7557:71:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7639:47;7660:6;7668:9;7679:6;7639:20;:47::i;:::-;7717:71;7739:6;7717:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7717:17:4;;;;;;:9;:17;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7697:17:4;;;;;;;:9;:17;;;;;;:91;;;;7821:20;;;;;;;:32;;7846:6;7821:24;:32::i;:::-;-1:-1:-1;;;;;7798:20:4;;;;;;;:9;:20;;;;;;;;;:55;;;;7868:35;;;;;;;7798:20;;7868:35;;;;;;;;;;;;;7380:530;;;:::o;5443:163:2:-;5529:7;5564:12;5556:6;;;;5548:29;;;;-1:-1:-1;;;5548:29:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5594:5:2;;;5443:163::o;2701:175::-;2759:7;2790:5;;;2813:6;;;;2805:46;;;;;-1:-1:-1;;;2805:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;2868:1;2701:175;-1:-1:-1;;;2701:175:2:o;11050:92:4:-;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    1394,
    11175
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x28B JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x402 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x450 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x46B JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4CC JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x534 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x548 JUMP JUMPDEST PUSH1 0x36 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x328 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x35C PUSH2 0x573 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x577 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x35 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F DUP5 DUP5 DUP5 PUSH2 0x663 JUMP JUMPDEST PUSH2 0x3EF DUP5 PUSH2 0x38B PUSH2 0x573 JUMP JUMPDEST PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x929 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x3C9 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7C0 JUMP JUMPDEST PUSH2 0x577 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x38 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x40F PUSH2 0x573 JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x34 PUSH1 0x0 PUSH2 0x420 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x857 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x37 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x4D9 PUSH2 0x573 JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x99A PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x34 PUSH1 0x0 PUSH2 0x503 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x541 PUSH2 0x573 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x976 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x601 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8E1 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x951 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8BE PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F8 DUP4 DUP4 DUP4 PUSH2 0x8B8 JUMP JUMPDEST PUSH2 0x735 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x903 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x764 SWAP1 DUP3 PUSH2 0x857 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x84F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x814 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7FC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x841 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x8B1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212207AD8 0xAD 0xCA 0x22 0xC8 BYTE SHR 0xD4 LOG2 0xBE CALLCODE 0xB3 DUP9 DUP16 0x2D 0xEC 0xBE NOT STATICCALL PUSH15 0xFCA8327FA5BBE847B8DA3864736F6C PUSH4 0x4300060C STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "6": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "DUP1",
      "path": "4"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "REVERT",
      "path": "4"
    },
    "16": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "POP",
      "path": "4"
    },
    "18": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "21": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "LT",
      "path": "4"
    },
    "22": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "29": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "SHR",
      "path": "4"
    },
    "32": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "DUP1",
      "path": "4"
    },
    "33": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x39509351"
    },
    "38": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "GT",
      "path": "4"
    },
    "39": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "43": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "DUP1",
      "path": "4"
    },
    "44": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x39509351"
    },
    "49": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "EQ",
      "path": "4"
    },
    "50": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1D9"
    },
    "53": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "54": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "DUP1",
      "path": "4"
    },
    "55": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x70A08231"
    },
    "60": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "EQ",
      "path": "4"
    },
    "61": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x205"
    },
    "64": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "65": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "DUP1",
      "path": "4"
    },
    "66": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x95D89B41"
    },
    "71": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "EQ",
      "path": "4"
    },
    "72": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x22B"
    },
    "75": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "76": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "DUP1",
      "path": "4"
    },
    "77": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA457C2D7"
    },
    "82": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "EQ",
      "path": "4"
    },
    "83": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x233"
    },
    "86": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "87": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "DUP1",
      "path": "4"
    },
    "88": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA9059CBB"
    },
    "93": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "EQ",
      "path": "4"
    },
    "94": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x25F"
    },
    "97": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "98": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "DUP1",
      "path": "4"
    },
    "99": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "EQ",
      "path": "4"
    },
    "105": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x28B"
    },
    "108": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "109": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA9"
    },
    "112": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "JUMP",
      "path": "4"
    },
    "113": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "114": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "DUP1",
      "path": "4"
    },
    "115": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x6FDDE03"
    },
    "120": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "EQ",
      "path": "4"
    },
    "121": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "125": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "DUP1",
      "path": "4"
    },
    "126": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x95EA7B3"
    },
    "131": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "EQ",
      "path": "4"
    },
    "132": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12B"
    },
    "135": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "136": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "DUP1",
      "path": "4"
    },
    "137": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x18160DDD"
    },
    "142": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "EQ",
      "path": "4"
    },
    "143": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16B"
    },
    "146": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "147": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "DUP1",
      "path": "4"
    },
    "148": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x23B872DD"
    },
    "153": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "EQ",
      "path": "4"
    },
    "154": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x185"
    },
    "157": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "158": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "DUP1",
      "path": "4"
    },
    "159": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x313CE567"
    },
    "164": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "EQ",
      "path": "4"
    },
    "165": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1BB"
    },
    "168": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "169": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "170": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "DUP1",
      "path": "4"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1394,
        11175
      ],
      "op": "REVERT",
      "path": "4"
    },
    "174": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "175": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB6"
    },
    "178": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2B9"
    },
    "181": {
      "fn": "ERC20Upgradeable.name",
      "jump": "i",
      "offset": [
        2517,
        2606
      ],
      "op": "JUMP",
      "path": "4"
    },
    "182": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "183": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "185": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "DUP1",
      "path": "4"
    },
    "186": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "187": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "189": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "DUP1",
      "path": "4"
    },
    "190": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "DUP3",
      "path": "4"
    },
    "191": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "192": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "DUP4",
      "path": "4"
    },
    "193": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "194": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "DUP2",
      "path": "4"
    },
    "195": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "DUP4",
      "path": "4"
    },
    "196": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "ADD",
      "path": "4"
    },
    "197": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "198": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "DUP4",
      "path": "4"
    },
    "199": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "200": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "201": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "202": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "DUP4",
      "path": "4"
    },
    "203": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "204": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "205": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "DUP4",
      "path": "4"
    },
    "206": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "ADD",
      "path": "4"
    },
    "207": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "208": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "DUP6",
      "path": "4"
    },
    "209": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "ADD",
      "path": "4"
    },
    "210": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "211": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "DUP1",
      "path": "4"
    },
    "212": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "DUP4",
      "path": "4"
    },
    "213": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "DUP4",
      "path": "4"
    },
    "214": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "216": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "217": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "DUP4",
      "path": "4"
    },
    "218": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "DUP2",
      "path": "4"
    },
    "219": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "LT",
      "path": "4"
    },
    "220": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "221": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF0"
    },
    "224": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "225": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "DUP2",
      "path": "4"
    },
    "226": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "DUP2",
      "path": "4"
    },
    "227": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "ADD",
      "path": "4"
    },
    "228": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "229": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "DUP4",
      "path": "4"
    },
    "230": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "DUP3",
      "path": "4"
    },
    "231": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "ADD",
      "path": "4"
    },
    "232": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "233": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "235": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "ADD",
      "path": "4"
    },
    "236": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD8"
    },
    "239": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "JUMP",
      "path": "4"
    },
    "240": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "241": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "POP",
      "path": "4"
    },
    "242": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "POP",
      "path": "4"
    },
    "243": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "POP",
      "path": "4"
    },
    "244": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "POP",
      "path": "4"
    },
    "245": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "246": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "POP",
      "path": "4"
    },
    "247": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "248": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "DUP2",
      "path": "4"
    },
    "249": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "ADD",
      "path": "4"
    },
    "250": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "251": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "253": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "AND",
      "path": "4"
    },
    "254": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "DUP1",
      "path": "4"
    },
    "255": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "256": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11D"
    },
    "259": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "260": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "DUP1",
      "path": "4"
    },
    "261": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "DUP3",
      "path": "4"
    },
    "262": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "SUB",
      "path": "4"
    },
    "263": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "DUP1",
      "path": "4"
    },
    "264": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "265": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "267": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "DUP4",
      "path": "4"
    },
    "268": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "270": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "SUB",
      "path": "4"
    },
    "271": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "274": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "EXP",
      "path": "4"
    },
    "275": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "SUB",
      "path": "4"
    },
    "276": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "NOT",
      "path": "4"
    },
    "277": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "AND",
      "path": "4"
    },
    "278": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "DUP2",
      "path": "4"
    },
    "279": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "280": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "282": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "ADD",
      "path": "4"
    },
    "283": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "284": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "POP",
      "path": "4"
    },
    "285": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "286": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "POP",
      "path": "4"
    },
    "287": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "288": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "POP",
      "path": "4"
    },
    "289": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "POP",
      "path": "4"
    },
    "290": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "POP",
      "path": "4"
    },
    "291": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "293": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "294": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "DUP1",
      "path": "4"
    },
    "295": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "296": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "SUB",
      "path": "4"
    },
    "297": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "298": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "RETURN",
      "path": "4"
    },
    "299": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "300": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x157"
    },
    "303": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "305": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "DUP1",
      "path": "4"
    },
    "306": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "307": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "SUB",
      "path": "4"
    },
    "308": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "310": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "DUP2",
      "path": "4"
    },
    "311": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "LT",
      "path": "4"
    },
    "312": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "313": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x141"
    },
    "316": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "317": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "319": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "DUP1",
      "path": "4"
    },
    "320": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "REVERT",
      "path": "4"
    },
    "321": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "322": {
      "op": "POP"
    },
    "323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "329": {
      "op": "SHL"
    },
    "330": {
      "op": "SUB"
    },
    "331": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "DUP2",
      "path": "4"
    },
    "332": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "333": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "AND",
      "path": "4"
    },
    "334": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "335": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "337": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "ADD",
      "path": "4"
    },
    "338": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "339": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x34F"
    },
    "342": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4593,
        4759
      ],
      "op": "JUMP",
      "path": "4"
    },
    "343": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "344": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "346": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "DUP1",
      "path": "4"
    },
    "347": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "348": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "349": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "350": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "351": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "DUP3",
      "path": "4"
    },
    "352": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "353": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "354": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "355": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "DUP2",
      "path": "4"
    },
    "356": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "357": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "SUB",
      "path": "4"
    },
    "358": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "360": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "ADD",
      "path": "4"
    },
    "361": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "362": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "RETURN",
      "path": "4"
    },
    "363": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3584,
        3690
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "364": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3584,
        3690
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x173"
    },
    "367": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3584,
        3690
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x36C"
    },
    "370": {
      "fn": "ERC20Upgradeable.totalSupply",
      "jump": "i",
      "offset": [
        3584,
        3690
      ],
      "op": "JUMP",
      "path": "4"
    },
    "371": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3584,
        3690
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "372": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3584,
        3690
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "374": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3584,
        3690
      ],
      "op": "DUP1",
      "path": "4"
    },
    "375": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3584,
        3690
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "376": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3584,
        3690
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "377": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3584,
        3690
      ],
      "op": "DUP3",
      "path": "4"
    },
    "378": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3584,
        3690
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "379": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3584,
        3690
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "380": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3584,
        3690
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "381": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3584,
        3690
      ],
      "op": "DUP2",
      "path": "4"
    },
    "382": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3584,
        3690
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "383": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3584,
        3690
      ],
      "op": "SUB",
      "path": "4"
    },
    "384": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3584,
        3690
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "386": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3584,
        3690
      ],
      "op": "ADD",
      "path": "4"
    },
    "387": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3584,
        3690
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "388": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3584,
        3690
      ],
      "op": "RETURN",
      "path": "4"
    },
    "389": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "390": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x157"
    },
    "393": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "395": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "DUP1",
      "path": "4"
    },
    "396": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "397": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "SUB",
      "path": "4"
    },
    "398": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "400": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "DUP2",
      "path": "4"
    },
    "401": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "LT",
      "path": "4"
    },
    "402": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "403": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x19B"
    },
    "406": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "407": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "409": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "DUP1",
      "path": "4"
    },
    "410": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "REVERT",
      "path": "4"
    },
    "411": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "412": {
      "op": "POP"
    },
    "413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "417": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "419": {
      "op": "SHL"
    },
    "420": {
      "op": "SUB"
    },
    "421": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "DUP2",
      "path": "4"
    },
    "422": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "423": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "DUP2",
      "path": "4"
    },
    "424": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "AND",
      "path": "4"
    },
    "425": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "426": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "428": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "DUP2",
      "path": "4"
    },
    "429": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "ADD",
      "path": "4"
    },
    "430": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "431": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "432": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "433": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "AND",
      "path": "4"
    },
    "434": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "435": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "437": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "ADD",
      "path": "4"
    },
    "438": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "439": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x372"
    },
    "442": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5226,
        5543
      ],
      "op": "JUMP",
      "path": "4"
    },
    "443": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3435,
        3524
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "444": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3435,
        3524
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C3"
    },
    "447": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3435,
        3524
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3F9"
    },
    "450": {
      "fn": "ERC20Upgradeable.decimals",
      "jump": "i",
      "offset": [
        3435,
        3524
      ],
      "op": "JUMP",
      "path": "4"
    },
    "451": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3435,
        3524
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "452": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3435,
        3524
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "454": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3435,
        3524
      ],
      "op": "DUP1",
      "path": "4"
    },
    "455": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3435,
        3524
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "456": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3435,
        3524
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "458": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3435,
        3524
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "459": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3435,
        3524
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "460": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3435,
        3524
      ],
      "op": "AND",
      "path": "4"
    },
    "461": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3435,
        3524
      ],
      "op": "DUP3",
      "path": "4"
    },
    "462": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3435,
        3524
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "463": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3435,
        3524
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "464": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3435,
        3524
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "465": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3435,
        3524
      ],
      "op": "DUP2",
      "path": "4"
    },
    "466": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3435,
        3524
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "467": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3435,
        3524
      ],
      "op": "SUB",
      "path": "4"
    },
    "468": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3435,
        3524
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "470": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3435,
        3524
      ],
      "op": "ADD",
      "path": "4"
    },
    "471": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3435,
        3524
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "472": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3435,
        3524
      ],
      "op": "RETURN",
      "path": "4"
    },
    "473": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        5938,
        6153
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "474": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        5938,
        6153
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x157"
    },
    "477": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        5938,
        6153
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "479": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        5938,
        6153
      ],
      "op": "DUP1",
      "path": "4"
    },
    "480": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        5938,
        6153
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "481": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        5938,
        6153
      ],
      "op": "SUB",
      "path": "4"
    },
    "482": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        5938,
        6153
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "484": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        5938,
        6153
      ],
      "op": "DUP2",
      "path": "4"
    },
    "485": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        5938,
        6153
      ],
      "op": "LT",
      "path": "4"
    },
    "486": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        5938,
        6153
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "487": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        5938,
        6153
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EF"
    },
    "490": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        5938,
        6153
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "491": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        5938,
        6153
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "493": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        5938,
        6153
      ],
      "op": "DUP1",
      "path": "4"
    },
    "494": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        5938,
        6153
      ],
      "op": "REVERT",
      "path": "4"
    },
    "495": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        5938,
        6153
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "496": {
      "op": "POP"
    },
    "497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "503": {
      "op": "SHL"
    },
    "504": {
      "op": "SUB"
    },
    "505": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        5938,
        6153
      ],
      "op": "DUP2",
      "path": "4"
    },
    "506": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        5938,
        6153
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "507": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        5938,
        6153
      ],
      "op": "AND",
      "path": "4"
    },
    "508": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        5938,
        6153
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "509": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        5938,
        6153
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "511": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        5938,
        6153
      ],
      "op": "ADD",
      "path": "4"
    },
    "512": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        5938,
        6153
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "513": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        5938,
        6153
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x402"
    },
    "516": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        5938,
        6153
      ],
      "op": "JUMP",
      "path": "4"
    },
    "517": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3748,
        3873
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "518": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3748,
        3873
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x173"
    },
    "521": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3748,
        3873
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "523": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3748,
        3873
      ],
      "op": "DUP1",
      "path": "4"
    },
    "524": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3748,
        3873
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "525": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3748,
        3873
      ],
      "op": "SUB",
      "path": "4"
    },
    "526": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3748,
        3873
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "528": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3748,
        3873
      ],
      "op": "DUP2",
      "path": "4"
    },
    "529": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3748,
        3873
      ],
      "op": "LT",
      "path": "4"
    },
    "530": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3748,
        3873
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "531": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3748,
        3873
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21B"
    },
    "534": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3748,
        3873
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "535": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3748,
        3873
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "537": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3748,
        3873
      ],
      "op": "DUP1",
      "path": "4"
    },
    "538": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3748,
        3873
      ],
      "op": "REVERT",
      "path": "4"
    },
    "539": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3748,
        3873
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "540": {
      "op": "POP"
    },
    "541": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3748,
        3873
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "546": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "548": {
      "op": "SHL"
    },
    "549": {
      "op": "SUB"
    },
    "550": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3748,
        3873
      ],
      "op": "AND",
      "path": "4"
    },
    "551": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3748,
        3873
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x450"
    },
    "554": {
      "fn": "ERC20Upgradeable.balanceOf",
      "jump": "i",
      "offset": [
        3748,
        3873
      ],
      "op": "JUMP",
      "path": "4"
    },
    "555": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2719,
        2812
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "556": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2719,
        2812
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB6"
    },
    "559": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2719,
        2812
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x46B"
    },
    "562": {
      "fn": "ERC20Upgradeable.symbol",
      "jump": "i",
      "offset": [
        2719,
        2812
      ],
      "op": "JUMP",
      "path": "4"
    },
    "563": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6640,
        6906
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "564": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6640,
        6906
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x157"
    },
    "567": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6640,
        6906
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "569": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6640,
        6906
      ],
      "op": "DUP1",
      "path": "4"
    },
    "570": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6640,
        6906
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "571": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6640,
        6906
      ],
      "op": "SUB",
      "path": "4"
    },
    "572": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6640,
        6906
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "574": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6640,
        6906
      ],
      "op": "DUP2",
      "path": "4"
    },
    "575": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6640,
        6906
      ],
      "op": "LT",
      "path": "4"
    },
    "576": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6640,
        6906
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "577": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6640,
        6906
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x249"
    },
    "580": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6640,
        6906
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "581": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6640,
        6906
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "583": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6640,
        6906
      ],
      "op": "DUP1",
      "path": "4"
    },
    "584": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6640,
        6906
      ],
      "op": "REVERT",
      "path": "4"
    },
    "585": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6640,
        6906
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "586": {
      "op": "POP"
    },
    "587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "591": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "593": {
      "op": "SHL"
    },
    "594": {
      "op": "SUB"
    },
    "595": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6640,
        6906
      ],
      "op": "DUP2",
      "path": "4"
    },
    "596": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6640,
        6906
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "597": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6640,
        6906
      ],
      "op": "AND",
      "path": "4"
    },
    "598": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6640,
        6906
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "599": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6640,
        6906
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "601": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6640,
        6906
      ],
      "op": "ADD",
      "path": "4"
    },
    "602": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6640,
        6906
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "603": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6640,
        6906
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4CC"
    },
    "606": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6640,
        6906
      ],
      "op": "JUMP",
      "path": "4"
    },
    "607": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4076,
        4248
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "608": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4076,
        4248
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x157"
    },
    "611": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4076,
        4248
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "613": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4076,
        4248
      ],
      "op": "DUP1",
      "path": "4"
    },
    "614": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4076,
        4248
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "615": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4076,
        4248
      ],
      "op": "SUB",
      "path": "4"
    },
    "616": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4076,
        4248
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "618": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4076,
        4248
      ],
      "op": "DUP2",
      "path": "4"
    },
    "619": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4076,
        4248
      ],
      "op": "LT",
      "path": "4"
    },
    "620": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4076,
        4248
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "621": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4076,
        4248
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x275"
    },
    "624": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4076,
        4248
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "625": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4076,
        4248
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "627": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4076,
        4248
      ],
      "op": "DUP1",
      "path": "4"
    },
    "628": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4076,
        4248
      ],
      "op": "REVERT",
      "path": "4"
    },
    "629": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4076,
        4248
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "630": {
      "op": "POP"
    },
    "631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "637": {
      "op": "SHL"
    },
    "638": {
      "op": "SUB"
    },
    "639": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4076,
        4248
      ],
      "op": "DUP2",
      "path": "4"
    },
    "640": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4076,
        4248
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "641": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4076,
        4248
      ],
      "op": "AND",
      "path": "4"
    },
    "642": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4076,
        4248
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "643": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4076,
        4248
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "645": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4076,
        4248
      ],
      "op": "ADD",
      "path": "4"
    },
    "646": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4076,
        4248
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "647": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4076,
        4248
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x534"
    },
    "650": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4076,
        4248
      ],
      "op": "JUMP",
      "path": "4"
    },
    "651": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4306,
        4455
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "652": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4306,
        4455
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x173"
    },
    "655": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4306,
        4455
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "657": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4306,
        4455
      ],
      "op": "DUP1",
      "path": "4"
    },
    "658": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4306,
        4455
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "659": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4306,
        4455
      ],
      "op": "SUB",
      "path": "4"
    },
    "660": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4306,
        4455
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "662": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4306,
        4455
      ],
      "op": "DUP2",
      "path": "4"
    },
    "663": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4306,
        4455
      ],
      "op": "LT",
      "path": "4"
    },
    "664": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4306,
        4455
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "665": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4306,
        4455
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A1"
    },
    "668": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4306,
        4455
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "669": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4306,
        4455
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "671": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4306,
        4455
      ],
      "op": "DUP1",
      "path": "4"
    },
    "672": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4306,
        4455
      ],
      "op": "REVERT",
      "path": "4"
    },
    "673": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4306,
        4455
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "674": {
      "op": "POP"
    },
    "675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "681": {
      "op": "SHL"
    },
    "682": {
      "op": "SUB"
    },
    "683": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4306,
        4455
      ],
      "op": "DUP2",
      "path": "4"
    },
    "684": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4306,
        4455
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "685": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4306,
        4455
      ],
      "op": "DUP2",
      "path": "4"
    },
    "686": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4306,
        4455
      ],
      "op": "AND",
      "path": "4"
    },
    "687": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4306,
        4455
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "688": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4306,
        4455
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "690": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4306,
        4455
      ],
      "op": "ADD",
      "path": "4"
    },
    "691": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4306,
        4455
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "692": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4306,
        4455
      ],
      "op": "AND",
      "path": "4"
    },
    "693": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4306,
        4455
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x548"
    },
    "696": {
      "fn": "ERC20Upgradeable.allowance",
      "jump": "i",
      "offset": [
        4306,
        4455
      ],
      "op": "JUMP",
      "path": "4"
    },
    "697": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "698": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2594,
        2599
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 0,
      "value": "0x36"
    },
    "700": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "DUP1",
      "path": "4"
    },
    "701": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "702": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "704": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "DUP1",
      "path": "4"
    },
    "705": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "706": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "708": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "710": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "714": {
      "op": "NOT"
    },
    "715": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "718": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "720": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "DUP9",
      "path": "4"
    },
    "721": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "AND",
      "path": "4"
    },
    "722": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "723": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "MUL",
      "path": "4"
    },
    "724": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "ADD",
      "path": "4"
    },
    "725": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "726": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "727": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "AND",
      "path": "4"
    },
    "728": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "729": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "730": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "731": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "DIV",
      "path": "4"
    },
    "732": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "733": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "DUP5",
      "path": "4"
    },
    "734": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "ADD",
      "path": "4"
    },
    "735": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "DUP2",
      "path": "4"
    },
    "736": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "737": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "DIV",
      "path": "4"
    },
    "738": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "DUP2",
      "path": "4"
    },
    "739": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "MUL",
      "path": "4"
    },
    "740": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "DUP3",
      "path": "4"
    },
    "741": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "ADD",
      "path": "4"
    },
    "742": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "DUP2",
      "path": "4"
    },
    "743": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "ADD",
      "path": "4"
    },
    "744": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "745": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "746": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "747": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "DUP3",
      "path": "4"
    },
    "748": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "DUP2",
      "path": "4"
    },
    "749": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "750": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2562,
        2575
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "752": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2562,
        2575
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "753": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "754": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "755": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2594,
        2599
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "756": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2594,
        2599
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "757": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "DUP4",
      "path": "4"
    },
    "758": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "ADD",
      "path": "4"
    },
    "759": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2594,
        2599
      ],
      "op": "DUP3",
      "path": "4"
    },
    "760": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "DUP3",
      "path": "4"
    },
    "761": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "DUP1",
      "path": "4"
    },
    "762": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "763": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x345"
    },
    "766": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "767": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "DUP1",
      "path": "4"
    },
    "768": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "770": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "LT",
      "path": "4"
    },
    "771": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x31A"
    },
    "774": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "775": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "778": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "DUP1",
      "path": "4"
    },
    "779": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "DUP4",
      "path": "4"
    },
    "780": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "781": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "DIV",
      "path": "4"
    },
    "782": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "MUL",
      "path": "4"
    },
    "783": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "DUP4",
      "path": "4"
    },
    "784": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "785": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "786": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "788": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "ADD",
      "path": "4"
    },
    "789": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "790": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x345"
    },
    "793": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "JUMP",
      "path": "4"
    },
    "794": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "795": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "DUP3",
      "path": "4"
    },
    "796": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "ADD",
      "path": "4"
    },
    "797": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "798": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "799": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "801": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "802": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "804": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "806": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "807": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "808": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "809": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "DUP2",
      "path": "4"
    },
    "810": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "811": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "DUP2",
      "path": "4"
    },
    "812": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "813": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "814": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "816": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "ADD",
      "path": "4"
    },
    "817": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "818": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "820": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "ADD",
      "path": "4"
    },
    "821": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "DUP1",
      "path": "4"
    },
    "822": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "DUP4",
      "path": "4"
    },
    "823": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "GT",
      "path": "4"
    },
    "824": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x328"
    },
    "827": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "828": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "DUP3",
      "path": "4"
    },
    "829": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "830": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "SUB",
      "path": "4"
    },
    "831": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "833": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "AND",
      "path": "4"
    },
    "834": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "DUP3",
      "path": "4"
    },
    "835": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "ADD",
      "path": "4"
    },
    "836": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "837": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "838": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "POP",
      "path": "4"
    },
    "839": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "POP",
      "path": "4"
    },
    "840": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "POP",
      "path": "4"
    },
    "841": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "POP",
      "path": "4"
    },
    "842": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "POP",
      "path": "4"
    },
    "843": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "844": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2587,
        2599
      ],
      "op": "POP",
      "path": "4"
    },
    "845": {
      "fn": "ERC20Upgradeable.name",
      "offset": [
        2517,
        2606
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "846": {
      "fn": "ERC20Upgradeable.name",
      "jump": "o",
      "offset": [
        2517,
        2606
      ],
      "op": "JUMP",
      "path": "4"
    },
    "847": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "848": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4676,
        4680
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "850": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4692,
        4731
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 1,
      "value": "0x363"
    },
    "853": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4701,
        4713
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x35C"
    },
    "856": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4701,
        4711
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x573"
    },
    "859": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4701,
        4713
      ],
      "op": "JUMP",
      "path": "4"
    },
    "860": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4701,
        4713
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "861": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4715,
        4722
      ],
      "op": "DUP5",
      "path": "4"
    },
    "862": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4724,
        4730
      ],
      "op": "DUP5",
      "path": "4"
    },
    "863": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4692,
        4700
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x577"
    },
    "866": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "i",
      "offset": [
        4692,
        4731
      ],
      "op": "JUMP",
      "path": "4"
    },
    "867": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4692,
        4731
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "868": {
      "op": "POP"
    },
    "869": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4748,
        4752
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 2,
      "value": "0x1"
    },
    "871": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "872": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "873": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "POP",
      "path": "4"
    },
    "874": {
      "fn": "ERC20Upgradeable.approve",
      "offset": [
        4593,
        4759
      ],
      "op": "POP",
      "path": "4"
    },
    "875": {
      "fn": "ERC20Upgradeable.approve",
      "jump": "o",
      "offset": [
        4593,
        4759
      ],
      "op": "JUMP",
      "path": "4"
    },
    "876": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3584,
        3690
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "877": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3671,
        3683
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 3,
      "value": "0x35"
    },
    "879": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3671,
        3683
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "880": {
      "fn": "ERC20Upgradeable.totalSupply",
      "offset": [
        3584,
        3690
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "881": {
      "fn": "ERC20Upgradeable.totalSupply",
      "jump": "o",
      "offset": [
        3584,
        3690
      ],
      "op": "JUMP",
      "path": "4"
    },
    "882": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "883": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5332,
        5336
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "885": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5348,
        5384
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 4,
      "value": "0x37F"
    },
    "888": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5358,
        5364
      ],
      "op": "DUP5",
      "path": "4"
    },
    "889": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5366,
        5375
      ],
      "op": "DUP5",
      "path": "4"
    },
    "890": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5377,
        5383
      ],
      "op": "DUP5",
      "path": "4"
    },
    "891": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5348,
        5357
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x663"
    },
    "894": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5348,
        5384
      ],
      "op": "JUMP",
      "path": "4"
    },
    "895": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5348,
        5384
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "896": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5394,
        5515
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 5,
      "value": "0x3EF"
    },
    "899": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5403,
        5409
      ],
      "op": "DUP5",
      "path": "4"
    },
    "900": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5411,
        5423
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x38B"
    },
    "903": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5411,
        5421
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x573"
    },
    "906": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5411,
        5423
      ],
      "op": "JUMP",
      "path": "4"
    },
    "907": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5411,
        5423
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "908": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5514
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3EA"
    },
    "911": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5463,
        5469
      ],
      "op": "DUP6",
      "path": "4"
    },
    "912": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5514
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "914": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5514
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "915": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5514
      ],
      "op": "DUP1",
      "path": "4"
    },
    "916": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5514
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "918": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5514
      ],
      "op": "ADD",
      "path": "4"
    },
    "919": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5514
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "921": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5514
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "922": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5514
      ],
      "op": "DUP1",
      "path": "4"
    },
    "923": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5514
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x28"
    },
    "925": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5514
      ],
      "op": "DUP2",
      "path": "4"
    },
    "926": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5514
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "927": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5514
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "929": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5514
      ],
      "op": "ADD",
      "path": "4"
    },
    "930": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5514
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x929"
    },
    "933": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5514
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x28"
    },
    "935": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5514
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "936": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5514
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "943": {
      "op": "SHL"
    },
    "944": {
      "op": "SUB"
    },
    "945": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5444
      ],
      "op": "DUP11",
      "path": "4"
    },
    "946": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5444
      ],
      "op": "AND",
      "path": "4"
    },
    "947": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5444
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "949": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5444
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "950": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5444
      ],
      "op": "DUP2",
      "path": "4"
    },
    "951": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5444
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "952": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5436
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x34"
    },
    "954": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5444
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "956": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5444
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "957": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5444
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "959": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5444
      ],
      "op": "DUP2",
      "path": "4"
    },
    "960": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5444
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "961": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5444
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "962": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5445,
        5457
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3C9"
    },
    "965": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5445,
        5455
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x573"
    },
    "968": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5445,
        5457
      ],
      "op": "JUMP",
      "path": "4"
    },
    "969": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5445,
        5457
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "974": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "976": {
      "op": "SHL"
    },
    "977": {
      "op": "SUB"
    },
    "978": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5458
      ],
      "op": "AND",
      "path": "4"
    },
    "979": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5458
      ],
      "op": "DUP2",
      "path": "4"
    },
    "980": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5458
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "981": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5458
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "983": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5458
      ],
      "op": "DUP2",
      "path": "4"
    },
    "984": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5458
      ],
      "op": "ADD",
      "path": "4"
    },
    "985": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5458
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "986": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5458
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "987": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5458
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "988": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5458
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "989": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5458
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "991": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5458
      ],
      "op": "ADD",
      "path": "4"
    },
    "992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "994": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5458
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "995": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5458
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "996": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5458
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "997": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5514
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "998": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5462
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7C0"
    },
    "1001": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5425,
        5514
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1002": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5425,
        5514
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1003": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5394,
        5402
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x577"
    },
    "1006": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "i",
      "offset": [
        5394,
        5515
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1007": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5394,
        5515
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1008": {
      "op": "POP"
    },
    "1009": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5532,
        5536
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 6,
      "value": "0x1"
    },
    "1011": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1012": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1013": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "POP",
      "path": "4"
    },
    "1014": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "POP",
      "path": "4"
    },
    "1015": {
      "fn": "ERC20Upgradeable.transferFrom",
      "offset": [
        5226,
        5543
      ],
      "op": "POP",
      "path": "4"
    },
    "1016": {
      "fn": "ERC20Upgradeable.transferFrom",
      "jump": "o",
      "offset": [
        5226,
        5543
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1017": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3435,
        3524
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1018": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3508,
        3517
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 7,
      "value": "0x38"
    },
    "1020": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3508,
        3517
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1021": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3508,
        3517
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "1023": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3508,
        3517
      ],
      "op": "AND",
      "path": "4"
    },
    "1024": {
      "fn": "ERC20Upgradeable.decimals",
      "offset": [
        3435,
        3524
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1025": {
      "fn": "ERC20Upgradeable.decimals",
      "jump": "o",
      "offset": [
        3435,
        3524
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1026": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        5938,
        6153
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1027": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6026,
        6030
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1029": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6042,
        6125
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 8,
      "value": "0x363"
    },
    "1032": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6051,
        6063
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x40F"
    },
    "1035": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6051,
        6061
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x573"
    },
    "1038": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6051,
        6063
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1039": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6051,
        6063
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1040": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6065,
        6072
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1041": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6124
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3EA"
    },
    "1044": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6113,
        6123
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1045": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6085
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x34"
    },
    "1047": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6099
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1049": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6086,
        6098
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x420"
    },
    "1052": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6086,
        6096
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x573"
    },
    "1055": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6086,
        6098
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1056": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6086,
        6098
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1063": {
      "op": "SHL"
    },
    "1064": {
      "op": "SUB"
    },
    "1065": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6099
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1066": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6099
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1067": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6099
      ],
      "op": "AND",
      "path": "4"
    },
    "1068": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6099
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1069": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6099
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1070": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6099
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1072": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6099
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1073": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6099
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1074": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6099
      ],
      "op": "ADD",
      "path": "4"
    },
    "1075": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6099
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1076": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6099
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1077": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6099
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1078": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6099
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1079": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6099
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1081": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6099
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1082": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6099
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1083": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6099
      ],
      "op": "ADD",
      "path": "4"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1086": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6099
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1087": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6099
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1088": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6099
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1089": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6108
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1090": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6108
      ],
      "op": "DUP13",
      "path": "4"
    },
    "1091": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6108
      ],
      "op": "AND",
      "path": "4"
    },
    "1092": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6108
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1093": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6108
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1094": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6108
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1095": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6108
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1096": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6108
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1097": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6108
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1098": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6108
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1099": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6108
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1100": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "offset": [
        6074,
        6112
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x857"
    },
    "1103": {
      "fn": "ERC20Upgradeable.increaseAllowance",
      "jump": "i",
      "offset": [
        6074,
        6124
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1104": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3748,
        3873
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1111": {
      "op": "SHL"
    },
    "1112": {
      "op": "SUB"
    },
    "1113": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3848,
        3866
      ],
      "op": "AND",
      "path": "4",
      "statement": 9
    },
    "1114": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3822,
        3829
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1116": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3848,
        3866
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1117": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3848,
        3866
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1118": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3848,
        3866
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1119": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3848,
        3857
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x33"
    },
    "1121": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3848,
        3866
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1123": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3848,
        3866
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1124": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3848,
        3866
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1126": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3848,
        3866
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1127": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3848,
        3866
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1128": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3848,
        3866
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1129": {
      "fn": "ERC20Upgradeable.balanceOf",
      "offset": [
        3848,
        3866
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1130": {
      "fn": "ERC20Upgradeable.balanceOf",
      "jump": "o",
      "offset": [
        3748,
        3873
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1131": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2719,
        2812
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1132": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2798,
        2805
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 10,
      "value": "0x37"
    },
    "1134": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1135": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1136": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1138": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1139": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1140": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1142": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1144": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1148": {
      "op": "NOT"
    },
    "1149": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "1152": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1154": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "DUP9",
      "path": "4"
    },
    "1155": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "AND",
      "path": "4"
    },
    "1156": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1157": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "MUL",
      "path": "4"
    },
    "1158": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "ADD",
      "path": "4"
    },
    "1159": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1160": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "1161": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "AND",
      "path": "4"
    },
    "1162": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1163": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1164": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1165": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "DIV",
      "path": "4"
    },
    "1166": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1167": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1168": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "ADD",
      "path": "4"
    },
    "1169": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1170": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1171": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "DIV",
      "path": "4"
    },
    "1172": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1173": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "MUL",
      "path": "4"
    },
    "1174": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1175": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "ADD",
      "path": "4"
    },
    "1176": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1177": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "ADD",
      "path": "4"
    },
    "1178": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1179": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1180": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1181": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1182": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1183": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1184": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2766,
        2779
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "1186": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2766,
        2779
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1187": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1188": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1189": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2798,
        2805
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1190": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2798,
        2805
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1191": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1192": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "ADD",
      "path": "4"
    },
    "1193": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2798,
        2805
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1194": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1195": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1196": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1197": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x345"
    },
    "1200": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1201": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1202": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1204": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "LT",
      "path": "4"
    },
    "1205": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x31A"
    },
    "1208": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1209": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "1212": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1213": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1214": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1215": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "DIV",
      "path": "4"
    },
    "1216": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "MUL",
      "path": "4"
    },
    "1217": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1218": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1219": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1220": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1222": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "ADD",
      "path": "4"
    },
    "1223": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1224": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x345"
    },
    "1227": {
      "fn": "ERC20Upgradeable.symbol",
      "offset": [
        2791,
        2805
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1228": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6640,
        6906
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1229": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6733,
        6737
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1231": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6749,
        6878
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 11,
      "value": "0x363"
    },
    "1234": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6758,
        6770
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4D9"
    },
    "1237": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6758,
        6768
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x573"
    },
    "1240": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6758,
        6770
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1241": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6758,
        6770
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1242": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6772,
        6779
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1243": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6877
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3EA"
    },
    "1246": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6820,
        6835
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1247": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6877
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1249": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6877
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1250": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6877
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1251": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6877
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "1253": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6877
      ],
      "op": "ADD",
      "path": "4"
    },
    "1254": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6877
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1256": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6877
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1257": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6877
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1258": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6877
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x25"
    },
    "1260": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6877
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1261": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6877
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1262": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6877
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1264": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6877
      ],
      "op": "ADD",
      "path": "4"
    },
    "1265": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6877
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x99A"
    },
    "1268": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6877
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x25"
    },
    "1270": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6877
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1271": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6877
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "1272": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6792
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x34"
    },
    "1274": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6806
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1276": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6793,
        6805
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x503"
    },
    "1279": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6793,
        6803
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x573"
    },
    "1282": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6793,
        6805
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1283": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6793,
        6805
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1290": {
      "op": "SHL"
    },
    "1291": {
      "op": "SUB"
    },
    "1292": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6806
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1293": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6806
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1294": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6806
      ],
      "op": "AND",
      "path": "4"
    },
    "1295": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6806
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1296": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6806
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1297": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6806
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1299": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6806
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1300": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6806
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1301": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6806
      ],
      "op": "ADD",
      "path": "4"
    },
    "1302": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6806
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1303": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6806
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1304": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6806
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1305": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6806
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1306": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6806
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1308": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6806
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1309": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6806
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1310": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6806
      ],
      "op": "ADD",
      "path": "4"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1313": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6806
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1314": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6806
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1315": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6806
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1316": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6815
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1317": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6815
      ],
      "op": "DUP14",
      "path": "4"
    },
    "1318": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6815
      ],
      "op": "AND",
      "path": "4"
    },
    "1319": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6815
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1320": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6815
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1321": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6815
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1322": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6815
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1323": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6815
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1324": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6815
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1325": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6815
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1326": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6815
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1327": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6877
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1328": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "offset": [
        6781,
        6819
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7C0"
    },
    "1331": {
      "fn": "ERC20Upgradeable.decreaseAllowance",
      "jump": "i",
      "offset": [
        6781,
        6877
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1332": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4076,
        4248
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1333": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4162,
        4166
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1335": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4178,
        4220
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 12,
      "value": "0x363"
    },
    "1338": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4188,
        4200
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x541"
    },
    "1341": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4188,
        4198
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x573"
    },
    "1344": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4188,
        4200
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1345": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4188,
        4200
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1346": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4202,
        4211
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1347": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4213,
        4219
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1348": {
      "fn": "ERC20Upgradeable.transfer",
      "offset": [
        4178,
        4187
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x663"
    },
    "1351": {
      "fn": "ERC20Upgradeable.transfer",
      "jump": "i",
      "offset": [
        4178,
        4220
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1352": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4306,
        4455
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1357": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1359": {
      "op": "SHL"
    },
    "1360": {
      "op": "SUB"
    },
    "1361": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4421,
        4439
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 13
    },
    "1362": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4421,
        4439
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1363": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4421,
        4439
      ],
      "op": "AND",
      "path": "4"
    },
    "1364": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4395,
        4402
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1366": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4421,
        4439
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1367": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4421,
        4439
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1368": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4421,
        4439
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1369": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4421,
        4432
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x34"
    },
    "1371": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4421,
        4439
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1373": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4421,
        4439
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1374": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4421,
        4439
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1375": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4421,
        4439
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1376": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4421,
        4439
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1378": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4421,
        4439
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1379": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4421,
        4439
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1380": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4421,
        4439
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1381": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4421,
        4448
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1382": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4421,
        4448
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1383": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4421,
        4448
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1384": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4421,
        4448
      ],
      "op": "AND",
      "path": "4"
    },
    "1385": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4421,
        4448
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1386": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4421,
        4448
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1387": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4421,
        4448
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1388": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4421,
        4448
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1389": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4421,
        4448
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1390": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4421,
        4448
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1391": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4421,
        4448
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1392": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4421,
        4448
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1393": {
      "fn": "ERC20Upgradeable.allowance",
      "offset": [
        4421,
        4448
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1394": {
      "fn": "ERC20Upgradeable.allowance",
      "jump": "o",
      "offset": [
        4306,
        4455
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1395": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        828,
        932
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1396": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        915,
        925
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 14
    },
    "1397": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        828,
        932
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1398": {
      "fn": "ContextUpgradeable._msgSender",
      "jump": "o",
      "offset": [
        828,
        932
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1399": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9704,
        10044
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1406": {
      "op": "SHL"
    },
    "1407": {
      "op": "SUB"
    },
    "1408": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9805,
        9824
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 15
    },
    "1409": {
      "branch": 29,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9805,
        9824
      ],
      "op": "AND",
      "path": "4"
    },
    "1410": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5BC"
    },
    "1413": {
      "branch": 29,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1414": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1416": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1417": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1423": {
      "op": "SHL"
    },
    "1424": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1425": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1426": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1428": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "ADD",
      "path": "4"
    },
    "1429": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1430": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1431": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1433": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "ADD",
      "path": "4"
    },
    "1434": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1435": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1436": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "SUB",
      "path": "4"
    },
    "1437": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1438": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1439": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "1441": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1442": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1443": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1445": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "ADD",
      "path": "4"
    },
    "1446": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1447": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x976"
    },
    "1450": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "1452": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1453": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "1454": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1456": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "ADD",
      "path": "4"
    },
    "1457": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1458": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "POP",
      "path": "4"
    },
    "1459": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "POP",
      "path": "4"
    },
    "1460": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1462": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1463": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1464": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1465": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "SUB",
      "path": "4"
    },
    "1466": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1467": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1468": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9797,
        9865
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1475": {
      "op": "SHL"
    },
    "1476": {
      "op": "SUB"
    },
    "1477": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9883,
        9904
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 16
    },
    "1478": {
      "branch": 30,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9883,
        9904
      ],
      "op": "AND",
      "path": "4"
    },
    "1479": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x601"
    },
    "1482": {
      "branch": 30,
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1483": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1485": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1486": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1490": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1492": {
      "op": "SHL"
    },
    "1493": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1494": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1495": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1497": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "ADD",
      "path": "4"
    },
    "1498": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1499": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1500": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1502": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "ADD",
      "path": "4"
    },
    "1503": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1504": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1505": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "SUB",
      "path": "4"
    },
    "1506": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1507": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1508": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x22"
    },
    "1510": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1511": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1512": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1514": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "ADD",
      "path": "4"
    },
    "1515": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1516": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8E1"
    },
    "1519": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x22"
    },
    "1521": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1522": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "1523": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1525": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "ADD",
      "path": "4"
    },
    "1526": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1527": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "POP",
      "path": "4"
    },
    "1528": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "POP",
      "path": "4"
    },
    "1529": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1531": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1532": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1533": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1534": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "SUB",
      "path": "4"
    },
    "1535": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1536": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1537": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9875,
        9943
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1542": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1544": {
      "op": "SHL"
    },
    "1545": {
      "op": "SUB"
    },
    "1546": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9954,
        9972
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 17
    },
    "1547": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9954,
        9972
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1548": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9954,
        9972
      ],
      "op": "AND",
      "path": "4"
    },
    "1549": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9954,
        9972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1551": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9954,
        9972
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1552": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9954,
        9972
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1553": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9954,
        9972
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1554": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9954,
        9965
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x34"
    },
    "1556": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9954,
        9972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1558": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9954,
        9972
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1559": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9954,
        9972
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1560": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9954,
        9972
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1561": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9954,
        9972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1563": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9954,
        9972
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1564": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9954,
        9972
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1565": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9954,
        9972
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1566": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9954,
        9981
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1567": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9954,
        9981
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1568": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9954,
        9981
      ],
      "op": "AND",
      "path": "4"
    },
    "1569": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9954,
        9981
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1570": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9954,
        9981
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1571": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9954,
        9981
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1572": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9954,
        9981
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1573": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9954,
        9981
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1574": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9954,
        9981
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1575": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9954,
        9981
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1576": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9954,
        9981
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1577": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9954,
        9981
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1578": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9954,
        9981
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1579": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9954,
        9990
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1580": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9954,
        9990
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1581": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9954,
        9990
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1582": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10005,
        10037
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 18
    },
    "1583": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10005,
        10037
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1584": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10005,
        10037
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1585": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10005,
        10037
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1586": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10005,
        10037
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1587": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10005,
        10037
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1588": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10005,
        10037
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1589": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10005,
        10037
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1622": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10005,
        10037
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1623": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10005,
        10037
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1624": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10005,
        10037
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1625": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10005,
        10037
      ],
      "op": "SUB",
      "path": "4"
    },
    "1626": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10005,
        10037
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1627": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10005,
        10037
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1628": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10005,
        10037
      ],
      "op": "ADD",
      "path": "4"
    },
    "1629": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10005,
        10037
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1630": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        10005,
        10037
      ],
      "op": "LOG3",
      "path": "4"
    },
    "1631": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9704,
        10044
      ],
      "op": "POP",
      "path": "4"
    },
    "1632": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9704,
        10044
      ],
      "op": "POP",
      "path": "4"
    },
    "1633": {
      "fn": "ERC20Upgradeable._approve",
      "offset": [
        9704,
        10044
      ],
      "op": "POP",
      "path": "4"
    },
    "1634": {
      "fn": "ERC20Upgradeable._approve",
      "jump": "o",
      "offset": [
        9704,
        10044
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1635": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7380,
        7910
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1642": {
      "op": "SHL"
    },
    "1643": {
      "op": "SUB"
    },
    "1644": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7485,
        7505
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 19
    },
    "1645": {
      "branch": 31,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7485,
        7505
      ],
      "op": "AND",
      "path": "4"
    },
    "1646": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6A8"
    },
    "1649": {
      "branch": 31,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1650": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1652": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1653": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1657": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1659": {
      "op": "SHL"
    },
    "1660": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1661": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1662": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1664": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "ADD",
      "path": "4"
    },
    "1665": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1666": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1667": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1669": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "ADD",
      "path": "4"
    },
    "1670": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1671": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1672": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "SUB",
      "path": "4"
    },
    "1673": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1674": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1675": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x25"
    },
    "1677": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1678": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1679": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1681": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "ADD",
      "path": "4"
    },
    "1682": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1683": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x951"
    },
    "1686": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x25"
    },
    "1688": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1689": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "1690": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1692": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "ADD",
      "path": "4"
    },
    "1693": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1694": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "POP",
      "path": "4"
    },
    "1695": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "POP",
      "path": "4"
    },
    "1696": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1698": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1699": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1700": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1701": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "SUB",
      "path": "4"
    },
    "1702": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1703": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1704": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7477,
        7547
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1711": {
      "op": "SHL"
    },
    "1712": {
      "op": "SUB"
    },
    "1713": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7565,
        7588
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 20
    },
    "1714": {
      "branch": 32,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7565,
        7588
      ],
      "op": "AND",
      "path": "4"
    },
    "1715": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6ED"
    },
    "1718": {
      "branch": 32,
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1719": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1721": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1722": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1728": {
      "op": "SHL"
    },
    "1729": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1730": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1731": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1733": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "ADD",
      "path": "4"
    },
    "1734": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1735": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1736": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1738": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "ADD",
      "path": "4"
    },
    "1739": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1740": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1741": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "SUB",
      "path": "4"
    },
    "1742": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1743": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1744": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x23"
    },
    "1746": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1747": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1748": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1750": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "ADD",
      "path": "4"
    },
    "1751": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1752": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8BE"
    },
    "1755": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x23"
    },
    "1757": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1758": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "1759": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1761": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "ADD",
      "path": "4"
    },
    "1762": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1763": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "POP",
      "path": "4"
    },
    "1764": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "POP",
      "path": "4"
    },
    "1765": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1767": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1768": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1769": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1770": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "SUB",
      "path": "4"
    },
    "1771": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1772": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1773": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7557,
        7628
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1774": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7639,
        7686
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 21,
      "value": "0x6F8"
    },
    "1777": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7660,
        7666
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1778": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7668,
        7677
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1779": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7679,
        7685
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1780": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7639,
        7659
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8B8"
    },
    "1783": {
      "fn": "ERC20Upgradeable._transfer",
      "jump": "i",
      "offset": [
        7639,
        7686
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1784": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7639,
        7686
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1785": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7788
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 22,
      "value": "0x735"
    },
    "1788": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7739,
        7745
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1789": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7788
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1791": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7788
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1792": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7788
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1793": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7788
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "1795": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7788
      ],
      "op": "ADD",
      "path": "4"
    },
    "1796": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7788
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1798": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7788
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1799": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7788
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1800": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7788
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x26"
    },
    "1802": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7788
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1803": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7788
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1804": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7788
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1806": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7788
      ],
      "op": "ADD",
      "path": "4"
    },
    "1807": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7788
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x903"
    },
    "1810": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7788
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x26"
    },
    "1812": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7788
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1813": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7788
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "1814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1820": {
      "op": "SHL"
    },
    "1821": {
      "op": "SUB"
    },
    "1822": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7734
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1823": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7734
      ],
      "op": "AND",
      "path": "4"
    },
    "1824": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7734
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1826": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7734
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1827": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7734
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1828": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7734
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1829": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7726
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x33"
    },
    "1831": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7734
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1833": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7734
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1834": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7734
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1836": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7734
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1837": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7734
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1838": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7734
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1839": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7734
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1840": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7788
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1841": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7738
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7C0"
    },
    "1844": {
      "fn": "ERC20Upgradeable._transfer",
      "jump": "i",
      "offset": [
        7717,
        7788
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1845": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7717,
        7788
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1852": {
      "op": "SHL"
    },
    "1853": {
      "op": "SUB"
    },
    "1854": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7697,
        7714
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1855": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7697,
        7714
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1856": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7697,
        7714
      ],
      "op": "AND",
      "path": "4"
    },
    "1857": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7697,
        7714
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1859": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7697,
        7714
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1860": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7697,
        7714
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1861": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7697,
        7714
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1862": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7697,
        7706
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x33"
    },
    "1864": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7697,
        7714
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1866": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7697,
        7714
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1867": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7697,
        7714
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1869": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7697,
        7714
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1870": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7697,
        7714
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1871": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7697,
        7714
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1872": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7697,
        7788
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1873": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7697,
        7788
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1874": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7697,
        7788
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1875": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7697,
        7788
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1876": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7821,
        7841
      ],
      "op": "SWAP1",
      "path": "4",
      "statement": 23
    },
    "1877": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7821,
        7841
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1878": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7821,
        7841
      ],
      "op": "AND",
      "path": "4"
    },
    "1879": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7821,
        7841
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1880": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7821,
        7841
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1881": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7821,
        7841
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1882": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7821,
        7841
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1883": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7821,
        7853
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x764"
    },
    "1886": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7821,
        7853
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1887": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7846,
        7852
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1888": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7821,
        7845
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x857"
    },
    "1891": {
      "fn": "ERC20Upgradeable._transfer",
      "jump": "i",
      "offset": [
        7821,
        7853
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1892": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7821,
        7853
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1897": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1899": {
      "op": "SHL"
    },
    "1900": {
      "op": "SUB"
    },
    "1901": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7798,
        7818
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1902": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7798,
        7818
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1903": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7798,
        7818
      ],
      "op": "AND",
      "path": "4"
    },
    "1904": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7798,
        7818
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1906": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7798,
        7818
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1907": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7798,
        7818
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1908": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7798,
        7818
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1909": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7798,
        7807
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x33"
    },
    "1911": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7798,
        7818
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1913": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7798,
        7818
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1914": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7798,
        7818
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1915": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7798,
        7818
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1916": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7798,
        7818
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1918": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7798,
        7818
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1919": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7798,
        7818
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1920": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7798,
        7818
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1921": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7798,
        7818
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1922": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7798,
        7853
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1923": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7798,
        7853
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1924": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7798,
        7853
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1925": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7798,
        7853
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1926": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7868,
        7903
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 24
    },
    "1927": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7868,
        7903
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1928": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7868,
        7903
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1929": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7868,
        7903
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1930": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7868,
        7903
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1931": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7868,
        7903
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1932": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7868,
        7903
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1933": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7798,
        7818
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1934": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7798,
        7818
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1935": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7868,
        7903
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1936": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7868,
        7903
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1937": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7868,
        7903
      ],
      "op": "AND",
      "path": "4"
    },
    "1938": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7868,
        7903
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1939": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7868,
        7903
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1972": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7868,
        7903
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1973": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7868,
        7903
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1974": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7868,
        7903
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1975": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7868,
        7903
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1976": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7868,
        7903
      ],
      "op": "SUB",
      "path": "4"
    },
    "1977": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7868,
        7903
      ],
      "op": "ADD",
      "path": "4"
    },
    "1978": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7868,
        7903
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1979": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7868,
        7903
      ],
      "op": "LOG3",
      "path": "4"
    },
    "1980": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7380,
        7910
      ],
      "op": "POP",
      "path": "4"
    },
    "1981": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7380,
        7910
      ],
      "op": "POP",
      "path": "4"
    },
    "1982": {
      "fn": "ERC20Upgradeable._transfer",
      "offset": [
        7380,
        7910
      ],
      "op": "POP",
      "path": "4"
    },
    "1983": {
      "fn": "ERC20Upgradeable._transfer",
      "jump": "o",
      "offset": [
        7380,
        7910
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1984": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5443,
        5606
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1985": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5529,
        5536
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1987": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5564,
        5576
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 25
    },
    "1988": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5556,
        5562
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1989": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5556,
        5562
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1990": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5556,
        5562
      ],
      "op": "GT",
      "path": "2"
    },
    "1991": {
      "branch": 33,
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5556,
        5562
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1992": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x84F"
    },
    "1995": {
      "branch": 33,
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1996": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1998": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1999": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2003": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2005": {
      "op": "SHL"
    },
    "2006": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2007": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2008": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2010": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "ADD",
      "path": "2"
    },
    "2011": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2012": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2013": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2015": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "ADD",
      "path": "2"
    },
    "2016": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2017": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2018": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "SUB",
      "path": "2"
    },
    "2019": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2020": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2021": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2022": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2023": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2024": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2025": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2026": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2027": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2029": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "ADD",
      "path": "2"
    },
    "2030": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2031": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "POP",
      "path": "2"
    },
    "2032": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2033": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2034": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2035": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2037": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "ADD",
      "path": "2"
    },
    "2038": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2039": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2040": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2041": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2042": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2044": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2045": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2046": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2047": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "LT",
      "path": "2"
    },
    "2048": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2049": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x814"
    },
    "2052": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2053": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2054": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2055": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "ADD",
      "path": "2"
    },
    "2056": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2057": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2058": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2059": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "ADD",
      "path": "2"
    },
    "2060": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2061": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2063": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "ADD",
      "path": "2"
    },
    "2064": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7FC"
    },
    "2067": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2068": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2069": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "POP",
      "path": "2"
    },
    "2070": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "POP",
      "path": "2"
    },
    "2071": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "POP",
      "path": "2"
    },
    "2072": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "POP",
      "path": "2"
    },
    "2073": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2074": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "POP",
      "path": "2"
    },
    "2075": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2076": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2077": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "ADD",
      "path": "2"
    },
    "2078": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2079": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2081": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "AND",
      "path": "2"
    },
    "2082": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2083": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2084": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x841"
    },
    "2087": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2088": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2089": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2090": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "SUB",
      "path": "2"
    },
    "2091": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2092": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2093": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2095": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2096": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2098": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "SUB",
      "path": "2"
    },
    "2099": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2102": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "EXP",
      "path": "2"
    },
    "2103": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "SUB",
      "path": "2"
    },
    "2104": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "NOT",
      "path": "2"
    },
    "2105": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "AND",
      "path": "2"
    },
    "2106": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2107": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2108": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2110": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "ADD",
      "path": "2"
    },
    "2111": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2112": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "POP",
      "path": "2"
    },
    "2113": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2114": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "POP",
      "path": "2"
    },
    "2115": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2116": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "POP",
      "path": "2"
    },
    "2117": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "POP",
      "path": "2"
    },
    "2118": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "POP",
      "path": "2"
    },
    "2119": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2121": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2122": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2123": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2124": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "SUB",
      "path": "2"
    },
    "2125": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2126": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2127": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5548,
        5577
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2128": {
      "op": "POP"
    },
    "2129": {
      "op": "POP"
    },
    "2130": {
      "op": "POP"
    },
    "2131": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5594,
        5599
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 26
    },
    "2132": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5594,
        5599
      ],
      "op": "SUB",
      "path": "2"
    },
    "2133": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        5594,
        5599
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2134": {
      "fn": "SafeMathUpgradeable.sub",
      "jump": "o",
      "offset": [
        5443,
        5606
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2135": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2701,
        2876
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2136": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2759,
        2766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2138": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2790,
        2795
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2139": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2790,
        2795
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2140": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2790,
        2795
      ],
      "op": "ADD",
      "path": "2"
    },
    "2141": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2813,
        2819
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 27
    },
    "2142": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2813,
        2819
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2143": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2813,
        2819
      ],
      "op": "LT",
      "path": "2"
    },
    "2144": {
      "branch": 34,
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2813,
        2819
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2145": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8B1"
    },
    "2148": {
      "branch": 34,
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2149": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2151": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2152": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2153": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2157": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2159": {
      "op": "SHL"
    },
    "2160": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2161": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2162": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2164": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2166": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2167": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "ADD",
      "path": "2"
    },
    "2168": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2169": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1B"
    },
    "2171": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "2173": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2174": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "ADD",
      "path": "2"
    },
    "2175": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2176": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "2209": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "2211": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2212": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "ADD",
      "path": "2"
    },
    "2213": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2214": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2215": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2216": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2217": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2218": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2219": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "SUB",
      "path": "2"
    },
    "2220": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "2222": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "ADD",
      "path": "2"
    },
    "2223": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2224": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2225": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2226": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2868,
        2869
      ],
      "op": "SWAP4",
      "path": "2",
      "statement": 28
    },
    "2227": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2701,
        2876
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2228": {
      "op": "POP"
    },
    "2229": {
      "op": "POP"
    },
    "2230": {
      "op": "POP"
    },
    "2231": {
      "fn": "SafeMathUpgradeable.add",
      "jump": "o",
      "offset": [
        2701,
        2876
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2232": {
      "fn": "ERC20Upgradeable._beforeTokenTransfer",
      "offset": [
        11050,
        11142
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2233": {
      "fn": "ERC20Upgradeable._beforeTokenTransfer",
      "offset": [
        11050,
        11142
      ],
      "op": "POP",
      "path": "4"
    },
    "2234": {
      "fn": "ERC20Upgradeable._beforeTokenTransfer",
      "offset": [
        11050,
        11142
      ],
      "op": "POP",
      "path": "4"
    },
    "2235": {
      "fn": "ERC20Upgradeable._beforeTokenTransfer",
      "offset": [
        11050,
        11142
      ],
      "op": "POP",
      "path": "4"
    },
    "2236": {
      "fn": "ERC20Upgradeable._beforeTokenTransfer",
      "jump": "o",
      "offset": [
        11050,
        11142
      ],
      "op": "JUMP",
      "path": "4"
    }
  },
  "sha1": "d1b1ec1addb5234ca76483cc84c290f20dea46c2",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../../utils/ContextUpgradeable.sol\";\nimport \"./IERC20Upgradeable.sol\";\nimport \"../../math/SafeMathUpgradeable.sol\";\nimport \"../../proxy/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable {\n    using SafeMathUpgradeable for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal initializer {\n        __Context_init_unchained();\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal initializer {\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = 18;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    function _setupDecimals(uint8 decimals_) internal virtual {\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n    uint256[44] private __gap;\n}\n",
  "sourceMap": "1394:9781:4:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "/Users/daweizhao/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/contracts/token/ERC20/ERC20Upgradeable.sol",
  "type": "contract"
}