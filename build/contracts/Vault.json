{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "collateralAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "addded",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "defaultStrategyAddr",
          "type": "address"
        }
      ],
      "name": "CollateralAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "collateralAddr",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "depositStrategyAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "allocateAmount",
          "type": "uint256"
        }
      ],
      "name": "CollateralAllocated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "strategyAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "added",
          "type": "bool"
        }
      ],
      "name": "StrategyAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalValueLocked",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalValueInVault",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalValueInStrategies",
          "type": "uint256"
        }
      ],
      "name": "TotalValueLocked",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateralAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_defaultStrategyAddr",
          "type": "address"
        }
      ],
      "name": "addCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategyAddr",
          "type": "address"
        }
      ],
      "name": "addStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allCollateralAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allStrategyAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allocate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "collateralsInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "collateralAddr",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "added",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "defaultStrategyAddr",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "harvest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "strategiesInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "strategyAddr",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "added",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalValueInStrategies",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalValueInVault",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalValueLocked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/Users/daweizhao/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/contracts/access/OwnableUpgradeable.sol",
    "10": "/Users/daweizhao/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/contracts/utils/ReentrancyGuardUpgradeable.sol",
    "19": "contracts/vault/Vault.sol",
    "2": "/Users/daweizhao/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/contracts/math/SafeMathUpgradeable.sol",
    "20": "interfaces/IStrategy.sol",
    "3": "/Users/daweizhao/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/contracts/proxy/Initializable.sol",
    "4": "/Users/daweizhao/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/contracts/token/ERC20/ERC20Upgradeable.sol",
    "5": "/Users/daweizhao/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/contracts/token/ERC20/IERC20Upgradeable.sol",
    "6": "/Users/daweizhao/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/contracts/token/ERC20/SafeERC20Upgradeable.sol",
    "7": "/Users/daweizhao/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/contracts/utils/AddressUpgradeable.sol",
    "8": "/Users/daweizhao/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/contracts/utils/ContextUpgradeable.sol"
  },
  "ast": {
    "absolutePath": "contracts/vault/Vault.sol",
    "exportedSymbols": {
      "Vault": [
        1525
      ]
    },
    "id": 1526,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 806,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "376:25:19"
      },
      {
        "absolutePath": "/Users/daweizhao/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/contracts/access/AccessControlUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
        "id": 807,
        "nodeType": "ImportDirective",
        "scope": 1526,
        "sourceUnit": 3525,
        "src": "402:81:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/daweizhao/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/contracts/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "id": 808,
        "nodeType": "ImportDirective",
        "scope": 1526,
        "sourceUnit": 1657,
        "src": "484:75:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/daweizhao/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/contracts/token/ERC20/SafeERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/SafeERC20Upgradeable.sol",
        "id": 809,
        "nodeType": "ImportDirective",
        "scope": 1526,
        "sourceUnit": 2369,
        "src": "560:82:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/daweizhao/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/contracts/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "id": 810,
        "nodeType": "ImportDirective",
        "scope": 1526,
        "sourceUnit": 4055,
        "src": "643:78:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/daweizhao/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/contracts/utils/ReentrancyGuardUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
        "id": 811,
        "nodeType": "ImportDirective",
        "scope": 1526,
        "sourceUnit": 2427,
        "src": "722:82:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IStrategy.sol",
        "file": "../../interfaces/IStrategy.sol",
        "id": 812,
        "nodeType": "ImportDirective",
        "scope": 1526,
        "sourceUnit": 2501,
        "src": "805:40:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 814,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2077,
              "src": "1027:13:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$2077",
                "typeString": "contract Initializable"
              }
            },
            "id": 815,
            "nodeType": "InheritanceSpecifier",
            "src": "1027:13:19"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 816,
              "name": "OwnableUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1656,
              "src": "1042:18:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OwnableUpgradeable_$1656",
                "typeString": "contract OwnableUpgradeable"
              }
            },
            "id": 817,
            "nodeType": "InheritanceSpecifier",
            "src": "1042:18:19"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 818,
              "name": "ReentrancyGuardUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2426,
              "src": "1062:26:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ReentrancyGuardUpgradeable_$2426",
                "typeString": "contract ReentrancyGuardUpgradeable"
              }
            },
            "id": 819,
            "nodeType": "InheritanceSpecifier",
            "src": "1062:26:19"
          }
        ],
        "contractDependencies": [
          1656,
          2077,
          2426,
          4099
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 813,
          "nodeType": "StructuredDocumentation",
          "src": "848:160:19",
          "text": " @title Vault of USDs protocol\n @dev Control Mint, Redeem, Allocate and Rebase of USDs\n @dev Live on Arbitrum Layer 2\n @author Sperax Foundation"
        },
        "fullyImplemented": true,
        "id": 1525,
        "linearizedBaseContracts": [
          1525,
          2426,
          1656,
          4099,
          2077
        ],
        "name": "Vault",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 822,
            "libraryName": {
              "contractScope": null,
              "id": 820,
              "name": "SafeERC20Upgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2368,
              "src": "1098:20:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20Upgradeable_$2368",
                "typeString": "library SafeERC20Upgradeable"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1092:49:19",
            "typeName": {
              "contractScope": null,
              "id": 821,
              "name": "IERC20Upgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2155,
              "src": "1123:17:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Upgradeable_$2155",
                "typeString": "contract IERC20Upgradeable"
              }
            }
          },
          {
            "id": 825,
            "libraryName": {
              "contractScope": null,
              "id": 823,
              "name": "SafeMathUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2011,
              "src": "1149:19:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMathUpgradeable_$2011",
                "typeString": "library SafeMathUpgradeable"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1143:35:19",
            "typeName": {
              "id": 824,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1173:4:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 833,
            "name": "CollateralAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 827,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "collateralAddr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 833,
                  "src": "1203:22:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 826,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1203:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 829,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "addded",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 833,
                  "src": "1227:11:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 828,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1227:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 831,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "defaultStrategyAddr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 833,
                  "src": "1240:27:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 830,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1240:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1202:66:19"
            },
            "src": "1181:88:19"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 839,
            "name": "StrategyAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 835,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "strategyAddr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 839,
                  "src": "1291:20:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 834,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1291:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 837,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "added",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 839,
                  "src": "1313:10:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 836,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1313:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1290:34:19"
            },
            "src": "1271:54:19"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 847,
            "name": "CollateralAllocated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 841,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "collateralAddr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 847,
                  "src": "1353:30:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 840,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1353:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 843,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "depositStrategyAddr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 847,
                  "src": "1385:35:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 842,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1385:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 845,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "allocateAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 847,
                  "src": "1422:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 844,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1422:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1352:90:19"
            },
            "src": "1327:116:19"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 855,
            "name": "TotalValueLocked",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 849,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalValueLocked",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 855,
                  "src": "1471:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 848,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1471:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 851,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalValueInVault",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 855,
                  "src": "1496:22:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 850,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1496:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 853,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalValueInStrategies",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 855,
                  "src": "1522:27:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 852,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1522:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1467:85:19"
            },
            "src": "1445:108:19"
          },
          {
            "canonicalName": "Vault.collateralStruct",
            "id": 862,
            "members": [
              {
                "constant": false,
                "id": 857,
                "mutability": "mutable",
                "name": "collateralAddr",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 862,
                "src": "1584:22:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 856,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1584:7:19",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 859,
                "mutability": "mutable",
                "name": "added",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 862,
                "src": "1610:10:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 858,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1610:4:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 861,
                "mutability": "mutable",
                "name": "defaultStrategyAddr",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 862,
                "src": "1624:27:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 860,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1624:7:19",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "collateralStruct",
            "nodeType": "StructDefinition",
            "scope": 1525,
            "src": "1556:99:19",
            "visibility": "public"
          },
          {
            "canonicalName": "Vault.strategyStruct",
            "id": 867,
            "members": [
              {
                "constant": false,
                "id": 864,
                "mutability": "mutable",
                "name": "strategyAddr",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 867,
                "src": "1683:20:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 863,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1683:7:19",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 866,
                "mutability": "mutable",
                "name": "added",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 867,
                "src": "1707:10:19",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 865,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1707:4:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "strategyStruct",
            "nodeType": "StructDefinition",
            "scope": 1525,
            "src": "1657:64:19",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8d52fec6",
            "id": 871,
            "mutability": "mutable",
            "name": "collateralsInfo",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1525,
            "src": "1723:59:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_collateralStruct_$862_storage_$",
              "typeString": "mapping(address => struct Vault.collateralStruct)"
            },
            "typeName": {
              "id": 870,
              "keyType": {
                "id": 868,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1731:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1723:36:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_collateralStruct_$862_storage_$",
                "typeString": "mapping(address => struct Vault.collateralStruct)"
              },
              "valueType": {
                "contractScope": null,
                "id": 869,
                "name": "collateralStruct",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 862,
                "src": "1742:16:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_collateralStruct_$862_storage_ptr",
                  "typeString": "struct Vault.collateralStruct"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "96577a1a",
            "id": 875,
            "mutability": "mutable",
            "name": "strategiesInfo",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1525,
            "src": "1785:56:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_strategyStruct_$867_storage_$",
              "typeString": "mapping(address => struct Vault.strategyStruct)"
            },
            "typeName": {
              "id": 874,
              "keyType": {
                "id": 872,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1793:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1785:34:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_strategyStruct_$867_storage_$",
                "typeString": "mapping(address => struct Vault.strategyStruct)"
              },
              "valueType": {
                "contractScope": null,
                "id": 873,
                "name": "strategyStruct",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 867,
                "src": "1804:14:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_strategyStruct_$867_storage_ptr",
                  "typeString": "struct Vault.strategyStruct"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c2f21e0f",
            "id": 878,
            "mutability": "mutable",
            "name": "allCollateralAddr",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1525,
            "src": "1845:34:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 876,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1845:7:19",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 877,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1845:9:19",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "792f5874",
            "id": 881,
            "mutability": "mutable",
            "name": "allStrategyAddr",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1525,
            "src": "1919:32:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 879,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1919:7:19",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 880,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "1919:9:19",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 897,
              "nodeType": "Block",
              "src": "2074:98:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 887,
                        "name": "OwnableUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1656,
                        "src": "2078:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OwnableUpgradeable_$1656_$",
                          "typeString": "type(contract OwnableUpgradeable)"
                        }
                      },
                      "id": 889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "__Ownable_init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1555,
                      "src": "2078:33:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2078:35:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 891,
                  "nodeType": "ExpressionStatement",
                  "src": "2078:35:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 892,
                        "name": "ReentrancyGuardUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2426,
                        "src": "2117:26:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ReentrancyGuardUpgradeable_$2426_$",
                          "typeString": "type(contract ReentrancyGuardUpgradeable)"
                        }
                      },
                      "id": 894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "__ReentrancyGuard_init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2391,
                      "src": "2117:49:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2117:51:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 896,
                  "nodeType": "ExpressionStatement",
                  "src": "2117:51:19"
                }
              ]
            },
            "documentation": {
              "id": 882,
              "nodeType": "StructuredDocumentation",
              "src": "1993:38:19",
              "text": " @dev contract initializer"
            },
            "functionSelector": "8129fc1c",
            "id": 898,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 885,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 884,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2060,
                  "src": "2062:11:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2062:11:19"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2052:2:19"
            },
            "returnParameters": {
              "id": 886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2074:0:19"
            },
            "scope": 1525,
            "src": "2033:139:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 966,
              "nodeType": "Block",
              "src": "2536:562:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2548:39:19",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 909,
                              "name": "collateralsInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 871,
                              "src": "2549:15:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_collateralStruct_$862_storage_$",
                                "typeString": "mapping(address => struct Vault.collateralStruct storage ref)"
                              }
                            },
                            "id": 911,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 910,
                              "name": "_collateralAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 901,
                              "src": "2565:15:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2549:32:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_collateralStruct_$862_storage",
                              "typeString": "struct Vault.collateralStruct storage ref"
                            }
                          },
                          "id": 912,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "added",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 859,
                          "src": "2549:38:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6c6c61746572616c206164646564",
                        "id": 914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2589:18:19",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc85061723168c1b4c18f042c4030247a2e16574b921eb23d21ab804d2f794fc",
                          "typeString": "literal_string \"Collateral added\""
                        },
                        "value": "Collateral added"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cc85061723168c1b4c18f042c4030247a2e16574b921eb23d21ab804d2f794fc",
                          "typeString": "literal_string \"Collateral added\""
                        }
                      ],
                      "id": 908,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2540:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2540:68:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 916,
                  "nodeType": "ExpressionStatement",
                  "src": "2540:68:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 919,
                                  "name": "_collateralAddr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 901,
                                  "src": "2637:15:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 918,
                                "name": "ERC20Upgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4054,
                                "src": "2620:16:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC20Upgradeable_$4054_$",
                                  "typeString": "type(contract ERC20Upgradeable)"
                                }
                              },
                              "id": 920,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2620:33:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Upgradeable_$4054",
                                "typeString": "contract ERC20Upgradeable"
                              }
                            },
                            "id": 921,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "decimals",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3626,
                            "src": "2620:42:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                              "typeString": "function () view external returns (uint8)"
                            }
                          },
                          "id": 922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2620:44:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3138",
                          "id": 923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2668:2:19",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "src": "2620:50:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6c6c61746572616c7320646563696d616c73206e65656420746f206265206c657373207468616e203138",
                        "id": 925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2672:46:19",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9e78bed64e139cb9ea7729ddf45f30d1452863751a1953e215e013968475aae",
                          "typeString": "literal_string \"Collaterals decimals need to be less than 18\""
                        },
                        "value": "Collaterals decimals need to be less than 18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9e78bed64e139cb9ea7729ddf45f30d1452863751a1953e215e013968475aae",
                          "typeString": "literal_string \"Collaterals decimals need to be less than 18\""
                        }
                      ],
                      "id": 917,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2612:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2612:107:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 927,
                  "nodeType": "ExpressionStatement",
                  "src": "2612:107:19"
                },
                {
                  "assignments": [
                    929
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 929,
                      "mutability": "mutable",
                      "name": "addingCollateral",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 966,
                      "src": "2723:41:19",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_collateralStruct_$862_storage_ptr",
                        "typeString": "struct Vault.collateralStruct"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 928,
                        "name": "collateralStruct",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 862,
                        "src": "2723:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_collateralStruct_$862_storage_ptr",
                          "typeString": "struct Vault.collateralStruct"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 933,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 930,
                      "name": "collateralsInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 871,
                      "src": "2767:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_collateralStruct_$862_storage_$",
                        "typeString": "mapping(address => struct Vault.collateralStruct storage ref)"
                      }
                    },
                    "id": 932,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 931,
                      "name": "_collateralAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 901,
                      "src": "2783:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2767:32:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_collateralStruct_$862_storage",
                      "typeString": "struct Vault.collateralStruct storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2723:76:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 934,
                        "name": "addingCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 929,
                        "src": "2803:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_collateralStruct_$862_storage_ptr",
                          "typeString": "struct Vault.collateralStruct storage pointer"
                        }
                      },
                      "id": 936,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralAddr",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 857,
                      "src": "2803:31:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 937,
                      "name": "_collateralAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 901,
                      "src": "2837:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2803:49:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 939,
                  "nodeType": "ExpressionStatement",
                  "src": "2803:49:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 940,
                        "name": "addingCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 929,
                        "src": "2856:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_collateralStruct_$862_storage_ptr",
                          "typeString": "struct Vault.collateralStruct storage pointer"
                        }
                      },
                      "id": 942,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "added",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 859,
                      "src": "2856:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2881:4:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2856:29:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 945,
                  "nodeType": "ExpressionStatement",
                  "src": "2856:29:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 946,
                        "name": "addingCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 929,
                        "src": "2889:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_collateralStruct_$862_storage_ptr",
                          "typeString": "struct Vault.collateralStruct storage pointer"
                        }
                      },
                      "id": 948,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "defaultStrategyAddr",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 861,
                      "src": "2889:36:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 949,
                      "name": "_defaultStrategyAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 903,
                      "src": "2928:20:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2889:59:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 951,
                  "nodeType": "ExpressionStatement",
                  "src": "2889:59:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 955,
                          "name": "addingCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 929,
                          "src": "2975:16:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_collateralStruct_$862_storage_ptr",
                            "typeString": "struct Vault.collateralStruct storage pointer"
                          }
                        },
                        "id": 956,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "collateralAddr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 857,
                        "src": "2975:31:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 952,
                        "name": "allCollateralAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "2952:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 954,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2952:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2952:55:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 958,
                  "nodeType": "ExpressionStatement",
                  "src": "2952:55:19"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 960,
                        "name": "_collateralAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 901,
                        "src": "3032:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 961,
                          "name": "addingCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 929,
                          "src": "3049:16:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_collateralStruct_$862_storage_ptr",
                            "typeString": "struct Vault.collateralStruct storage pointer"
                          }
                        },
                        "id": 962,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "added",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 859,
                        "src": "3049:22:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 963,
                        "name": "_defaultStrategyAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 903,
                        "src": "3073:20:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 959,
                      "name": "CollateralAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 833,
                      "src": "3016:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$_t_address_$returns$__$",
                        "typeString": "function (address,bool,address)"
                      }
                    },
                    "id": 964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3016:78:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 965,
                  "nodeType": "EmitStatement",
                  "src": "3011:83:19"
                }
              ]
            },
            "documentation": {
              "id": 899,
              "nodeType": "StructuredDocumentation",
              "src": "2176:261:19",
              "text": " @dev authorize an ERC20 token as one of the collaterals supported by USDs mint/redeem\n @param _collateralAddr ERC20 address to be authorized\n @param _defaultStrategyAddr strategy address of which the collateral is allocated into on allocate()"
            },
            "functionSelector": "c6783af1",
            "id": 967,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 906,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 905,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1601,
                  "src": "2526:9:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2526:9:19"
              }
            ],
            "name": "addCollateral",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 901,
                  "mutability": "mutable",
                  "name": "_collateralAddr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 967,
                  "src": "2462:23:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 900,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2462:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 903,
                  "mutability": "mutable",
                  "name": "_defaultStrategyAddr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 967,
                  "src": "2487:28:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 902,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2487:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2461:55:19"
            },
            "returnParameters": {
              "id": 907,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2536:0:19"
            },
            "scope": 1525,
            "src": "2439:659:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1014,
              "nodeType": "Block",
              "src": "3256:318:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3268:36:19",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 976,
                              "name": "strategiesInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 875,
                              "src": "3269:14:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_strategyStruct_$867_storage_$",
                                "typeString": "mapping(address => struct Vault.strategyStruct storage ref)"
                              }
                            },
                            "id": 978,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 977,
                              "name": "_strategyAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 970,
                              "src": "3284:13:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3269:29:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_strategyStruct_$867_storage",
                              "typeString": "struct Vault.strategyStruct storage ref"
                            }
                          },
                          "id": 979,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "added",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 866,
                          "src": "3269:35:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5374726174656779206164646564",
                        "id": 981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3306:16:19",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06e66d52a32d78ccae2c8ccdd84f56ebcb67035c5261f1e58f00e541010b3cbe",
                          "typeString": "literal_string \"Strategy added\""
                        },
                        "value": "Strategy added"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_06e66d52a32d78ccae2c8ccdd84f56ebcb67035c5261f1e58f00e541010b3cbe",
                          "typeString": "literal_string \"Strategy added\""
                        }
                      ],
                      "id": 975,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3260:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3260:63:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 983,
                  "nodeType": "ExpressionStatement",
                  "src": "3260:63:19"
                },
                {
                  "assignments": [
                    985
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 985,
                      "mutability": "mutable",
                      "name": "addingStrategy",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1014,
                      "src": "3327:37:19",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_strategyStruct_$867_storage_ptr",
                        "typeString": "struct Vault.strategyStruct"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 984,
                        "name": "strategyStruct",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 867,
                        "src": "3327:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_strategyStruct_$867_storage_ptr",
                          "typeString": "struct Vault.strategyStruct"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 989,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 986,
                      "name": "strategiesInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 875,
                      "src": "3367:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_strategyStruct_$867_storage_$",
                        "typeString": "mapping(address => struct Vault.strategyStruct storage ref)"
                      }
                    },
                    "id": 988,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 987,
                      "name": "_strategyAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 970,
                      "src": "3382:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3367:29:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_strategyStruct_$867_storage",
                      "typeString": "struct Vault.strategyStruct storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3327:69:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 990,
                        "name": "addingStrategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 985,
                        "src": "3400:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_strategyStruct_$867_storage_ptr",
                          "typeString": "struct Vault.strategyStruct storage pointer"
                        }
                      },
                      "id": 992,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "strategyAddr",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 864,
                      "src": "3400:27:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 993,
                      "name": "_strategyAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 970,
                      "src": "3430:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3400:43:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 995,
                  "nodeType": "ExpressionStatement",
                  "src": "3400:43:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 996,
                        "name": "addingStrategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 985,
                        "src": "3447:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_strategyStruct_$867_storage_ptr",
                          "typeString": "struct Vault.strategyStruct storage pointer"
                        }
                      },
                      "id": 998,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "added",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 866,
                      "src": "3447:20:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 999,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3470:4:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3447:27:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1001,
                  "nodeType": "ExpressionStatement",
                  "src": "3447:27:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1005,
                          "name": "addingStrategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 985,
                          "src": "3499:14:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_strategyStruct_$867_storage_ptr",
                            "typeString": "struct Vault.strategyStruct storage pointer"
                          }
                        },
                        "id": 1006,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "strategyAddr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 864,
                        "src": "3499:27:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1002,
                        "name": "allStrategyAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 881,
                        "src": "3478:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3478:20:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3478:49:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1008,
                  "nodeType": "ExpressionStatement",
                  "src": "3478:49:19"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1010,
                        "name": "_strategyAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 970,
                        "src": "3550:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 1011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3565:4:19",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1009,
                      "name": "StrategyAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 839,
                      "src": "3536:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 1012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3536:34:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1013,
                  "nodeType": "EmitStatement",
                  "src": "3531:39:19"
                }
              ]
            },
            "documentation": {
              "id": 968,
              "nodeType": "StructuredDocumentation",
              "src": "3101:90:19",
              "text": " @dev authorize an strategy\n @param _strategyAddr strategy contract address"
            },
            "functionSelector": "223e5479",
            "id": 1015,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 973,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 972,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1601,
                  "src": "3246:9:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3246:9:19"
              }
            ],
            "name": "addStrategy",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 970,
                  "mutability": "mutable",
                  "name": "_strategyAddr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1015,
                  "src": "3214:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 969,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3214:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3213:23:19"
            },
            "returnParameters": {
              "id": 974,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3256:0:19"
            },
            "scope": 1525,
            "src": "3193:381:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1084,
              "nodeType": "Block",
              "src": "3783:466:19",
              "statements": [
                {
                  "assignments": [
                    1024
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1024,
                      "mutability": "mutable",
                      "name": "strategy",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1084,
                      "src": "3788:18:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$2500",
                        "typeString": "contract IStrategy"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1023,
                        "name": "IStrategy",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2500,
                        "src": "3788:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$2500",
                          "typeString": "contract IStrategy"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1025,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3788:18:19"
                },
                {
                  "assignments": [
                    1027
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1027,
                      "mutability": "mutable",
                      "name": "collateral",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1084,
                      "src": "3811:34:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                        "typeString": "struct Vault.collateralStruct"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1026,
                        "name": "collateralStruct",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 862,
                        "src": "3811:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_collateralStruct_$862_storage_ptr",
                          "typeString": "struct Vault.collateralStruct"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1028,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3811:34:19"
                },
                {
                  "body": {
                    "id": 1082,
                    "nodeType": "Block",
                    "src": "3902:343:19",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1040,
                            "name": "collateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1027,
                            "src": "3908:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                              "typeString": "struct Vault.collateralStruct memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1041,
                              "name": "collateralsInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 871,
                              "src": "3921:15:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_collateralStruct_$862_storage_$",
                                "typeString": "mapping(address => struct Vault.collateralStruct storage ref)"
                              }
                            },
                            "id": 1045,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1042,
                                "name": "allCollateralAddr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 878,
                                "src": "3937:17:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 1044,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1043,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1030,
                                "src": "3955:1:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3937:20:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3921:37:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_collateralStruct_$862_storage",
                              "typeString": "struct Vault.collateralStruct storage ref"
                            }
                          },
                          "src": "3908:50:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                            "typeString": "struct Vault.collateralStruct memory"
                          }
                        },
                        "id": 1047,
                        "nodeType": "ExpressionStatement",
                        "src": "3908:50:19"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1048,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1027,
                              "src": "3968:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                                "typeString": "struct Vault.collateralStruct memory"
                              }
                            },
                            "id": 1049,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "defaultStrategyAddr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 861,
                            "src": "3968:30:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 1052,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4010:1:19",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1051,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4002:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1050,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4002:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 1053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4002:10:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3968:44:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1081,
                        "nodeType": "IfStatement",
                        "src": "3964:276:19",
                        "trueBody": {
                          "id": 1080,
                          "nodeType": "Block",
                          "src": "4014:226:19",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1060,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 1055,
                                  "name": "strategy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1024,
                                  "src": "4021:8:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$2500",
                                    "typeString": "contract IStrategy"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1057,
                                        "name": "collateral",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1027,
                                        "src": "4042:10:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                                          "typeString": "struct Vault.collateralStruct memory"
                                        }
                                      },
                                      "id": 1058,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "defaultStrategyAddr",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 861,
                                      "src": "4042:30:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1056,
                                    "name": "IStrategy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2500,
                                    "src": "4032:9:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IStrategy_$2500_$",
                                      "typeString": "type(contract IStrategy)"
                                    }
                                  },
                                  "id": 1059,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4032:41:19",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$2500",
                                    "typeString": "contract IStrategy"
                                  }
                                },
                                "src": "4021:52:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IStrategy_$2500",
                                  "typeString": "contract IStrategy"
                                }
                              },
                              "id": 1061,
                              "nodeType": "ExpressionStatement",
                              "src": "4021:52:19"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1065,
                                          "name": "collateral",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1027,
                                          "src": "4116:10:19",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                                            "typeString": "struct Vault.collateralStruct memory"
                                          }
                                        },
                                        "id": 1066,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "collateralAddr",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 857,
                                        "src": "4116:25:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1063,
                                        "name": "strategy",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1024,
                                        "src": "4088:8:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IStrategy_$2500",
                                          "typeString": "contract IStrategy"
                                        }
                                      },
                                      "id": 1064,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "supportsCollateral",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2493,
                                      "src": "4088:27:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                                        "typeString": "function (address) view external returns (bool)"
                                      }
                                    },
                                    "id": 1067,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4088:54:19",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 1062,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "4080:7:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                    "typeString": "function (bool) pure"
                                  }
                                },
                                "id": 1068,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4080:63:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1069,
                              "nodeType": "ExpressionStatement",
                              "src": "4080:63:19"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1071,
                                    "name": "strategy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1024,
                                    "src": "4166:8:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStrategy_$2500",
                                      "typeString": "contract IStrategy"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1072,
                                      "name": "collateral",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1027,
                                      "src": "4176:10:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                                        "typeString": "struct Vault.collateralStruct memory"
                                      }
                                    },
                                    "id": 1073,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "collateralAddr",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 857,
                                    "src": "4176:25:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IStrategy_$2500",
                                      "typeString": "contract IStrategy"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1070,
                                  "name": "_harvestInterest",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1156,
                                  "src": "4149:16:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IStrategy_$2500_$_t_address_$returns$__$",
                                    "typeString": "function (contract IStrategy,address)"
                                  }
                                },
                                "id": 1074,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4149:53:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1075,
                              "nodeType": "ExpressionStatement",
                              "src": "4149:53:19"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1077,
                                    "name": "strategy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1024,
                                    "src": "4224:8:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStrategy_$2500",
                                      "typeString": "contract IStrategy"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IStrategy_$2500",
                                      "typeString": "contract IStrategy"
                                    }
                                  ],
                                  "id": 1076,
                                  "name": "_harvestReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1115,
                                  "src": "4209:14:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IStrategy_$2500_$returns$__$",
                                    "typeString": "function (contract IStrategy)"
                                  }
                                },
                                "id": 1078,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4209:24:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1079,
                              "nodeType": "ExpressionStatement",
                              "src": "4209:24:19"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1033,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1030,
                      "src": "3867:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1034,
                        "name": "allCollateralAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "3871:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3871:24:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3867:28:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1083,
                  "initializationExpression": {
                    "assignments": [
                      1030
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1030,
                        "mutability": "mutable",
                        "name": "y",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1083,
                        "src": "3855:6:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1029,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3855:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1032,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3864:1:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3855:10:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3897:3:19",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1037,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1030,
                        "src": "3897:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1039,
                    "nodeType": "ExpressionStatement",
                    "src": "3897:3:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "3850:395:19"
                }
              ]
            },
            "documentation": {
              "id": 1016,
              "nodeType": "StructuredDocumentation",
              "src": "3577:152:19",
              "text": " @notice harvest USDs held by VaultCore\n @dev VaultCore does not organically hold/generate USDs, transfer USDs to\n\t\tVaultCore manually"
            },
            "functionSelector": "4641257d",
            "id": 1085,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1019,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1018,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1601,
                  "src": "3760:9:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3760:9:19"
              },
              {
                "arguments": null,
                "id": 1021,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1020,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2421,
                  "src": "3770:12:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3770:12:19"
              }
            ],
            "name": "harvest",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1017,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3748:2:19"
            },
            "returnParameters": {
              "id": 1022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3783:0:19"
            },
            "scope": 1525,
            "src": "3732:517:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1114,
              "nodeType": "Block",
              "src": "4487:206:19",
              "statements": [
                {
                  "assignments": [
                    1092
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1092,
                      "mutability": "mutable",
                      "name": "rwdTokenAddr",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1114,
                      "src": "4491:20:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1091,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4491:7:19",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1096,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1093,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1088,
                        "src": "4514:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$2500",
                          "typeString": "contract IStrategy"
                        }
                      },
                      "id": 1094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rewardTokenAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2499,
                      "src": "4514:27:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                        "typeString": "function () pure external returns (address)"
                      }
                    },
                    "id": 1095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4514:29:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4491:52:19"
                },
                {
                  "assignments": [
                    1098
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1098,
                      "mutability": "mutable",
                      "name": "rewardEarned",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1114,
                      "src": "4547:20:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1097,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4547:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1102,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1099,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1088,
                        "src": "4570:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$2500",
                          "typeString": "contract IStrategy"
                        }
                      },
                      "id": 1100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checkRewardEarned",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2485,
                      "src": "4570:26:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4570:28:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4547:51:19"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1103,
                      "name": "rewardEarned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1098,
                      "src": "4606:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4621:1:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4606:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1113,
                  "nodeType": "IfStatement",
                  "src": "4602:88:19",
                  "trueBody": {
                    "id": 1112,
                    "nodeType": "Block",
                    "src": "4624:66:19",
                    "statements": [
                      {
                        "assignments": [
                          1107
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1107,
                            "mutability": "mutable",
                            "name": "rerwardCollected",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 1112,
                            "src": "4629:24:19",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1106,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4629:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1111,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1108,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1088,
                              "src": "4656:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$2500",
                                "typeString": "contract IStrategy"
                              }
                            },
                            "id": 1109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "collectRewardToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2465,
                            "src": "4656:27:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                              "typeString": "function () external returns (uint256)"
                            }
                          },
                          "id": 1110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4656:29:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4629:56:19"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1086,
              "nodeType": "StructuredDocumentation",
              "src": "4251:181:19",
              "text": " @notice harvest reward token earned in strategies\n @dev rewardLiquidationThreshold is the maximum amount of CRV used to\n \t\trebase; the rest is sent to rwdReserve."
            },
            "id": 1115,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_harvestReward",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1088,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1115,
                  "src": "4458:18:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$2500",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1087,
                    "name": "IStrategy",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2500,
                    "src": "4458:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$2500",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4457:20:19"
            },
            "returnParameters": {
              "id": 1090,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4487:0:19"
            },
            "scope": 1525,
            "src": "4434:259:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1155,
              "nodeType": "Block",
              "src": "5053:315:19",
              "statements": [
                {
                  "assignments": [
                    1124
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1124,
                      "mutability": "mutable",
                      "name": "collateral",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1155,
                      "src": "5057:34:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                        "typeString": "struct Vault.collateralStruct"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1123,
                        "name": "collateralStruct",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 862,
                        "src": "5057:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_collateralStruct_$862_storage_ptr",
                          "typeString": "struct Vault.collateralStruct"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1128,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1125,
                      "name": "collateralsInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 871,
                      "src": "5094:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_collateralStruct_$862_storage_$",
                        "typeString": "mapping(address => struct Vault.collateralStruct storage ref)"
                      }
                    },
                    "id": 1127,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1126,
                      "name": "collateralAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1120,
                      "src": "5110:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5094:31:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_collateralStruct_$862_storage",
                      "typeString": "struct Vault.collateralStruct storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5057:68:19"
                },
                {
                  "assignments": [
                    1130
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1130,
                      "mutability": "mutable",
                      "name": "interestEarned",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1155,
                      "src": "5129:19:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1129,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5129:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1135,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1133,
                        "name": "collateralAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1120,
                        "src": "5180:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1131,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1118,
                        "src": "5151:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$2500",
                          "typeString": "contract IStrategy"
                        }
                      },
                      "id": 1132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checkInterestEarned",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2480,
                      "src": "5151:28:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5151:44:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5129:66:19"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1136,
                      "name": "interestEarned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1130,
                      "src": "5203:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5220:1:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5203:18:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1154,
                  "nodeType": "IfStatement",
                  "src": "5199:166:19",
                  "trueBody": {
                    "id": 1153,
                    "nodeType": "Block",
                    "src": "5223:142:19",
                    "statements": [
                      {
                        "assignments": [
                          1140,
                          1142
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1140,
                            "mutability": "mutable",
                            "name": "interestToken",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 1153,
                            "src": "5229:21:19",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1139,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5229:7:19",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1142,
                            "mutability": "mutable",
                            "name": "interestCollected",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 1153,
                            "src": "5252:25:19",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1141,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5252:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1152,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1147,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5319:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Vault_$1525",
                                    "typeString": "contract Vault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Vault_$1525",
                                    "typeString": "contract Vault"
                                  }
                                ],
                                "id": 1146,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5311:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1145,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5311:7:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 1148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5311:13:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1149,
                                "name": "collateral",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1124,
                                "src": "5330:10:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                                  "typeString": "struct Vault.collateralStruct memory"
                                }
                              },
                              "id": 1150,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "collateralAddr",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 857,
                              "src": "5330:25:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1143,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1118,
                              "src": "5281:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$2500",
                                "typeString": "contract IStrategy"
                              }
                            },
                            "id": 1144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "collectInterest",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2459,
                            "src": "5281:24:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$_t_uint256_$",
                              "typeString": "function (address,address) external returns (address,uint256)"
                            }
                          },
                          "id": 1151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5281:79:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                            "typeString": "tuple(address,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5228:132:19"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1116,
              "nodeType": "StructuredDocumentation",
              "src": "4696:276:19",
              "text": " @notice harvest interest earned in strategies\n @dev interestLiquidationThreshold is the maximum interest allowed;\n\t\tif interest earned is higher than that, txn will be reverted. Lower\n\t\trewardLiquidationThreshold and increase interestLiquidationThreshold"
            },
            "id": 1156,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_harvestInterest",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1118,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1156,
                  "src": "5000:18:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$2500",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1117,
                    "name": "IStrategy",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2500,
                    "src": "5000:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$2500",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1120,
                  "mutability": "mutable",
                  "name": "collateralAddr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1156,
                  "src": "5020:22:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5020:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4999:44:19"
            },
            "returnParameters": {
              "id": 1122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5053:0:19"
            },
            "scope": 1525,
            "src": "4974:394:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1254,
              "nodeType": "Block",
              "src": "5496:742:19",
              "statements": [
                {
                  "assignments": [
                    1165
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1165,
                      "mutability": "mutable",
                      "name": "strategy",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1254,
                      "src": "5500:18:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$2500",
                        "typeString": "contract IStrategy"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1164,
                        "name": "IStrategy",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2500,
                        "src": "5500:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$2500",
                          "typeString": "contract IStrategy"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1166,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5500:18:19"
                },
                {
                  "assignments": [
                    1168
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1168,
                      "mutability": "mutable",
                      "name": "collateral",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1254,
                      "src": "5522:34:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                        "typeString": "struct Vault.collateralStruct"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1167,
                        "name": "collateralStruct",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 862,
                        "src": "5522:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_collateralStruct_$862_storage_ptr",
                          "typeString": "struct Vault.collateralStruct"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1169,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5522:34:19"
                },
                {
                  "body": {
                    "id": 1252,
                    "nodeType": "Block",
                    "src": "5612:623:19",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1181,
                            "name": "collateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1168,
                            "src": "5617:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                              "typeString": "struct Vault.collateralStruct memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1182,
                              "name": "collateralsInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 871,
                              "src": "5630:15:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_collateralStruct_$862_storage_$",
                                "typeString": "mapping(address => struct Vault.collateralStruct storage ref)"
                              }
                            },
                            "id": 1186,
                            "indexExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1183,
                                "name": "allCollateralAddr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 878,
                                "src": "5646:17:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 1185,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1184,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1171,
                                "src": "5664:1:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5646:20:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5630:37:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_collateralStruct_$862_storage",
                              "typeString": "struct Vault.collateralStruct storage ref"
                            }
                          },
                          "src": "5617:50:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                            "typeString": "struct Vault.collateralStruct memory"
                          }
                        },
                        "id": 1188,
                        "nodeType": "ExpressionStatement",
                        "src": "5617:50:19"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1189,
                              "name": "collateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1168,
                              "src": "5676:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                                "typeString": "struct Vault.collateralStruct memory"
                              }
                            },
                            "id": 1190,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "defaultStrategyAddr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 861,
                            "src": "5676:30:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 1193,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5718:1:19",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1192,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5710:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1191,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5710:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 1194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5710:10:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "5676:44:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1251,
                        "nodeType": "IfStatement",
                        "src": "5672:558:19",
                        "trueBody": {
                          "id": 1250,
                          "nodeType": "Block",
                          "src": "5722:508:19",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1201,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 1196,
                                  "name": "strategy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1165,
                                  "src": "5728:8:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$2500",
                                    "typeString": "contract IStrategy"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1198,
                                        "name": "collateral",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1168,
                                        "src": "5749:10:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                                          "typeString": "struct Vault.collateralStruct memory"
                                        }
                                      },
                                      "id": 1199,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "defaultStrategyAddr",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 861,
                                      "src": "5749:30:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 1197,
                                    "name": "IStrategy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2500,
                                    "src": "5739:9:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IStrategy_$2500_$",
                                      "typeString": "type(contract IStrategy)"
                                    }
                                  },
                                  "id": 1200,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5739:41:19",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$2500",
                                    "typeString": "contract IStrategy"
                                  }
                                },
                                "src": "5728:52:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IStrategy_$2500",
                                  "typeString": "contract IStrategy"
                                }
                              },
                              "id": 1202,
                              "nodeType": "ExpressionStatement",
                              "src": "5728:52:19"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1206,
                                          "name": "collateral",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1168,
                                          "src": "5823:10:19",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                                            "typeString": "struct Vault.collateralStruct memory"
                                          }
                                        },
                                        "id": 1207,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "collateralAddr",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 857,
                                        "src": "5823:25:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1204,
                                        "name": "strategy",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1165,
                                        "src": "5795:8:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IStrategy_$2500",
                                          "typeString": "contract IStrategy"
                                        }
                                      },
                                      "id": 1205,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "supportsCollateral",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2493,
                                      "src": "5795:27:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                                        "typeString": "function (address) view external returns (bool)"
                                      }
                                    },
                                    "id": 1208,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5795:54:19",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 1203,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "5787:7:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                    "typeString": "function (bool) pure"
                                  }
                                },
                                "id": 1209,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5787:63:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1210,
                              "nodeType": "ExpressionStatement",
                              "src": "5787:63:19"
                            },
                            {
                              "assignments": [
                                1212
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1212,
                                  "mutability": "mutable",
                                  "name": "amtToAllocate",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 1250,
                                  "src": "5856:18:19",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1211,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5856:4:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1223,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 1220,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "5940:4:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Vault_$1525",
                                          "typeString": "contract Vault"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Vault_$1525",
                                          "typeString": "contract Vault"
                                        }
                                      ],
                                      "id": 1219,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5932:7:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1218,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5932:7:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": null,
                                          "typeString": null
                                        }
                                      }
                                    },
                                    "id": 1221,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5932:13:19",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1214,
                                          "name": "collateral",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1168,
                                          "src": "5895:10:19",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                                            "typeString": "struct Vault.collateralStruct memory"
                                          }
                                        },
                                        "id": 1215,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "collateralAddr",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 857,
                                        "src": "5895:25:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1213,
                                      "name": "IERC20Upgradeable",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2155,
                                      "src": "5877:17:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2155_$",
                                        "typeString": "type(contract IERC20Upgradeable)"
                                      }
                                    },
                                    "id": 1216,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5877:44:19",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20Upgradeable_$2155",
                                      "typeString": "contract IERC20Upgradeable"
                                    }
                                  },
                                  "id": 1217,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2094,
                                  "src": "5877:54:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 1222,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5877:69:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5856:90:19"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1229,
                                      "name": "collateral",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1168,
                                      "src": "6010:10:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                                        "typeString": "struct Vault.collateralStruct memory"
                                      }
                                    },
                                    "id": 1230,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "defaultStrategyAddr",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 861,
                                    "src": "6010:30:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1231,
                                    "name": "amtToAllocate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1212,
                                    "src": "6042:13:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1225,
                                          "name": "collateral",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1168,
                                          "src": "5970:10:19",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                                            "typeString": "struct Vault.collateralStruct memory"
                                          }
                                        },
                                        "id": 1226,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "collateralAddr",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 857,
                                        "src": "5970:25:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1224,
                                      "name": "IERC20Upgradeable",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2155,
                                      "src": "5952:17:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2155_$",
                                        "typeString": "type(contract IERC20Upgradeable)"
                                      }
                                    },
                                    "id": 1227,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5952:44:19",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20Upgradeable_$2155",
                                      "typeString": "contract IERC20Upgradeable"
                                    }
                                  },
                                  "id": 1228,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2189,
                                  "src": "5952:57:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$2155_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20Upgradeable_$2155_$",
                                    "typeString": "function (contract IERC20Upgradeable,address,uint256)"
                                  }
                                },
                                "id": 1232,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5952:104:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1233,
                              "nodeType": "ExpressionStatement",
                              "src": "5952:104:19"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1237,
                                      "name": "collateral",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1168,
                                      "src": "6079:10:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                                        "typeString": "struct Vault.collateralStruct memory"
                                      }
                                    },
                                    "id": 1238,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "collateralAddr",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 857,
                                    "src": "6079:25:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1239,
                                    "name": "amtToAllocate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1212,
                                    "src": "6106:13:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1234,
                                    "name": "strategy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1165,
                                    "src": "6062:8:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStrategy_$2500",
                                      "typeString": "contract IStrategy"
                                    }
                                  },
                                  "id": 1236,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "deposit",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2437,
                                  "src": "6062:16:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256) external"
                                  }
                                },
                                "id": 1240,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6062:58:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1241,
                              "nodeType": "ExpressionStatement",
                              "src": "6062:58:19"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1243,
                                      "name": "collateral",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1168,
                                      "src": "6151:10:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                                        "typeString": "struct Vault.collateralStruct memory"
                                      }
                                    },
                                    "id": 1244,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "collateralAddr",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 857,
                                    "src": "6151:25:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1245,
                                      "name": "collateral",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1168,
                                      "src": "6178:10:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                                        "typeString": "struct Vault.collateralStruct memory"
                                      }
                                    },
                                    "id": 1246,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "defaultStrategyAddr",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 861,
                                    "src": "6178:30:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1247,
                                    "name": "amtToAllocate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1212,
                                    "src": "6210:13:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1242,
                                  "name": "CollateralAllocated",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 847,
                                  "src": "6131:19:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 1248,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6131:93:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1249,
                              "nodeType": "EmitStatement",
                              "src": "6126:98:19"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1174,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1171,
                      "src": "5577:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1175,
                        "name": "allCollateralAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "5581:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5581:24:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5577:28:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1253,
                  "initializationExpression": {
                    "assignments": [
                      1171
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1171,
                        "mutability": "mutable",
                        "name": "y",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1253,
                        "src": "5565:6:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1170,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5565:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1173,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5574:1:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5565:10:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5607:3:19",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1178,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1171,
                        "src": "5607:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1180,
                    "nodeType": "ExpressionStatement",
                    "src": "5607:3:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "5560:675:19"
                }
              ]
            },
            "documentation": {
              "id": 1157,
              "nodeType": "StructuredDocumentation",
              "src": "5371:71:19",
              "text": " @dev allocate collateral on this contract into strategies."
            },
            "functionSelector": "abaa9916",
            "id": 1255,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1160,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1159,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1601,
                  "src": "5473:9:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5473:9:19"
              },
              {
                "arguments": null,
                "id": 1162,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1161,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2421,
                  "src": "5483:12:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5483:12:19"
              }
            ],
            "name": "allocate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5461:2:19"
            },
            "returnParameters": {
              "id": 1163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5496:0:19"
            },
            "scope": 1525,
            "src": "5444:794:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1270,
              "nodeType": "Block",
              "src": "6378:65:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1261,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1259,
                      "src": "6382:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1265,
                            "name": "totalValueInStrategies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1425,
                            "src": "6414:22:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6414:24:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1262,
                            "name": "totalValueInVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1309,
                            "src": "6390:17:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6390:19:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1838,
                        "src": "6390:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6390:49:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6382:57:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1269,
                  "nodeType": "ExpressionStatement",
                  "src": "6382:57:19"
                }
              ]
            },
            "documentation": {
              "id": 1256,
              "nodeType": "StructuredDocumentation",
              "src": "6241:74:19",
              "text": " @dev the value of collaterals in this contract and strategies"
            },
            "functionSelector": "ec18154e",
            "id": 1271,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalValueLocked",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6342:2:19"
            },
            "returnParameters": {
              "id": 1260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1259,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1271,
                  "src": "6366:10:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1258,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6366:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6365:12:19"
            },
            "scope": 1525,
            "src": "6317:126:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1308,
              "nodeType": "Block",
              "src": "6569:207:19",
              "statements": [
                {
                  "body": {
                    "id": 1306,
                    "nodeType": "Block",
                    "src": "6625:148:19",
                    "statements": [
                      {
                        "assignments": [
                          1289
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1289,
                            "mutability": "mutable",
                            "name": "collateral",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 1306,
                            "src": "6630:34:19",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                              "typeString": "struct Vault.collateralStruct"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 1288,
                              "name": "collateralStruct",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 862,
                              "src": "6630:16:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_collateralStruct_$862_storage_ptr",
                                "typeString": "struct Vault.collateralStruct"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1295,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1290,
                            "name": "collateralsInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 871,
                            "src": "6667:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_collateralStruct_$862_storage_$",
                              "typeString": "mapping(address => struct Vault.collateralStruct storage ref)"
                            }
                          },
                          "id": 1294,
                          "indexExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1291,
                              "name": "allCollateralAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 878,
                              "src": "6683:17:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1293,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1292,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1278,
                              "src": "6701:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6683:20:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6667:37:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_collateralStruct_$862_storage",
                            "typeString": "struct Vault.collateralStruct storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6630:74:19"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1296,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1275,
                            "src": "6709:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1300,
                                      "name": "collateral",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1289,
                                      "src": "6741:10:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                                        "typeString": "struct Vault.collateralStruct memory"
                                      }
                                    },
                                    "id": 1301,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "collateralAddr",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 857,
                                    "src": "6741:25:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1299,
                                  "name": "_valueInVault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1387,
                                  "src": "6727:13:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view returns (uint256)"
                                  }
                                },
                                "id": 1302,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6727:40:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 1297,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1275,
                                "src": "6717:5:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1298,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1838,
                              "src": "6717:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6717:51:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6709:59:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1305,
                        "nodeType": "ExpressionStatement",
                        "src": "6709:59:19"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1281,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1278,
                      "src": "6590:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1282,
                        "name": "allCollateralAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "6594:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6594:24:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6590:28:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1307,
                  "initializationExpression": {
                    "assignments": [
                      1278
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1278,
                        "mutability": "mutable",
                        "name": "y",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1307,
                        "src": "6578:6:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1277,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6578:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1280,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6587:1:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6578:10:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6620:3:19",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1285,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1278,
                        "src": "6620:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1287,
                    "nodeType": "ExpressionStatement",
                    "src": "6620:3:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "6573:200:19"
                }
              ]
            },
            "documentation": {
              "id": 1272,
              "nodeType": "StructuredDocumentation",
              "src": "6446:59:19",
              "text": " @dev the value of collaterals in this contract"
            },
            "functionSelector": "7e428dac",
            "id": 1309,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalValueInVault",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1273,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6533:2:19"
            },
            "returnParameters": {
              "id": 1276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1275,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1309,
                  "src": "6557:10:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1274,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6557:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6556:12:19"
            },
            "scope": 1525,
            "src": "6507:269:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1386,
              "nodeType": "Block",
              "src": "6941:530:19",
              "statements": [
                {
                  "assignments": [
                    1318
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1318,
                      "mutability": "mutable",
                      "name": "collateral",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1386,
                      "src": "6945:34:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                        "typeString": "struct Vault.collateralStruct"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1317,
                        "name": "collateralStruct",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 862,
                        "src": "6945:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_collateralStruct_$862_storage_ptr",
                          "typeString": "struct Vault.collateralStruct"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1322,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1319,
                      "name": "collateralsInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 871,
                      "src": "6982:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_collateralStruct_$862_storage_$",
                        "typeString": "mapping(address => struct Vault.collateralStruct storage ref)"
                      }
                    },
                    "id": 1321,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1320,
                      "name": "_collateralAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1312,
                      "src": "6998:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6982:32:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_collateralStruct_$862_storage",
                      "typeString": "struct Vault.collateralStruct storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6945:69:19"
                },
                {
                  "assignments": [
                    1324
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1324,
                      "mutability": "mutable",
                      "name": "priceColla",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1386,
                      "src": "7018:15:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1323,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7018:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1328,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_100000000_by_1",
                      "typeString": "int_const 100000000"
                    },
                    "id": 1327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 1325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7036:2:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "38",
                      "id": 1326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7040:1:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_8_by_1",
                        "typeString": "int_const 8"
                      },
                      "value": "8"
                    },
                    "src": "7036:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000000_by_1",
                      "typeString": "int_const 100000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7018:23:19"
                },
                {
                  "assignments": [
                    1330
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1330,
                      "mutability": "mutable",
                      "name": "precisionColla",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1386,
                      "src": "7045:19:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1329,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7045:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1334,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_100000000_by_1",
                      "typeString": "int_const 100000000"
                    },
                    "id": 1333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 1331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7067:2:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "38",
                      "id": 1332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7071:1:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_8_by_1",
                        "typeString": "int_const 8"
                      },
                      "value": "8"
                    },
                    "src": "7067:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000000_by_1",
                      "typeString": "int_const 100000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7045:27:19"
                },
                {
                  "assignments": [
                    1336
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1336,
                      "mutability": "mutable",
                      "name": "collateralAddrDecimal",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1386,
                      "src": "7076:26:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1335,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7076:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1346,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1340,
                                  "name": "collateral",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1318,
                                  "src": "7127:10:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                                    "typeString": "struct Vault.collateralStruct memory"
                                  }
                                },
                                "id": 1341,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "collateralAddr",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 857,
                                "src": "7127:25:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1339,
                              "name": "ERC20Upgradeable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4054,
                              "src": "7110:16:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20Upgradeable_$4054_$",
                                "typeString": "type(contract ERC20Upgradeable)"
                              }
                            },
                            "id": 1342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7110:43:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Upgradeable_$4054",
                              "typeString": "contract ERC20Upgradeable"
                            }
                          },
                          "id": 1343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3626,
                          "src": "7110:52:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 1344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7110:54:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 1338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7105:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 1337,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7105:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 1345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7105:60:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7076:89:19"
                },
                {
                  "assignments": [
                    1348
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1348,
                      "mutability": "mutable",
                      "name": "collateralTotalValueInVault",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1386,
                      "src": "7169:32:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1347,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7169:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1365,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1363,
                        "name": "precisionColla",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1330,
                        "src": "7294:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1360,
                            "name": "priceColla",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1324,
                            "src": "7278:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1356,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "7267:4:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Vault_$1525",
                                      "typeString": "contract Vault"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Vault_$1525",
                                      "typeString": "contract Vault"
                                    }
                                  ],
                                  "id": 1355,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7259:7:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1354,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7259:7:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 1357,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7259:13:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1350,
                                      "name": "collateral",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1318,
                                      "src": "7222:10:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                                        "typeString": "struct Vault.collateralStruct memory"
                                      }
                                    },
                                    "id": 1351,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "collateralAddr",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 857,
                                    "src": "7222:25:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1349,
                                  "name": "IERC20Upgradeable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2155,
                                  "src": "7204:17:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$2155_$",
                                    "typeString": "type(contract IERC20Upgradeable)"
                                  }
                                },
                                "id": 1352,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7204:44:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20Upgradeable_$2155",
                                  "typeString": "contract IERC20Upgradeable"
                                }
                              },
                              "id": 1353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2094,
                              "src": "7204:54:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 1358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7204:69:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1894,
                          "src": "7204:73:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7204:85:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1916,
                      "src": "7204:89:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7204:105:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7169:140:19"
                },
                {
                  "assignments": [
                    1367
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1367,
                      "mutability": "mutable",
                      "name": "collateralTotalValueInVault_18",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1386,
                      "src": "7313:35:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1366,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7313:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1381,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 1370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7383:2:19",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1376,
                                  "name": "collateralAddrDecimal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1336,
                                  "src": "7401:21:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "3138",
                                      "id": 1373,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7393:2:19",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_18_by_1",
                                        "typeString": "int_const 18"
                                      },
                                      "value": "18"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_18_by_1",
                                        "typeString": "int_const 18"
                                      }
                                    ],
                                    "id": 1372,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7388:4:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 1371,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7388:4:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 1374,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7388:8:19",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1375,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1860,
                                "src": "7388:12:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1377,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7388:35:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1378,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7387:37:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7383:41:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1368,
                        "name": "collateralTotalValueInVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1348,
                        "src": "7351:27:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1894,
                      "src": "7351:31:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7351:74:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7313:112:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1382,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1315,
                      "src": "7429:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1383,
                      "name": "collateralTotalValueInVault_18",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1367,
                      "src": "7437:30:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7429:38:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1385,
                  "nodeType": "ExpressionStatement",
                  "src": "7429:38:19"
                }
              ]
            },
            "documentation": {
              "id": 1310,
              "nodeType": "StructuredDocumentation",
              "src": "6779:77:19",
              "text": " @dev the value of collateral of _collateralAddr in this contract"
            },
            "id": 1387,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_valueInVault",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1313,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1312,
                  "mutability": "mutable",
                  "name": "_collateralAddr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1387,
                  "src": "6881:23:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1311,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6881:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6880:25:19"
            },
            "returnParameters": {
              "id": 1316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1315,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1387,
                  "src": "6929:10:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1314,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6929:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6928:12:19"
            },
            "scope": 1525,
            "src": "6858:613:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1424,
              "nodeType": "Block",
              "src": "7603:210:19",
              "statements": [
                {
                  "body": {
                    "id": 1422,
                    "nodeType": "Block",
                    "src": "7659:151:19",
                    "statements": [
                      {
                        "assignments": [
                          1405
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1405,
                            "mutability": "mutable",
                            "name": "collateral",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 1422,
                            "src": "7664:34:19",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                              "typeString": "struct Vault.collateralStruct"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 1404,
                              "name": "collateralStruct",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 862,
                              "src": "7664:16:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_collateralStruct_$862_storage_ptr",
                                "typeString": "struct Vault.collateralStruct"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1411,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1406,
                            "name": "collateralsInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 871,
                            "src": "7701:15:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_collateralStruct_$862_storage_$",
                              "typeString": "mapping(address => struct Vault.collateralStruct storage ref)"
                            }
                          },
                          "id": 1410,
                          "indexExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1407,
                              "name": "allCollateralAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 878,
                              "src": "7717:17:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1409,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1408,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1394,
                              "src": "7735:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7717:20:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7701:37:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_collateralStruct_$862_storage",
                            "typeString": "struct Vault.collateralStruct storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7664:74:19"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1412,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1391,
                            "src": "7743:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1416,
                                      "name": "collateral",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1405,
                                      "src": "7778:10:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                                        "typeString": "struct Vault.collateralStruct memory"
                                      }
                                    },
                                    "id": 1417,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "collateralAddr",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 857,
                                    "src": "7778:25:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1415,
                                  "name": "_valueInStrategy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1524,
                                  "src": "7761:16:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view returns (uint256)"
                                  }
                                },
                                "id": 1418,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7761:43:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 1413,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1391,
                                "src": "7751:5:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1838,
                              "src": "7751:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7751:54:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7743:62:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1421,
                        "nodeType": "ExpressionStatement",
                        "src": "7743:62:19"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1397,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1394,
                      "src": "7624:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1398,
                        "name": "allCollateralAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 878,
                        "src": "7628:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7628:24:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7624:28:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1423,
                  "initializationExpression": {
                    "assignments": [
                      1394
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1394,
                        "mutability": "mutable",
                        "name": "y",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1423,
                        "src": "7612:6:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1393,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7612:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1396,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7621:1:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7612:10:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7654:3:19",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1401,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1394,
                        "src": "7654:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1403,
                    "nodeType": "ExpressionStatement",
                    "src": "7654:3:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "7607:203:19"
                }
              ]
            },
            "documentation": {
              "id": 1388,
              "nodeType": "StructuredDocumentation",
              "src": "7474:60:19",
              "text": " @dev the value of collaterals in the strategies"
            },
            "functionSelector": "17852264",
            "id": 1425,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalValueInStrategies",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7567:2:19"
            },
            "returnParameters": {
              "id": 1392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1391,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1425,
                  "src": "7591:10:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1390,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7591:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7590:12:19"
            },
            "scope": 1525,
            "src": "7536:277:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1523,
              "nodeType": "Block",
              "src": "7974:739:19",
              "statements": [
                {
                  "assignments": [
                    1434
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1434,
                      "mutability": "mutable",
                      "name": "collateral",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1523,
                      "src": "7978:34:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                        "typeString": "struct Vault.collateralStruct"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1433,
                        "name": "collateralStruct",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 862,
                        "src": "7978:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_collateralStruct_$862_storage_ptr",
                          "typeString": "struct Vault.collateralStruct"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1438,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1435,
                      "name": "collateralsInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 871,
                      "src": "8015:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_collateralStruct_$862_storage_$",
                        "typeString": "mapping(address => struct Vault.collateralStruct storage ref)"
                      }
                    },
                    "id": 1437,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1436,
                      "name": "_collateralAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1428,
                      "src": "8031:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8015:32:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_collateralStruct_$862_storage",
                      "typeString": "struct Vault.collateralStruct storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7978:69:19"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1439,
                        "name": "collateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1434,
                        "src": "8055:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                          "typeString": "struct Vault.collateralStruct memory"
                        }
                      },
                      "id": 1440,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "defaultStrategyAddr",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 861,
                      "src": "8055:30:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8097:1:19",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8089:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1441,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8089:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8089:10:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "8055:44:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1449,
                  "nodeType": "IfStatement",
                  "src": "8051:68:19",
                  "trueBody": {
                    "id": 1448,
                    "nodeType": "Block",
                    "src": "8101:18:19",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8113:1:19",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1432,
                        "id": 1447,
                        "nodeType": "Return",
                        "src": "8106:8:19"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1451
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1451,
                      "mutability": "mutable",
                      "name": "strategy",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1523,
                      "src": "8122:18:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$2500",
                        "typeString": "contract IStrategy"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1450,
                        "name": "IStrategy",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2500,
                        "src": "8122:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$2500",
                          "typeString": "contract IStrategy"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1456,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1453,
                          "name": "collateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1434,
                          "src": "8153:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                            "typeString": "struct Vault.collateralStruct memory"
                          }
                        },
                        "id": 1454,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "defaultStrategyAddr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 861,
                        "src": "8153:30:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1452,
                      "name": "IStrategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2500,
                      "src": "8143:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IStrategy_$2500_$",
                        "typeString": "type(contract IStrategy)"
                      }
                    },
                    "id": 1455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8143:41:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$2500",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8122:62:19"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 1462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "8192:55:19",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1459,
                            "name": "collateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1434,
                            "src": "8221:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                              "typeString": "struct Vault.collateralStruct memory"
                            }
                          },
                          "id": 1460,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "collateralAddr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 857,
                          "src": "8221:25:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1457,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1451,
                          "src": "8193:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$2500",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "id": 1458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsCollateral",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2493,
                        "src": "8193:27:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view external returns (bool)"
                        }
                      },
                      "id": 1461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8193:54:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1466,
                  "nodeType": "IfStatement",
                  "src": "8188:79:19",
                  "trueBody": {
                    "id": 1465,
                    "nodeType": "Block",
                    "src": "8249:18:19",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8261:1:19",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1432,
                        "id": 1464,
                        "nodeType": "Return",
                        "src": "8254:8:19"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1468
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1468,
                      "mutability": "mutable",
                      "name": "priceColla",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1523,
                      "src": "8270:15:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1467,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8270:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1472,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_100000000_by_1",
                      "typeString": "int_const 100000000"
                    },
                    "id": 1471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 1469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8288:2:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "38",
                      "id": 1470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8292:1:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_8_by_1",
                        "typeString": "int_const 8"
                      },
                      "value": "8"
                    },
                    "src": "8288:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000000_by_1",
                      "typeString": "int_const 100000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8270:23:19"
                },
                {
                  "assignments": [
                    1474
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1474,
                      "mutability": "mutable",
                      "name": "precisionColla",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1523,
                      "src": "8297:19:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1473,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8297:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1478,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_100000000_by_1",
                      "typeString": "int_const 100000000"
                    },
                    "id": 1477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 1475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8319:2:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "38",
                      "id": 1476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8323:1:19",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_8_by_1",
                        "typeString": "int_const 8"
                      },
                      "value": "8"
                    },
                    "src": "8319:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000000_by_1",
                      "typeString": "int_const 100000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8297:27:19"
                },
                {
                  "assignments": [
                    1480
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1480,
                      "mutability": "mutable",
                      "name": "collateralAddrDecimal",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1523,
                      "src": "8328:26:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1479,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8328:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1490,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1484,
                                  "name": "collateral",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1434,
                                  "src": "8379:10:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                                    "typeString": "struct Vault.collateralStruct memory"
                                  }
                                },
                                "id": 1485,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "collateralAddr",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 857,
                                "src": "8379:25:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1483,
                              "name": "ERC20Upgradeable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4054,
                              "src": "8362:16:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20Upgradeable_$4054_$",
                                "typeString": "type(contract ERC20Upgradeable)"
                              }
                            },
                            "id": 1486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8362:43:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Upgradeable_$4054",
                              "typeString": "contract ERC20Upgradeable"
                            }
                          },
                          "id": 1487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3626,
                          "src": "8362:52:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 1488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8362:54:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 1482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "8357:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 1481,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8357:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 1489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8357:60:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8328:89:19"
                },
                {
                  "assignments": [
                    1492
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1492,
                      "mutability": "mutable",
                      "name": "collateralTotalValueInStrategy",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1523,
                      "src": "8421:35:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1491,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8421:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1504,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1502,
                        "name": "precisionColla",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1474,
                        "src": "8528:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1499,
                            "name": "priceColla",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1468,
                            "src": "8512:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1495,
                                  "name": "collateral",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1434,
                                  "src": "8481:10:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_collateralStruct_$862_memory_ptr",
                                    "typeString": "struct Vault.collateralStruct memory"
                                  }
                                },
                                "id": 1496,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "collateralAddr",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 857,
                                "src": "8481:25:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 1493,
                                "name": "strategy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1451,
                                "src": "8459:8:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IStrategy_$2500",
                                  "typeString": "contract IStrategy"
                                }
                              },
                              "id": 1494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "checkBalance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2473,
                              "src": "8459:21:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 1497,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8459:48:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1894,
                          "src": "8459:52:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8459:64:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1916,
                      "src": "8459:68:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8459:84:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8421:122:19"
                },
                {
                  "assignments": [
                    1506
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1506,
                      "mutability": "mutable",
                      "name": "collateralTotalValueInStrategy_18",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1523,
                      "src": "8547:38:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1505,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8547:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1520,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 1509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8623:2:19",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1515,
                                  "name": "collateralAddrDecimal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1480,
                                  "src": "8641:21:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "hexValue": "3138",
                                      "id": 1512,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8633:2:19",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_18_by_1",
                                        "typeString": "int_const 18"
                                      },
                                      "value": "18"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_18_by_1",
                                        "typeString": "int_const 18"
                                      }
                                    ],
                                    "id": 1511,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8628:4:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 1510,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8628:4:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 1513,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8628:8:19",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1514,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1860,
                                "src": "8628:12:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1516,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8628:35:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1517,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8627:37:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8623:41:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1507,
                        "name": "collateralTotalValueInStrategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1492,
                        "src": "8588:30:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1894,
                      "src": "8588:34:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8588:77:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8547:118:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1521,
                    "name": "collateralTotalValueInStrategy_18",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1506,
                    "src": "8676:33:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1432,
                  "id": 1522,
                  "nodeType": "Return",
                  "src": "8669:40:19"
                }
              ]
            },
            "documentation": {
              "id": 1426,
              "nodeType": "StructuredDocumentation",
              "src": "7816:76:19",
              "text": " @dev the value of collateral of _collateralAddr in its strategy"
            },
            "id": 1524,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_valueInStrategy",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1428,
                  "mutability": "mutable",
                  "name": "_collateralAddr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1524,
                  "src": "7920:23:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1427,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7920:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7919:25:19"
            },
            "returnParameters": {
              "id": 1432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1431,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1524,
                  "src": "7968:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1430,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7968:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7967:6:19"
            },
            "scope": 1525,
            "src": "7894:819:19",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1526,
        "src": "1009:7706:19"
      }
    ],
    "src": "376:8340:19"
  },
  "bytecode": "608060405234801561001057600080fd5b50611fbe806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638d52fec611610097578063c2f21e0f11610066578063c2f21e0f1461023f578063c6783af11461025c578063ec18154e1461028a578063f2fde38b14610292576100f5565b80638d52fec6146101955780638da5cb5b146101e657806396577a1a146101ee578063abaa991614610237576100f5565b8063715018a6116100d3578063715018a614610144578063792f58741461014c5780637e428dac146101855780638129fc1c1461018d576100f5565b806317852264146100fa578063223e5479146101145780634641257d1461013c575b600080fd5b6101026102b8565b60408051918252519081900360200190f35b61013a6004803603602081101561012a57600080fd5b50356001600160a01b0316610364565b005b61013a6104e3565b61013a6106e2565b6101696004803603602081101561016257600080fd5b503561078e565b604080516001600160a01b039092168252519081900360200190f35b6101026107b5565b61013a610856565b6101bb600480360360208110156101ab57600080fd5b50356001600160a01b0316610908565b604080516001600160a01b039485168152921515602084015292168183015290519081900360600190f35b610169610939565b6102146004803603602081101561020457600080fd5b50356001600160a01b0316610948565b604080516001600160a01b03909316835290151560208301528051918290030190f35b61013a61096f565b6101696004803603602081101561025557600080fd5b5035610ca9565b61013a6004803603604081101561027257600080fd5b506001600160a01b0381358116916020013516610cb6565b610102610f00565b61013a600480360360208110156102a857600080fd5b50356001600160a01b0316610f20565b6000805b609954811015610360576102ce611e57565b60976000609984815481106102df57fe5b6000918252602080832091909101546001600160a01b03908116845283820194909452604092830190912082516060810184528154808616808352600160a01b90910460ff16151593820193909352600190910154909316918301919091529091506103559061034e90611023565b849061125d565b9250506001016102bc565b5090565b61036c6112c0565b6001600160a01b031661037d610939565b6001600160a01b0316146103c6576040805162461bcd60e51b81526020600482018190526024820152600080516020611f13833981519152604482015290519081900360640190fd5b6001600160a01b038116600090815260986020526040902054600160a01b900460ff161561042c576040805162461bcd60e51b815260206004820152600e60248201526d14dd1c985d1959de48185919195960921b604482015290519081900360640190fd5b6001600160a01b0381811660008181526098602090815260408083208054600160a01b6001600160a01b0319918216871760ff60a01b191617808355609a805460018181018355919097527f44da158ba27f9252712a74ff6a55c5d531f69609f1f6e7f17c4443a8e2089be490960180549190981691161790955580519384529083019190915280517f835a6c4fc865a810f7943cfca478cada6bf307d7dbd75892a046aee7ea3cc2149281900390910190a15050565b6104eb6112c0565b6001600160a01b03166104fc610939565b6001600160a01b031614610545576040805162461bcd60e51b81526020600482018190526024820152600080516020611f13833981519152604482015290519081900360640190fd5b6002606554141561059d576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b600260655560006105ac611e57565b60005b6099548110156106d85760976000609983815481106105ca57fe5b60009182526020808320909101546001600160a01b03908116845283820194909452604092830190912082516060810184528154808616825260ff600160a01b9091041615159281019290925260010154909216908201819052909250156106d05781604001519250826001600160a01b031663a400326f83600001516040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561068457600080fd5b505afa158015610698573d6000803e3d6000fd5b505050506040513d60208110156106ae57600080fd5b50516106b957600080fd5b6106c78383600001516112c4565b6106d083611410565b6001016105af565b5050600160655550565b6106ea6112c0565b6001600160a01b03166106fb610939565b6001600160a01b031614610744576040805162461bcd60e51b81526020600482018190526024820152600080516020611f13833981519152604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b609a818154811061079b57fe5b6000918252602090912001546001600160a01b0316905081565b6000805b609954811015610360576107cb611e57565b60976000609984815481106107dc57fe5b6000918252602080832091909101546001600160a01b03908116845283820194909452604092830190912082516060810184528154808616808352600160a01b90910460ff161515938201939093526001909101549093169183019190915290915061084b9061034e90611561565b9250506001016107b9565b600054610100900460ff168061086f575061086f611696565b8061087d575060005460ff16155b6108b85760405162461bcd60e51b815260040180806020018281038252602e815260200180611ec4602e913960400191505060405180910390fd5b600054610100900460ff161580156108e3576000805460ff1961ff0019909116610100171660011790555b6108eb6116a7565b6108f3611744565b8015610905576000805461ff00191690555b50565b609760205260009081526040902080546001909101546001600160a01b0380831692600160a01b900460ff16911683565b6033546001600160a01b031690565b6098602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b6109776112c0565b6001600160a01b0316610988610939565b6001600160a01b0316146109d1576040805162461bcd60e51b81526020600482018190526024820152600080516020611f13833981519152604482015290519081900360640190fd5b60026065541415610a29576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026065556000610a38611e57565b60005b6099548110156106d8576097600060998381548110610a5657fe5b60009182526020808320909101546001600160a01b03908116845283820194909452604092830190912082516060810184528154808616825260ff600160a01b909104161515928101929092526001015490921690820181905290925015610ca15781604001519250826001600160a01b031663a400326f83600001516040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610b1057600080fd5b505afa158015610b24573d6000803e3d6000fd5b505050506040513d6020811015610b3a57600080fd5b5051610b4557600080fd5b8151604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015610b8f57600080fd5b505afa158015610ba3573d6000803e3d6000fd5b505050506040513d6020811015610bb957600080fd5b505160408401518451919250610bd9916001600160a01b031690836117d9565b836001600160a01b03166347e7ef248460000151836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610c3457600080fd5b505af1158015610c48573d6000803e3d6000fd5b5050505082604001516001600160a01b031683600001516001600160a01b03167f290d3382f5cb307945388c5a4ab3a9e3695c8706927c11c35eb329620a310961836040518082815260200191505060405180910390a3505b600101610a3b565b6099818154811061079b57fe5b610cbe6112c0565b6001600160a01b0316610ccf610939565b6001600160a01b031614610d18576040805162461bcd60e51b81526020600482018190526024820152600080516020611f13833981519152604482015290519081900360640190fd5b6001600160a01b038216600090815260976020526040902054600160a01b900460ff1615610d80576040805162461bcd60e51b815260206004820152601060248201526f10dbdb1b185d195c985b08185919195960821b604482015290519081900360640190fd5b6012826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610dbb57600080fd5b505afa158015610dcf573d6000803e3d6000fd5b505050506040513d6020811015610de557600080fd5b505160ff161115610e275760405162461bcd60e51b815260040180806020018281038252602c815260200180611f33602c913960400191505060405180910390fd5b6001600160a01b038083166000818152609760209081526040808320805460ff60a01b196001600160a01b0319918216871716600160a01b908117808455600180850180548c8c1690861681179091556099805492830181559098527f72a152ddfb8e864297c917af52ea6c1c68aead0fee1a62673fcc7e0c94979d000180549093169816979097179055805482519586529590950460ff1615159184019190915282810191909152517f1fb89240e26efaf4d05f8f118b830b58a8b4843ceefb4c360c2673fbf0189d609181900360600190a1505050565b6000610f1b610f0d6102b8565b610f156107b5565b9061125d565b905090565b610f286112c0565b6001600160a01b0316610f39610939565b6001600160a01b031614610f82576040805162461bcd60e51b81526020600482018190526024820152600080516020611f13833981519152604482015290519081900360640190fd5b6001600160a01b038116610fc75760405162461bcd60e51b8152600401808060200182810382526026815260200180611e786026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b600061102d611e57565b506001600160a01b03828116600090815260976020908152604091829020825160608101845281548086168252600160a01b900460ff1615159281019290925260010154909216908201819052611088576000915050611258565b600081604001519050806001600160a01b031663a400326f83600001516040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156110e257600080fd5b505afa1580156110f6573d6000803e3d6000fd5b505050506040513d602081101561110c57600080fd5b505161111d57600092505050611258565b60006305f5e100905060006305f5e1009050600084600001516001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561116e57600080fd5b505afa158015611182573d6000803e3d6000fd5b505050506040513d602081101561119857600080fd5b5051855160408051632fa8a91360e11b81526001600160a01b039283166004820152905160ff909316935060009261123292869261122c9289928b1691635f515226916024808301926020929190829003018186803b1580156111fa57600080fd5b505afa15801561120e573d6000803e3d6000fd5b505050506040513d602081101561122457600080fd5b50519061182b565b90611884565b9050600061124e6112446012856118eb565b8390600a0a61182b565b9750505050505050505b919050565b6000828201838110156112b7576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b90505b92915050565b3390565b6112cc611e57565b506001600160a01b038181166000818152609760209081526040808320815160608101835281548088168252600160a01b900460ff161515818501526001909101548616818301528151638d2c872760e01b8152600481019590955290519094929392871692638d2c8727926024808301939192829003018186803b15801561135457600080fd5b505afa158015611368573d6000803e3d6000fd5b505050506040513d602081101561137e57600080fd5b50519050801561140a578151604080516369ad748960e01b81523060048201526001600160a01b03928316602482015281516000938493908916926369ad7489926044808301939282900301818787803b1580156113db57600080fd5b505af11580156113ef573d6000803e3d6000fd5b505050506040513d604081101561140557600080fd5b505050505b50505050565b6000816001600160a01b031663125f9e336040518163ffffffff1660e01b815260040160206040518083038186803b15801561144b57600080fd5b505afa15801561145f573d6000803e3d6000fd5b505050506040513d602081101561147557600080fd5b505160408051631d4814c160e21b815290519192506000916001600160a01b038516916375205304916004808301926020929190829003018186803b1580156114bd57600080fd5b505afa1580156114d1573d6000803e3d6000fd5b505050506040513d60208110156114e757600080fd5b50519050801561155c576000836001600160a01b0316630242241d6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561152e57600080fd5b505af1158015611542573d6000803e3d6000fd5b505050506040513d602081101561155857600080fd5b5050505b505050565b600061156b611e57565b506001600160a01b03828116600090815260976020908152604080832081516060810183528154808716808352600160a01b90910460ff1615158286015260019092015490951685830152815163313ce56760e01b815291516305f5e100948594909363313ce5679260048083019392829003018186803b1580156115ef57600080fd5b505afa158015611603573d6000803e3d6000fd5b505050506040513d602081101561161957600080fd5b50518451604080516370a0823160e01b8152306004820152905160ff909316935060009261167892869261122c9289926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156111fa57600080fd5b9050600061168a6112446012856118eb565b98975050505050505050565b60006116a130611948565b15905090565b600054610100900460ff16806116c057506116c0611696565b806116ce575060005460ff16155b6117095760405162461bcd60e51b815260040180806020018281038252602e815260200180611ec4602e913960400191505060405180910390fd5b600054610100900460ff16158015611734576000805460ff1961ff0019909116610100171660011790555b61173c61194e565b6108f36119ee565b600054610100900460ff168061175d575061175d611696565b8061176b575060005460ff16155b6117a65760405162461bcd60e51b815260040180806020018281038252602e815260200180611ec4602e913960400191505060405180910390fd5b600054610100900460ff161580156117d1576000805460ff1961ff0019909116610100171660011790555b6108f3611ae7565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261155c908490611b8d565b60008261183a575060006112ba565b8282028284828161184757fe5b04146112b75760405162461bcd60e51b8152600401808060200182810382526021815260200180611ef26021913960400191505060405180910390fd5b60008082116118da576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b8183816118e357fe5b049392505050565b600082821115611942576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b3b151590565b600054610100900460ff16806119675750611967611696565b80611975575060005460ff16155b6119b05760405162461bcd60e51b815260040180806020018281038252602e815260200180611ec4602e913960400191505060405180910390fd5b600054610100900460ff161580156108f3576000805460ff1961ff0019909116610100171660011790558015610905576000805461ff001916905550565b600054610100900460ff1680611a075750611a07611696565b80611a15575060005460ff16155b611a505760405162461bcd60e51b815260040180806020018281038252602e815260200180611ec4602e913960400191505060405180910390fd5b600054610100900460ff16158015611a7b576000805460ff1961ff0019909116610100171660011790555b6000611a856112c0565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508015610905576000805461ff001916905550565b600054610100900460ff1680611b005750611b00611696565b80611b0e575060005460ff16155b611b495760405162461bcd60e51b815260040180806020018281038252602e815260200180611ec4602e913960400191505060405180910390fd5b600054610100900460ff16158015611b74576000805460ff1961ff0019909116610100171660011790555b60016065558015610905576000805461ff001916905550565b6060611be2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611c3e9092919063ffffffff16565b80519091501561155c57808060200190516020811015611c0157600080fd5b505161155c5760405162461bcd60e51b815260040180806020018281038252602a815260200180611f5f602a913960400191505060405180910390fd5b6060611c4d8484600085611c57565b90505b9392505050565b606082471015611c985760405162461bcd60e51b8152600401808060200182810382526026815260200180611e9e6026913960400191505060405180910390fd5b611ca185611948565b611cf2576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310611d315780518252601f199092019160209182019101611d12565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611d93576040519150601f19603f3d011682016040523d82523d6000602084013e611d98565b606091505b5091509150611da8828286611db3565b979650505050505050565b60608315611dc2575081611c50565b825115611dd25782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611e1c578181015183820152602001611e04565b50505050905090810190601f168015611e495780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60408051606081018252600080825260208201819052918101919091529056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572436f6c6c61746572616c7320646563696d616c73206e65656420746f206265206c657373207468616e2031385361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220264547be0853199ccb58a4216f9488d8d9e6350441b24fd170b066a3b43279d664736f6c634300060c0033",
  "bytecodeSha1": "c48676ec0738091e1f3f3472c32006ce163f7f0c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "Vault",
  "coverageMap": {
    "branches": {
      "1": {
        "OwnableUpgradeable.transferOwnership": {
          "84": [
            1547,
            1570,
            true
          ],
          "85": [
            2349,
            2371,
            true
          ]
        }
      },
      "10": {
        "Vault.allocate": {
          "86": [
            2495,
            2514,
            true
          ]
        }
      },
      "19": {
        "Vault._harvestInterest": {
          "75": [
            5203,
            5221,
            false
          ]
        },
        "Vault._harvestReward": {
          "76": [
            4606,
            4622,
            false
          ]
        },
        "Vault._valueInStrategy": {
          "74": [
            8193,
            8247,
            false
          ]
        },
        "Vault.addCollateral": {
          "72": [
            2548,
            2587,
            true
          ],
          "73": [
            2620,
            2670,
            true
          ]
        },
        "Vault.addStrategy": {
          "67": [
            3268,
            3304,
            true
          ]
        },
        "Vault.allocate": {
          "70": [
            5676,
            5720,
            false
          ],
          "71": [
            5795,
            5849,
            true
          ]
        },
        "Vault.harvest": {
          "68": [
            3968,
            4012,
            false
          ],
          "69": [
            4088,
            4142,
            true
          ]
        }
      },
      "2": {
        "SafeMathUpgradeable.add": {
          "89": [
            2813,
            2819,
            true
          ]
        },
        "SafeMathUpgradeable.div": {
          "92": [
            4313,
            4318,
            true
          ]
        },
        "SafeMathUpgradeable.mul": {
          "90": [
            3630,
            3636,
            false
          ],
          "91": [
            3691,
            3701,
            true
          ]
        },
        "SafeMathUpgradeable.sub": {
          "93": [
            3232,
            3238,
            true
          ]
        }
      },
      "20": {},
      "3": {
        "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained": {
          "81": [
            1512,
            1525,
            true
          ],
          "82": [
            1529,
            1545,
            true
          ],
          "83": [
            1550,
            1562,
            true
          ]
        }
      },
      "4": {},
      "5": {},
      "6": {
        "SafeERC20Upgradeable._callOptionalReturn": {
          "87": [
            3627,
            3648,
            false
          ],
          "88": [
            3756,
            3786,
            true
          ]
        }
      },
      "7": {
        "AddressUpgradeable._verifyCallResult": {
          "79": [
            6265,
            6272,
            false
          ],
          "80": [
            6406,
            6427,
            false
          ]
        },
        "AddressUpgradeable.functionCallWithValue": {
          "77": [
            4778,
            4808,
            true
          ],
          "78": [
            4869,
            4887,
            true
          ]
        }
      },
      "8": {}
    },
    "statements": {
      "1": {
        "OwnableUpgradeable.__Ownable_init": {
          "46": [
            992,
            1018
          ],
          "47": [
            1028,
            1054
          ]
        },
        "OwnableUpgradeable.__Ownable_init_unchained": {
          "57": [
            1176,
            1194
          ],
          "58": [
            1204,
            1252
          ]
        },
        "OwnableUpgradeable.owner": {
          "19": [
            1400,
            1413
          ]
        },
        "OwnableUpgradeable.renounceOwnership": {
          "13": [
            2031,
            2076
          ],
          "14": [
            2086,
            2105
          ]
        },
        "OwnableUpgradeable.transferOwnership": {
          "35": [
            2341,
            2414
          ],
          "36": [
            2424,
            2467
          ],
          "37": [
            2477,
            2494
          ]
        }
      },
      "10": {
        "ReentrancyGuardUpgradeable.__ReentrancyGuard_init": {
          "48": [
            1856,
            1890
          ]
        },
        "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained": {
          "59": [
            1978,
            2000
          ]
        }
      },
      "19": {
        "Vault._harvestInterest": {
          "43": [
            5199,
            5365
          ]
        },
        "Vault._harvestReward": {
          "44": [
            4602,
            4690
          ]
        },
        "Vault._valueInStrategy": {
          "38": [
            8106,
            8114
          ],
          "39": [
            8254,
            8262
          ]
        },
        "Vault.addCollateral": {
          "27": [
            2540,
            2608
          ],
          "28": [
            2612,
            2719
          ],
          "29": [
            2803,
            2852
          ],
          "30": [
            2856,
            2885
          ],
          "31": [
            2889,
            2948
          ],
          "32": [
            2952,
            3007
          ],
          "33": [
            3011,
            3094
          ]
        },
        "Vault.addStrategy": {
          "2": [
            3260,
            3323
          ],
          "3": [
            3400,
            3443
          ],
          "4": [
            3447,
            3474
          ],
          "5": [
            3478,
            3527
          ],
          "6": [
            3531,
            3570
          ]
        },
        "Vault.allocate": {
          "20": [
            5617,
            5667
          ],
          "21": [
            5728,
            5780
          ],
          "22": [
            5787,
            5850
          ],
          "23": [
            5952,
            6056
          ],
          "24": [
            6062,
            6120
          ],
          "25": [
            6126,
            6224
          ],
          "26": [
            5607,
            5610
          ]
        },
        "Vault.harvest": {
          "7": [
            3908,
            3958
          ],
          "8": [
            4021,
            4073
          ],
          "9": [
            4080,
            4143
          ],
          "10": [
            4149,
            4202
          ],
          "11": [
            4209,
            4233
          ],
          "12": [
            3897,
            3900
          ]
        },
        "Vault.initialize": {
          "17": [
            2078,
            2113
          ],
          "18": [
            2117,
            2168
          ]
        },
        "Vault.totalValueInStrategies": {
          "0": [
            7743,
            7805
          ],
          "1": [
            7654,
            7657
          ]
        },
        "Vault.totalValueInVault": {
          "15": [
            6709,
            6768
          ],
          "16": [
            6620,
            6623
          ]
        },
        "Vault.totalValueLocked": {
          "34": [
            6382,
            6439
          ]
        }
      },
      "2": {
        "SafeMathUpgradeable.add": {
          "40": [
            2805,
            2851
          ],
          "41": [
            2861,
            2869
          ]
        },
        "SafeMathUpgradeable.div": {
          "52": [
            4305,
            4349
          ],
          "53": [
            4359,
            4371
          ]
        },
        "SafeMathUpgradeable.mul": {
          "50": [
            3638,
            3646
          ],
          "51": [
            3683,
            3739
          ]
        },
        "SafeMathUpgradeable.sub": {
          "54": [
            3224,
            3273
          ],
          "55": [
            3283,
            3295
          ]
        }
      },
      "20": {},
      "3": {
        "Initializable._isConstructor": {
          "45": [
            2016,
            2068
          ]
        }
      },
      "4": {},
      "5": {},
      "6": {
        "SafeERC20Upgradeable._callOptionalReturn": {
          "60": [
            3748,
            3833
          ]
        },
        "SafeERC20Upgradeable.safeTransfer": {
          "49": [
            863,
            949
          ]
        }
      },
      "7": {
        "AddressUpgradeable._verifyCallResult": {
          "65": [
            6288,
            6305
          ],
          "66": [
            6796,
            6816
          ]
        },
        "AddressUpgradeable.functionCall": {
          "61": [
            3719,
            3778
          ]
        },
        "AddressUpgradeable.functionCallWithValue": {
          "62": [
            4770,
            4851
          ],
          "63": [
            4861,
            4921
          ],
          "64": [
            5076,
            5135
          ]
        },
        "AddressUpgradeable.isContract": {
          "56": [
            1128,
            1143
          ]
        }
      },
      "8": {
        "ContextUpgradeable._msgSender": {
          "42": [
            908,
            925
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/AddressUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/ContextUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/ERC20Upgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/IERC20Upgradeable",
    "IStrategy",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/Initializable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/OwnableUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/ReentrancyGuardUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/SafeERC20Upgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@3.4.0/SafeMathUpgradeable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100f55760003560e01c80638d52fec611610097578063c2f21e0f11610066578063c2f21e0f1461023f578063c6783af11461025c578063ec18154e1461028a578063f2fde38b14610292576100f5565b80638d52fec6146101955780638da5cb5b146101e657806396577a1a146101ee578063abaa991614610237576100f5565b8063715018a6116100d3578063715018a614610144578063792f58741461014c5780637e428dac146101855780638129fc1c1461018d576100f5565b806317852264146100fa578063223e5479146101145780634641257d1461013c575b600080fd5b6101026102b8565b60408051918252519081900360200190f35b61013a6004803603602081101561012a57600080fd5b50356001600160a01b0316610364565b005b61013a6104e3565b61013a6106e2565b6101696004803603602081101561016257600080fd5b503561078e565b604080516001600160a01b039092168252519081900360200190f35b6101026107b5565b61013a610856565b6101bb600480360360208110156101ab57600080fd5b50356001600160a01b0316610908565b604080516001600160a01b039485168152921515602084015292168183015290519081900360600190f35b610169610939565b6102146004803603602081101561020457600080fd5b50356001600160a01b0316610948565b604080516001600160a01b03909316835290151560208301528051918290030190f35b61013a61096f565b6101696004803603602081101561025557600080fd5b5035610ca9565b61013a6004803603604081101561027257600080fd5b506001600160a01b0381358116916020013516610cb6565b610102610f00565b61013a600480360360208110156102a857600080fd5b50356001600160a01b0316610f20565b6000805b609954811015610360576102ce611e57565b60976000609984815481106102df57fe5b6000918252602080832091909101546001600160a01b03908116845283820194909452604092830190912082516060810184528154808616808352600160a01b90910460ff16151593820193909352600190910154909316918301919091529091506103559061034e90611023565b849061125d565b9250506001016102bc565b5090565b61036c6112c0565b6001600160a01b031661037d610939565b6001600160a01b0316146103c6576040805162461bcd60e51b81526020600482018190526024820152600080516020611f13833981519152604482015290519081900360640190fd5b6001600160a01b038116600090815260986020526040902054600160a01b900460ff161561042c576040805162461bcd60e51b815260206004820152600e60248201526d14dd1c985d1959de48185919195960921b604482015290519081900360640190fd5b6001600160a01b0381811660008181526098602090815260408083208054600160a01b6001600160a01b0319918216871760ff60a01b191617808355609a805460018181018355919097527f44da158ba27f9252712a74ff6a55c5d531f69609f1f6e7f17c4443a8e2089be490960180549190981691161790955580519384529083019190915280517f835a6c4fc865a810f7943cfca478cada6bf307d7dbd75892a046aee7ea3cc2149281900390910190a15050565b6104eb6112c0565b6001600160a01b03166104fc610939565b6001600160a01b031614610545576040805162461bcd60e51b81526020600482018190526024820152600080516020611f13833981519152604482015290519081900360640190fd5b6002606554141561059d576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b600260655560006105ac611e57565b60005b6099548110156106d85760976000609983815481106105ca57fe5b60009182526020808320909101546001600160a01b03908116845283820194909452604092830190912082516060810184528154808616825260ff600160a01b9091041615159281019290925260010154909216908201819052909250156106d05781604001519250826001600160a01b031663a400326f83600001516040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561068457600080fd5b505afa158015610698573d6000803e3d6000fd5b505050506040513d60208110156106ae57600080fd5b50516106b957600080fd5b6106c78383600001516112c4565b6106d083611410565b6001016105af565b5050600160655550565b6106ea6112c0565b6001600160a01b03166106fb610939565b6001600160a01b031614610744576040805162461bcd60e51b81526020600482018190526024820152600080516020611f13833981519152604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b609a818154811061079b57fe5b6000918252602090912001546001600160a01b0316905081565b6000805b609954811015610360576107cb611e57565b60976000609984815481106107dc57fe5b6000918252602080832091909101546001600160a01b03908116845283820194909452604092830190912082516060810184528154808616808352600160a01b90910460ff161515938201939093526001909101549093169183019190915290915061084b9061034e90611561565b9250506001016107b9565b600054610100900460ff168061086f575061086f611696565b8061087d575060005460ff16155b6108b85760405162461bcd60e51b815260040180806020018281038252602e815260200180611ec4602e913960400191505060405180910390fd5b600054610100900460ff161580156108e3576000805460ff1961ff0019909116610100171660011790555b6108eb6116a7565b6108f3611744565b8015610905576000805461ff00191690555b50565b609760205260009081526040902080546001909101546001600160a01b0380831692600160a01b900460ff16911683565b6033546001600160a01b031690565b6098602052600090815260409020546001600160a01b03811690600160a01b900460ff1682565b6109776112c0565b6001600160a01b0316610988610939565b6001600160a01b0316146109d1576040805162461bcd60e51b81526020600482018190526024820152600080516020611f13833981519152604482015290519081900360640190fd5b60026065541415610a29576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b60026065556000610a38611e57565b60005b6099548110156106d8576097600060998381548110610a5657fe5b60009182526020808320909101546001600160a01b03908116845283820194909452604092830190912082516060810184528154808616825260ff600160a01b909104161515928101929092526001015490921690820181905290925015610ca15781604001519250826001600160a01b031663a400326f83600001516040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b158015610b1057600080fd5b505afa158015610b24573d6000803e3d6000fd5b505050506040513d6020811015610b3a57600080fd5b5051610b4557600080fd5b8151604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015610b8f57600080fd5b505afa158015610ba3573d6000803e3d6000fd5b505050506040513d6020811015610bb957600080fd5b505160408401518451919250610bd9916001600160a01b031690836117d9565b836001600160a01b03166347e7ef248460000151836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610c3457600080fd5b505af1158015610c48573d6000803e3d6000fd5b5050505082604001516001600160a01b031683600001516001600160a01b03167f290d3382f5cb307945388c5a4ab3a9e3695c8706927c11c35eb329620a310961836040518082815260200191505060405180910390a3505b600101610a3b565b6099818154811061079b57fe5b610cbe6112c0565b6001600160a01b0316610ccf610939565b6001600160a01b031614610d18576040805162461bcd60e51b81526020600482018190526024820152600080516020611f13833981519152604482015290519081900360640190fd5b6001600160a01b038216600090815260976020526040902054600160a01b900460ff1615610d80576040805162461bcd60e51b815260206004820152601060248201526f10dbdb1b185d195c985b08185919195960821b604482015290519081900360640190fd5b6012826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610dbb57600080fd5b505afa158015610dcf573d6000803e3d6000fd5b505050506040513d6020811015610de557600080fd5b505160ff161115610e275760405162461bcd60e51b815260040180806020018281038252602c815260200180611f33602c913960400191505060405180910390fd5b6001600160a01b038083166000818152609760209081526040808320805460ff60a01b196001600160a01b0319918216871716600160a01b908117808455600180850180548c8c1690861681179091556099805492830181559098527f72a152ddfb8e864297c917af52ea6c1c68aead0fee1a62673fcc7e0c94979d000180549093169816979097179055805482519586529590950460ff1615159184019190915282810191909152517f1fb89240e26efaf4d05f8f118b830b58a8b4843ceefb4c360c2673fbf0189d609181900360600190a1505050565b6000610f1b610f0d6102b8565b610f156107b5565b9061125d565b905090565b610f286112c0565b6001600160a01b0316610f39610939565b6001600160a01b031614610f82576040805162461bcd60e51b81526020600482018190526024820152600080516020611f13833981519152604482015290519081900360640190fd5b6001600160a01b038116610fc75760405162461bcd60e51b8152600401808060200182810382526026815260200180611e786026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b600061102d611e57565b506001600160a01b03828116600090815260976020908152604091829020825160608101845281548086168252600160a01b900460ff1615159281019290925260010154909216908201819052611088576000915050611258565b600081604001519050806001600160a01b031663a400326f83600001516040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156110e257600080fd5b505afa1580156110f6573d6000803e3d6000fd5b505050506040513d602081101561110c57600080fd5b505161111d57600092505050611258565b60006305f5e100905060006305f5e1009050600084600001516001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561116e57600080fd5b505afa158015611182573d6000803e3d6000fd5b505050506040513d602081101561119857600080fd5b5051855160408051632fa8a91360e11b81526001600160a01b039283166004820152905160ff909316935060009261123292869261122c9289928b1691635f515226916024808301926020929190829003018186803b1580156111fa57600080fd5b505afa15801561120e573d6000803e3d6000fd5b505050506040513d602081101561122457600080fd5b50519061182b565b90611884565b9050600061124e6112446012856118eb565b8390600a0a61182b565b9750505050505050505b919050565b6000828201838110156112b7576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b90505b92915050565b3390565b6112cc611e57565b506001600160a01b038181166000818152609760209081526040808320815160608101835281548088168252600160a01b900460ff161515818501526001909101548616818301528151638d2c872760e01b8152600481019590955290519094929392871692638d2c8727926024808301939192829003018186803b15801561135457600080fd5b505afa158015611368573d6000803e3d6000fd5b505050506040513d602081101561137e57600080fd5b50519050801561140a578151604080516369ad748960e01b81523060048201526001600160a01b03928316602482015281516000938493908916926369ad7489926044808301939282900301818787803b1580156113db57600080fd5b505af11580156113ef573d6000803e3d6000fd5b505050506040513d604081101561140557600080fd5b505050505b50505050565b6000816001600160a01b031663125f9e336040518163ffffffff1660e01b815260040160206040518083038186803b15801561144b57600080fd5b505afa15801561145f573d6000803e3d6000fd5b505050506040513d602081101561147557600080fd5b505160408051631d4814c160e21b815290519192506000916001600160a01b038516916375205304916004808301926020929190829003018186803b1580156114bd57600080fd5b505afa1580156114d1573d6000803e3d6000fd5b505050506040513d60208110156114e757600080fd5b50519050801561155c576000836001600160a01b0316630242241d6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561152e57600080fd5b505af1158015611542573d6000803e3d6000fd5b505050506040513d602081101561155857600080fd5b5050505b505050565b600061156b611e57565b506001600160a01b03828116600090815260976020908152604080832081516060810183528154808716808352600160a01b90910460ff1615158286015260019092015490951685830152815163313ce56760e01b815291516305f5e100948594909363313ce5679260048083019392829003018186803b1580156115ef57600080fd5b505afa158015611603573d6000803e3d6000fd5b505050506040513d602081101561161957600080fd5b50518451604080516370a0823160e01b8152306004820152905160ff909316935060009261167892869261122c9289926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156111fa57600080fd5b9050600061168a6112446012856118eb565b98975050505050505050565b60006116a130611948565b15905090565b600054610100900460ff16806116c057506116c0611696565b806116ce575060005460ff16155b6117095760405162461bcd60e51b815260040180806020018281038252602e815260200180611ec4602e913960400191505060405180910390fd5b600054610100900460ff16158015611734576000805460ff1961ff0019909116610100171660011790555b61173c61194e565b6108f36119ee565b600054610100900460ff168061175d575061175d611696565b8061176b575060005460ff16155b6117a65760405162461bcd60e51b815260040180806020018281038252602e815260200180611ec4602e913960400191505060405180910390fd5b600054610100900460ff161580156117d1576000805460ff1961ff0019909116610100171660011790555b6108f3611ae7565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261155c908490611b8d565b60008261183a575060006112ba565b8282028284828161184757fe5b04146112b75760405162461bcd60e51b8152600401808060200182810382526021815260200180611ef26021913960400191505060405180910390fd5b60008082116118da576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b8183816118e357fe5b049392505050565b600082821115611942576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b3b151590565b600054610100900460ff16806119675750611967611696565b80611975575060005460ff16155b6119b05760405162461bcd60e51b815260040180806020018281038252602e815260200180611ec4602e913960400191505060405180910390fd5b600054610100900460ff161580156108f3576000805460ff1961ff0019909116610100171660011790558015610905576000805461ff001916905550565b600054610100900460ff1680611a075750611a07611696565b80611a15575060005460ff16155b611a505760405162461bcd60e51b815260040180806020018281038252602e815260200180611ec4602e913960400191505060405180910390fd5b600054610100900460ff16158015611a7b576000805460ff1961ff0019909116610100171660011790555b6000611a856112c0565b603380546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508015610905576000805461ff001916905550565b600054610100900460ff1680611b005750611b00611696565b80611b0e575060005460ff16155b611b495760405162461bcd60e51b815260040180806020018281038252602e815260200180611ec4602e913960400191505060405180910390fd5b600054610100900460ff16158015611b74576000805460ff1961ff0019909116610100171660011790555b60016065558015610905576000805461ff001916905550565b6060611be2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611c3e9092919063ffffffff16565b80519091501561155c57808060200190516020811015611c0157600080fd5b505161155c5760405162461bcd60e51b815260040180806020018281038252602a815260200180611f5f602a913960400191505060405180910390fd5b6060611c4d8484600085611c57565b90505b9392505050565b606082471015611c985760405162461bcd60e51b8152600401808060200182810382526026815260200180611e9e6026913960400191505060405180910390fd5b611ca185611948565b611cf2576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310611d315780518252601f199092019160209182019101611d12565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611d93576040519150601f19603f3d011682016040523d82523d6000602084013e611d98565b606091505b5091509150611da8828286611db3565b979650505050505050565b60608315611dc2575081611c50565b825115611dd25782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611e1c578181015183820152602001611e04565b50505050905090810190601f168015611e495780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b60408051606081018252600080825260208201819052918101919091529056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572436f6c6c61746572616c7320646563696d616c73206e65656420746f206265206c657373207468616e2031385361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220264547be0853199ccb58a4216f9488d8d9e6350441b24fd170b066a3b43279d664736f6c634300060c0033",
  "deployedSourceMap": "1009:7706:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7536:277;;;:::i;:::-;;;;;;;;;;;;;;;;3193:381;;;;;;;;;;;;;;;;-1:-1:-1;3193:381:19;-1:-1:-1;;;;;3193:381:19;;:::i;:::-;;3732:517;;;:::i;1967:145:1:-;;;:::i;1919:32:19:-;;;;;;;;;;;;;;;;-1:-1:-1;1919:32:19;;:::i;:::-;;;;-1:-1:-1;;;;;1919:32:19;;;;;;;;;;;;;;6507:269;;;:::i;2033:139::-;;;:::i;1723:59::-;;;;;;;;;;;;;;;;-1:-1:-1;1723:59:19;-1:-1:-1;;;;;1723:59:19;;:::i;:::-;;;;-1:-1:-1;;;;;1723:59:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;1335:85:1;;;:::i;1785:56:19:-;;;;;;;;;;;;;;;;-1:-1:-1;1785:56:19;-1:-1:-1;;;;;1785:56:19;;:::i;:::-;;;;-1:-1:-1;;;;;1785:56:19;;;;;;;;;;;;;;;;;;;;;5444:794;;;:::i;1845:34::-;;;;;;;;;;;;;;;;-1:-1:-1;1845:34:19;;:::i;2439:659::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2439:659:19;;;;;;;;;;:::i;6317:126::-;;;:::i;2261:240:1:-;;;;;;;;;;;;;;;;-1:-1:-1;2261:240:1;-1:-1:-1;;;;;2261:240:1;;:::i;7536:277:19:-;7591:10;;7607:203;7628:17;:24;7624:28;;7607:203;;;7664:34;;:::i;:::-;7701:15;:37;7717:17;7735:1;7717:20;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7717:20:19;;;7701:37;;;;;;;;;;;;;;;;7664:74;;;;;;;;;;;;;;;-1:-1:-1;;;7664:74:19;;;;;;;;;;;;;;7717:20;7664:74;;;;;;;;;;;;;;;;-1:-1:-1;7751:54:19;;7761:43;;:16;:43::i;:::-;7751:5;;:9;:54::i;:::-;7743:62;-1:-1:-1;;7654:3:19;;7607:203;;;;7536:277;:::o;3193:381::-;1558:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1547:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1547:23:1;;1539:68;;;;;-1:-1:-1;;;1539:68:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1539:68:1;;;;;;;;;;;;;;;-1:-1:-1;;;;;3269:29:19;::::1;;::::0;;;:14:::1;:29;::::0;;;;:35;-1:-1:-1;;;3269:35:19;::::1;;;3268:36;3260:63;;;::::0;;-1:-1:-1;;;3260:63:19;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;3260:63:19;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;;;3367:29:19;;::::1;3327:37;3367:29:::0;;;:14:::1;:29;::::0;;;;;;;3400:43;;-1:-1:-1;;;;;;;;;3400:43:19;;::::1;::::0;::::1;-1:-1:-1::0;;;;3447:27:19::1;;::::0;;;3478:15:::1;:49:::0;;-1:-1:-1;3478:49:19;;::::1;::::0;;;;;;;;;::::1;::::0;;3499:27;;;::::1;3478:49:::0;::::1;;::::0;;;3536:34;;;;;;;::::1;::::0;;;;;;::::1;::::0;;;;;;;;::::1;1617:1:1;3193:381:19::0;:::o;3732:517::-;1558:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1547:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1547:23:1;;1539:68;;;;;-1:-1:-1;;;1539:68:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1539:68:1;;;;;;;;;;;;;;;1753:1:10::1;2495:7;;:19;;2487:63;;;::::0;;-1:-1:-1;;;2487:63:10;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;1753:1;2625:7;:18:::0;3788::19::2;3811:34;;:::i;:::-;3855:6;3850:395;3871:17;:24:::0;3867:28;::::2;3850:395;;;3921:15;:37;3937:17;3955:1;3937:20;;;;;;;;;::::0;;;::::2;::::0;;;;;::::2;::::0;-1:-1:-1;;;;;3937:20:19;;::::2;3921:37:::0;;;;::::2;::::0;;;;;;;;;;;3908:50;;::::2;::::0;::::2;::::0;;;;;;::::2;::::0;;::::2;-1:-1:-1::0;;;3908:50:19;;::::2;;;;::::0;;::::2;::::0;;;;3937:20;3908:50:::2;::::0;;;::::2;::::0;;;;;;;;-1:-1:-1;3968:44:19;3964:276:::2;;4042:10;:30;;;4021:52;;4088:8;-1:-1:-1::0;;;;;4088:27:19::2;;4116:10;:25;;;4088:54;;;;;;;;;;;;;-1:-1:-1::0;;;;;4088:54:19::2;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;4088:54:19;4080:63:::2;;;::::0;::::2;;4149:53;4166:8;4176:10;:25;;;4149:16;:53::i;:::-;4209:24;4224:8;4209:14;:24::i;:::-;3897:3;;3850:395;;;-1:-1:-1::0;;1710:1:10::1;2798:7;:22:::0;-1:-1:-1;3732:517:19:o;1967:145:1:-;1558:12;:10;:12::i;:::-;-1:-1:-1;;;;;1547:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1547:23:1;;1539:68;;;;;-1:-1:-1;;;1539:68:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1539:68:1;;;;;;;;;;;;;;;2057:6:::1;::::0;2036:40:::1;::::0;2073:1:::1;::::0;-1:-1:-1;;;;;2057:6:1::1;::::0;2036:40:::1;::::0;2073:1;;2036:40:::1;2086:6;:19:::0;;-1:-1:-1;;;;;;2086:19:1::1;::::0;;1967:145::o;1919:32:19:-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1919:32:19;;-1:-1:-1;1919:32:19;:::o;6507:269::-;6557:10;;6573:200;6594:17;:24;6590:28;;6573:200;;;6630:34;;:::i;:::-;6667:15;:37;6683:17;6701:1;6683:20;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6683:20:19;;;6667:37;;;;;;;;;;;;;;;;6630:74;;;;;;;;;;;;;;;-1:-1:-1;;;6630:74:19;;;;;;;;;;;;;;6683:20;6630:74;;;;;;;;;;;;;;;;-1:-1:-1;6717:51:19;;6727:40;;:13;:40::i;6717:51::-;6709:59;-1:-1:-1;;6620:3:19;;6573:200;;2033:139;1512:13:3;;;;;;;;:33;;;1529:16;:14;:16::i;:::-;1512:50;;;-1:-1:-1;1550:12:3;;;;1549:13;1512:50;1504:109;;;;-1:-1:-1;;;1504:109:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;1646:14;1670:98;;;;1704:13;:20;;-1:-1:-1;;;;1704:20:3;;;;;1738:19;1720:4;1738:19;;;1670:98;2078:35:19::1;:33;:35::i;:::-;2117:51;:49;:51::i;:::-;1794:14:3::0;1790:66;;;1840:5;1824:21;;-1:-1:-1;;1824:21:3;;;1790:66;2033:139:19;:::o;1723:59::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1723:59:19;;;;-1:-1:-1;;;1723:59:19;;;;;;;:::o;1335:85:1:-;1407:6;;-1:-1:-1;;;;;1407:6:1;1335:85;:::o;1785:56:19:-;;;;;;;;;;;;-1:-1:-1;;;;;1785:56:19;;;-1:-1:-1;;;1785:56:19;;;;;:::o;5444:794::-;1558:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1547:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1547:23:1;;1539:68;;;;;-1:-1:-1;;;1539:68:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1539:68:1;;;;;;;;;;;;;;;1753:1:10::1;2495:7;;:19;;2487:63;;;::::0;;-1:-1:-1;;;2487:63:10;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;1753:1;2625:7;:18:::0;5500::19::2;5522:34;;:::i;:::-;5565:6;5560:675;5581:17;:24:::0;5577:28;::::2;5560:675;;;5630:15;:37;5646:17;5664:1;5646:20;;;;;;;;;::::0;;;::::2;::::0;;;;;::::2;::::0;-1:-1:-1;;;;;5646:20:19;;::::2;5630:37:::0;;;;::::2;::::0;;;;;;;;;;;5617:50;;::::2;::::0;::::2;::::0;;;;;;::::2;::::0;;::::2;-1:-1:-1::0;;;5617:50:19;;::::2;;;;::::0;;::::2;::::0;;;;5646:20;5617:50:::2;::::0;;;::::2;::::0;;;;;;;;-1:-1:-1;5676:44:19;5672:558:::2;;5749:10;:30;;;5728:52;;5795:8;-1:-1:-1::0;;;;;5795:27:19::2;;5823:10;:25;;;5795:54;;;;;;;;;;;;;-1:-1:-1::0;;;;;5795:54:19::2;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;5795:54:19;5787:63:::2;;;::::0;::::2;;5895:25:::0;;5877:69:::2;::::0;;-1:-1:-1;;;5877:69:19;;5940:4:::2;5877:69;::::0;::::2;::::0;;;5856:18:::2;::::0;-1:-1:-1;;;;;5877:54:19::2;::::0;::::2;::::0;:69;;;;;::::2;::::0;;;;;;;;:54;:69;::::2;;::::0;::::2;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;::::0;::::2;;-1:-1:-1::0;5877:69:19;6010:30:::2;::::0;::::2;::::0;5970:25;;5877:69;;-1:-1:-1;5952:104:19::2;::::0;-1:-1:-1;;;;;5952:57:19::2;::::0;5877:69;5952:57:::2;:104::i;:::-;6062:8;-1:-1:-1::0;;;;;6062:16:19::2;;6079:10;:25;;;6106:13;6062:58;;;;;;;;;;;;;-1:-1:-1::0;;;;;6062:58:19::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;6178:10;:30;;;-1:-1:-1::0;;;;;6131:93:19::2;6151:10;:25;;;-1:-1:-1::0;;;;;6131:93:19::2;;6210:13;6131:93;;;;;;;;;;;;;;;;;;5672:558;;5607:3;;5560:675;;1845:34:::0;;;;;;;;;;2439:659;1558:12:1;:10;:12::i;:::-;-1:-1:-1;;;;;1547:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1547:23:1;;1539:68;;;;;-1:-1:-1;;;1539:68:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1539:68:1;;;;;;;;;;;;;;;-1:-1:-1;;;;;2549:32:19;::::1;;::::0;;;:15:::1;:32;::::0;;;;:38;-1:-1:-1;;;2549:38:19;::::1;;;2548:39;2540:68;;;::::0;;-1:-1:-1;;;2540:68:19;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2540:68:19;;;;;;;;;;;;;::::1;;2668:2;2637:15;-1:-1:-1::0;;;;;2620:42:19::1;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;2620:44:19;:50:::1;;;;2612:107;;;;-1:-1:-1::0;;;2612:107:19::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;2767:32:19;;::::1;2723:41;2767:32:::0;;;:15:::1;:32;::::0;;;;;;;2803:49;;-1:-1:-1;;;;;;;;;;2803:49:19;;::::1;::::0;::::1;2856:29;-1:-1:-1::0;;;2856:29:19;;::::1;::::0;;;2803:49;2889:36;;::::1;:59:::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;2952:17:::1;:55:::0;;;;::::1;::::0;;;;;;::::1;::::0;;;;::::1;2975:31:::0;::::1;2952:55:::0;;;::::1;::::0;;3049:22;;3016:78;;;;;3049:22;;;::::1;2856:29;3049:22;3016:78;;::::0;;::::1;::::0;;;;;;;;;;;;::::1;::::0;;;;;;;::::1;1617:1:1;2439:659:19::0;;:::o;6317:126::-;6366:10;6390:49;6414:24;:22;:24::i;:::-;6390:19;:17;:19::i;:::-;:23;;:49::i;:::-;6382:57;;6317:126;:::o;2261:240:1:-;1558:12;:10;:12::i;:::-;-1:-1:-1;;;;;1547:23:1;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1547:23:1;;1539:68;;;;;-1:-1:-1;;;1539:68:1;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1539:68:1;;;;;;;;;;;;;;;-1:-1:-1;;;;;2349:22:1;::::1;2341:73;;;;-1:-1:-1::0;;;2341:73:1::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2450:6;::::0;2429:38:::1;::::0;-1:-1:-1;;;;;2429:38:1;;::::1;::::0;2450:6:::1;::::0;2429:38:::1;::::0;2450:6:::1;::::0;2429:38:::1;2477:6;:17:::0;;-1:-1:-1;;;;;;2477:17:1::1;-1:-1:-1::0;;;;;2477:17:1;;;::::1;::::0;;;::::1;::::0;;2261:240::o;7894:819:19:-;7968:4;7978:34;;:::i;:::-;-1:-1:-1;;;;;;8015:32:19;;;;;;;:15;:32;;;;;;;;;7978:69;;;;;;;;;;;;;;-1:-1:-1;;;7978:69:19;;;;;;;;;;;;;;;;;;;;;;;;;8051:68;;8113:1;8106:8;;;;;8051:68;8122:18;8153:10;:30;;;8122:62;;8193:8;-1:-1:-1;;;;;8193:27:19;;8221:10;:25;;;8193:54;;;;;;;;;;;;;-1:-1:-1;;;;;8193:54:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8193:54:19;8188:79;;8261:1;8254:8;;;;;;8188:79;8270:15;8288:5;8270:23;;8297:19;8319:5;8297:27;;8328:26;8379:10;:25;;;-1:-1:-1;;;;;8362:52:19;;:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8362:54:19;8481:25;;8459:48;;;-1:-1:-1;;;8459:48:19;;-1:-1:-1;;;;;8459:48:19;;;;;;;;;8357:60;;;;;-1:-1:-1;8421:35:19;;8459:84;;8528:14;;8459:64;;8512:10;;8459:21;;;;;:48;;;;;8362:54;;8459:48;;;;;;;:21;:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8459:48:19;;:52;:64::i;:::-;:68;;:84::i;:::-;8421:122;-1:-1:-1;8547:38:19;8588:77;8628:35;8633:2;8641:21;8628:12;:35::i;:::-;8588:30;;8623:2;:41;8588:34;:77::i;:::-;8547:118;-1:-1:-1;;;;;;;;7894:819:19;;;;:::o;2701:175:2:-;2759:7;2790:5;;;2813:6;;;;2805:46;;;;;-1:-1:-1;;;2805:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;2868:1;-1:-1:-1;2701:175:2;;;;;:::o;828:104:8:-;915:10;828:104;:::o;4974:394:19:-;5057:34;;:::i;:::-;-1:-1:-1;;;;;;5094:31:19;;;;;;;:15;:31;;;;;;;;5057:68;;;;;;;;;;;;;;-1:-1:-1;;;5057:68:19;;;;;;;;;;;;;;;;;;;;;5151:44;;-1:-1:-1;;;5151:44:19;;;;;;;;;;;5057:68;;5094:31;;5151:28;;;;;;:44;;;;;5094:31;;5151:44;;;;;:28;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5151:44:19;;-1:-1:-1;5203:18:19;;5199:166;;5330:25;;5281:79;;;-1:-1:-1;;;5281:79:19;;5319:4;5281:79;;;;-1:-1:-1;;;;;5281:79:19;;;;;;;;;5229:21;;;;5281:24;;;;;;:79;;;;;;;;;;;5229:21;5281:24;:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;5199:166:19;4974:394;;;;:::o;4434:259::-;4491:20;4514:8;-1:-1:-1;;;;;4514:27:19;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4514:29:19;4570:28;;;-1:-1:-1;;;4570:28:19;;;;4514:29;;-1:-1:-1;4547:20:19;;-1:-1:-1;;;;;4570:26:19;;;;;:28;;;;;4514:29;;4570:28;;;;;;;:26;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4570:28:19;;-1:-1:-1;4606:16:19;;4602:88;;4629:24;4656:8;-1:-1:-1;;;;;4656:27:19;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4602:88:19;4434:259;;;:::o;6858:613::-;6929:10;6945:34;;:::i;:::-;-1:-1:-1;;;;;;6982:32:19;;;;;;;:15;:32;;;;;;;;6945:69;;;;;;;;;;;;;;;-1:-1:-1;;;6945:69:19;;;;;;;;;;;;;;;;;;;;;;;7110:54;;-1:-1:-1;;;7110:54:19;;;;7036:5;;;;6982:32;;7110:52;;:54;;;;;6982:32;7110:54;;;;;6945:69;7110:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7110:54:19;7222:25;;7204:69;;;-1:-1:-1;;;7204:69:19;;7267:4;7204:69;;;;;;7105:60;;;;;-1:-1:-1;7169:32:19;;7204:105;;7294:14;;7204:85;;7278:10;;-1:-1:-1;;;;;7204:54:19;;;;:69;;;;;7110:54;;7204:69;;;;;;;:54;:69;;;;;;;;;;:105;7169:140;-1:-1:-1;7313:35:19;7351:74;7388:35;7393:2;7401:21;7388:12;:35::i;7351:74::-;7313:112;6858:613;-1:-1:-1;;;;;;;;6858:613:19:o;1952:123:3:-;2000:4;2024:44;2062:4;2024:29;:44::i;:::-;2023:45;2016:52;;1952:123;:::o;935:126:1:-;1512:13:3;;;;;;;;:33;;;1529:16;:14;:16::i;:::-;1512:50;;;-1:-1:-1;1550:12:3;;;;1549:13;1512:50;1504:109;;;;-1:-1:-1;;;1504:109:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;1646:14;1670:98;;;;1704:13;:20;;-1:-1:-1;;;;1704:20:3;;;;;1738:19;1720:4;1738:19;;;1670:98;992:26:1::1;:24;:26::i;:::-;1028;:24;:26::i;1791:106:10:-:0;1512:13:3;;;;;;;;:33;;;1529:16;:14;:16::i;:::-;1512:50;;;-1:-1:-1;1550:12:3;;;;1549:13;1512:50;1504:109;;;;-1:-1:-1;;;1504:109:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;1646:14;1670:98;;;;1704:13;:20;;-1:-1:-1;;;;1704:20:3;;;;;1738:19;1720:4;1738:19;;;1670:98;1856:34:10::1;:32;:34::i;770:186:6:-:0;890:58;;;-1:-1:-1;;;;;890:58:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;890:58:6;-1:-1:-1;;;890:58:6;;;863:86;;883:5;;863:19;:86::i;3549:215:2:-;3607:7;3630:6;3626:20;;-1:-1:-1;3645:1:2;3638:8;;3626:20;3668:5;;;3672:1;3668;:5;:1;3691:5;;;;;:10;3683:56;;;;-1:-1:-1;;;3683:56:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4228:150;4286:7;4317:1;4313;:5;4305:44;;;;;-1:-1:-1;;;4305:44:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;4370:1;4366;:5;;;;;;;4228:150;-1:-1:-1;;;4228:150:2:o;3147:155::-;3205:7;3237:1;3232;:6;;3224:49;;;;;-1:-1:-1;;;3224:49:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3290:5:2;;;3147:155::o;737:413:7:-;1097:20;1135:8;;;737:413::o;759:64:8:-;1512:13:3;;;;;;;;:33;;;1529:16;:14;:16::i;:::-;1512:50;;;-1:-1:-1;1550:12:3;;;;1549:13;1512:50;1504:109;;;;-1:-1:-1;;;1504:109:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;1646:14;1670:98;;;;1704:13;:20;;-1:-1:-1;;;;1704:20:3;;;;;1738:19;1720:4;1738:19;;;1794:14;1790:66;;;1840:5;1824:21;;-1:-1:-1;;1824:21:3;;;759:64:8;:::o;1067:192:1:-;1512:13:3;;;;;;;;:33;;;1529:16;:14;:16::i;:::-;1512:50;;;-1:-1:-1;1550:12:3;;;;1549:13;1512:50;1504:109;;;;-1:-1:-1;;;1504:109:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;1646:14;1670:98;;;;1704:13;:20;;-1:-1:-1;;;;1704:20:3;;;;;1738:19;1720:4;1738:19;;;1670:98;1134:17:1::1;1154:12;:10;:12::i;:::-;1176:6;:18:::0;;-1:-1:-1;;;;;;1176:18:1::1;-1:-1:-1::0;;;;;1176:18:1;::::1;::::0;;::::1;::::0;;;1209:43:::1;::::0;1176:18;;-1:-1:-1;1176:18:1;-1:-1:-1;;1209:43:1::1;::::0;-1:-1:-1;;1209:43:1::1;1778:1:3;1794:14:::0;1790:66;;;1840:5;1824:21;;-1:-1:-1;;1824:21:3;;;1067:192:1;:::o;1903:104:10:-;1512:13:3;;;;;;;;:33;;;1529:16;:14;:16::i;:::-;1512:50;;;-1:-1:-1;1550:12:3;;;;1549:13;1512:50;1504:109;;;;-1:-1:-1;;;1504:109:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1624:19;1647:13;;;;;;1646:14;1670:98;;;;1704:13;:20;;-1:-1:-1;;;;1704:20:3;;;;;1738:19;1720:4;1738:19;;;1670:98;1710:1:10::1;1978:7;:22:::0;1790:66:3;;;;1840:5;1824:21;;-1:-1:-1;;1824:21:3;;;1903:104:10;:::o;3088:762:6:-;3518:23;3544:69;3572:4;3544:69;;;;;;;;;;;;;;;;;3552:5;-1:-1:-1;;;;;3544:27:6;;;:69;;;;;:::i;:::-;3627:17;;3518:95;;-1:-1:-1;3627:21:6;3623:221;;3767:10;3756:30;;;;;;;;;;;;;;;-1:-1:-1;3756:30:6;3748:85;;;;-1:-1:-1;;;3748:85:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3592:193:7;3695:12;3726:52;3748:6;3756:4;3762:1;3765:12;3726:21;:52::i;:::-;3719:59;;3592:193;;;;;;:::o;4619:523::-;4746:12;4803:5;4778:21;:30;;4770:81;;;;-1:-1:-1;;;4770:81:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4869:18;4880:6;4869:10;:18::i;:::-;4861:60;;;;;-1:-1:-1;;;4861:60:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;4992:12;5006:23;5033:6;-1:-1:-1;;;;;5033:11:7;5053:5;5061:4;5033:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5033:33:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4991:75;;;;5083:52;5101:7;5110:10;5122:12;5083:17;:52::i;:::-;5076:59;4619:523;-1:-1:-1;;;;;;;4619:523:7:o;6122:725::-;6237:12;6265:7;6261:580;;;-1:-1:-1;6295:10:7;6288:17;;6261:580;6406:17;;:21;6402:429;;6664:10;6658:17;6724:15;6711:10;6707:2;6703:19;6696:44;6613:145;6803:12;6796:20;;-1:-1:-1;;;6796:20:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "author": "Sperax Foundation",
    "details": "Control Mint, Redeem, Allocate and Rebase of USDsLive on Arbitrum Layer 2",
    "kind": "dev",
    "methods": {
      "addCollateral(address,address)": {
        "details": "authorize an ERC20 token as one of the collaterals supported by USDs mint/redeem",
        "params": {
          "_collateralAddr": "ERC20 address to be authorized",
          "_defaultStrategyAddr": "strategy address of which the collateral is allocated into on allocate()"
        }
      },
      "addStrategy(address)": {
        "details": "authorize an strategy",
        "params": {
          "_strategyAddr": "strategy contract address"
        }
      },
      "allocate()": {
        "details": "allocate collateral on this contract into strategies."
      },
      "harvest()": {
        "details": "VaultCore does not organically hold/generate USDs, transfer USDs to\t\tVaultCore manually",
        "notice": "harvest USDs held by VaultCore"
      },
      "initialize()": {
        "details": "contract initializer"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "totalValueInStrategies()": {
        "details": "the value of collaterals in the strategies"
      },
      "totalValueInVault()": {
        "details": "the value of collaterals in this contract"
      },
      "totalValueLocked()": {
        "details": "the value of collaterals in this contract and strategies"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Vault of USDs protocol",
    "version": 1
  },
  "offset": [
    1009,
    8715
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8D52FEC6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC2F21E0F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC2F21E0F EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xC6783AF1 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xEC18154E EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x292 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x8D52FEC6 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x96577A1A EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0xABAA9916 EQ PUSH2 0x237 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x792F5874 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x7E428DAC EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x18D JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x17852264 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x223E5479 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0x4641257D EQ PUSH2 0x13C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x364 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13A PUSH2 0x4E3 JUMP JUMPDEST PUSH2 0x13A PUSH2 0x6E2 JUMP JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x162 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x78E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x102 PUSH2 0x7B5 JUMP JUMPDEST PUSH2 0x13A PUSH2 0x856 JUMP JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x908 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE SWAP3 AND DUP2 DUP4 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH2 0x939 JUMP JUMPDEST PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x948 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH2 0x96F JUMP JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xCB6 JUMP JUMPDEST PUSH2 0x102 PUSH2 0xF00 JUMP JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF20 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x99 SLOAD DUP2 LT ISZERO PUSH2 0x360 JUMPI PUSH2 0x2CE PUSH2 0x1E57 JUMP JUMPDEST PUSH1 0x97 PUSH1 0x0 PUSH1 0x99 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2DF JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE DUP4 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 SWAP3 DUP4 ADD SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP1 DUP7 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND ISZERO ISZERO SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP4 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 POP PUSH2 0x355 SWAP1 PUSH2 0x34E SWAP1 PUSH2 0x1023 JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x125D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x2BC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x36C PUSH2 0x12C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x37D PUSH2 0x939 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3C6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F13 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x98 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x42C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x14DD1C985D1959DE481859191959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x98 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP8 OR PUSH1 0xFF PUSH1 0xA0 SHL NOT AND OR DUP1 DUP4 SSTORE PUSH1 0x9A DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP8 MSTORE PUSH32 0x44DA158BA27F9252712A74FF6A55C5D531F69609F1F6E7F17C4443A8E2089BE4 SWAP1 SWAP7 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP9 AND SWAP2 AND OR SWAP1 SWAP6 SSTORE DUP1 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD PUSH32 0x835A6C4FC865A810F7943CFCA478CADA6BF307D7DBD75892A046AEE7EA3CC214 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x4EB PUSH2 0x12C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4FC PUSH2 0x939 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x545 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F13 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x65 SLOAD EQ ISZERO PUSH2 0x59D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x65 SSTORE PUSH1 0x0 PUSH2 0x5AC PUSH2 0x1E57 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x99 SLOAD DUP2 LT ISZERO PUSH2 0x6D8 JUMPI PUSH1 0x97 PUSH1 0x0 PUSH1 0x99 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x5CA JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE DUP4 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 SWAP3 DUP4 ADD SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP1 DUP7 AND DUP3 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV AND ISZERO ISZERO SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 ADD SLOAD SWAP1 SWAP3 AND SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP3 POP ISZERO PUSH2 0x6D0 JUMPI DUP2 PUSH1 0x40 ADD MLOAD SWAP3 POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA400326F DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x684 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x698 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x6B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6C7 DUP4 DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0x12C4 JUMP JUMPDEST PUSH2 0x6D0 DUP4 PUSH2 0x1410 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x5AF JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x65 SSTORE POP JUMP JUMPDEST PUSH2 0x6EA PUSH2 0x12C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6FB PUSH2 0x939 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x744 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F13 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x9A DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x79B JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x99 SLOAD DUP2 LT ISZERO PUSH2 0x360 JUMPI PUSH2 0x7CB PUSH2 0x1E57 JUMP JUMPDEST PUSH1 0x97 PUSH1 0x0 PUSH1 0x99 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x7DC JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE DUP4 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 SWAP3 DUP4 ADD SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP1 DUP7 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND ISZERO ISZERO SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP4 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 POP PUSH2 0x84B SWAP1 PUSH2 0x34E SWAP1 PUSH2 0x1561 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x86F JUMPI POP PUSH2 0x86F PUSH2 0x1696 JUMP JUMPDEST DUP1 PUSH2 0x87D JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x8B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1EC4 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x8E3 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0x8EB PUSH2 0x16A7 JUMP JUMPDEST PUSH2 0x8F3 PUSH2 0x1744 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x905 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP3 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 AND DUP4 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x98 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP3 JUMP JUMPDEST PUSH2 0x977 PUSH2 0x12C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x988 PUSH2 0x939 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x9D1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F13 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x65 SLOAD EQ ISZERO PUSH2 0xA29 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x65 SSTORE PUSH1 0x0 PUSH2 0xA38 PUSH2 0x1E57 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x99 SLOAD DUP2 LT ISZERO PUSH2 0x6D8 JUMPI PUSH1 0x97 PUSH1 0x0 PUSH1 0x99 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xA56 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE DUP4 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 SWAP3 DUP4 ADD SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP1 DUP7 AND DUP3 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV AND ISZERO ISZERO SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 ADD SLOAD SWAP1 SWAP3 AND SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP3 POP ISZERO PUSH2 0xCA1 JUMPI DUP2 PUSH1 0x40 ADD MLOAD SWAP3 POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA400326F DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB24 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xB45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBA3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP5 ADD MLOAD DUP5 MLOAD SWAP2 SWAP3 POP PUSH2 0xBD9 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 PUSH2 0x17D9 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x47E7EF24 DUP5 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x290D3382F5CB307945388C5A4AB3A9E3695C8706927C11C35EB329620A310961 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x99 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x79B JUMPI INVALID JUMPDEST PUSH2 0xCBE PUSH2 0x12C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCCF PUSH2 0x939 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD18 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F13 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD80 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x10DBDB1B185D195C985B081859191959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x12 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDCF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xFF AND GT ISZERO PUSH2 0xE27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F33 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP8 OR AND PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DUP2 OR DUP1 DUP5 SSTORE PUSH1 0x1 DUP1 DUP6 ADD DUP1 SLOAD DUP13 DUP13 AND SWAP1 DUP7 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x99 DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE SWAP1 SWAP9 MSTORE PUSH32 0x72A152DDFB8E864297C917AF52EA6C1C68AEAD0FEE1A62673FCC7E0C94979D00 ADD DUP1 SLOAD SWAP1 SWAP4 AND SWAP9 AND SWAP8 SWAP1 SWAP8 OR SWAP1 SSTORE DUP1 SLOAD DUP3 MLOAD SWAP6 DUP7 MSTORE SWAP6 SWAP1 SWAP6 DIV PUSH1 0xFF AND ISZERO ISZERO SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE MLOAD PUSH32 0x1FB89240E26EFAF4D05F8F118B830B58A8B4843CEEFB4C360C2673FBF0189D60 SWAP2 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF1B PUSH2 0xF0D PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0xF15 PUSH2 0x7B5 JUMP JUMPDEST SWAP1 PUSH2 0x125D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF28 PUSH2 0x12C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF39 PUSH2 0x939 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF82 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F13 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xFC7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1E78 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x102D PUSH2 0x1E57 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP1 DUP7 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 ADD SLOAD SWAP1 SWAP3 AND SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x1088 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1258 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 ADD MLOAD SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA400326F DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10F6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x110C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x111D JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x1258 JUMP JUMPDEST PUSH1 0x0 PUSH4 0x5F5E100 SWAP1 POP PUSH1 0x0 PUSH4 0x5F5E100 SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x116E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1182 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP6 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2FA8A913 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0xFF SWAP1 SWAP4 AND SWAP4 POP PUSH1 0x0 SWAP3 PUSH2 0x1232 SWAP3 DUP7 SWAP3 PUSH2 0x122C SWAP3 DUP10 SWAP3 DUP12 AND SWAP2 PUSH4 0x5F515226 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x120E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH2 0x182B JUMP JUMPDEST SWAP1 PUSH2 0x1884 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x124E PUSH2 0x1244 PUSH1 0x12 DUP6 PUSH2 0x18EB JUMP JUMPDEST DUP4 SWAP1 PUSH1 0xA EXP PUSH2 0x182B JUMP JUMPDEST SWAP8 POP POP POP POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x12B7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x12CC PUSH2 0x1E57 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP1 DUP9 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO DUP2 DUP6 ADD MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP7 AND DUP2 DUP4 ADD MSTORE DUP2 MLOAD PUSH4 0x8D2C8727 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP1 MLOAD SWAP1 SWAP5 SWAP3 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH4 0x8D2C8727 SWAP3 PUSH1 0x24 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1368 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x137E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0x140A JUMPI DUP2 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x69AD7489 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x0 SWAP4 DUP5 SWAP4 SWAP1 DUP10 AND SWAP3 PUSH4 0x69AD7489 SWAP3 PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13EF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x125F9E33 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x144B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x145F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1D4814C1 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH4 0x75205304 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0x155C JUMPI PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x242241D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x152E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1542 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x156B PUSH2 0x1E57 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP1 DUP8 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND ISZERO ISZERO DUP3 DUP7 ADD MSTORE PUSH1 0x1 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP6 AND DUP6 DUP4 ADD MSTORE DUP2 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 MLOAD PUSH4 0x5F5E100 SWAP5 DUP6 SWAP5 SWAP1 SWAP4 PUSH4 0x313CE567 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1603 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP5 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0xFF SWAP1 SWAP4 AND SWAP4 POP PUSH1 0x0 SWAP3 PUSH2 0x1678 SWAP3 DUP7 SWAP3 PUSH2 0x122C SWAP3 DUP10 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x168A PUSH2 0x1244 PUSH1 0x12 DUP6 PUSH2 0x18EB JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16A1 ADDRESS PUSH2 0x1948 JUMP JUMPDEST ISZERO SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x16C0 JUMPI POP PUSH2 0x16C0 PUSH2 0x1696 JUMP JUMPDEST DUP1 PUSH2 0x16CE JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1709 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1EC4 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1734 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0x173C PUSH2 0x194E JUMP JUMPDEST PUSH2 0x8F3 PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x175D JUMPI POP PUSH2 0x175D PUSH2 0x1696 JUMP JUMPDEST DUP1 PUSH2 0x176B JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x17A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1EC4 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x17D1 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0x8F3 PUSH2 0x1AE7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x155C SWAP1 DUP5 SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x183A JUMPI POP PUSH1 0x0 PUSH2 0x12BA JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x1847 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x12B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1EF2 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x18DA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x18E3 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1942 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1967 JUMPI POP PUSH2 0x1967 PUSH2 0x1696 JUMP JUMPDEST DUP1 PUSH2 0x1975 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x19B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1EC4 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x8F3 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x905 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1A07 JUMPI POP PUSH2 0x1A07 PUSH2 0x1696 JUMP JUMPDEST DUP1 PUSH2 0x1A15 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1A50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1EC4 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1A7B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 PUSH2 0x1A85 PUSH2 0x12C0 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x0 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP DUP1 ISZERO PUSH2 0x905 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1B00 JUMPI POP PUSH2 0x1B00 PUSH2 0x1696 JUMP JUMPDEST DUP1 PUSH2 0x1B0E JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1B49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1EC4 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1B74 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x65 SSTORE DUP1 ISZERO PUSH2 0x905 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1BE2 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C3E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x155C JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x155C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F5F PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0x1C4D DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1C57 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1C98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1E9E PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CA1 DUP6 PUSH2 0x1948 JUMP JUMPDEST PUSH2 0x1CF2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1D31 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1D12 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D93 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D98 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1DA8 DUP3 DUP3 DUP7 PUSH2 0x1DB3 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1DC2 JUMPI POP DUP2 PUSH2 0x1C50 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1DD2 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E1C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1E04 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1E49 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C496E6974 PUSH10 0x616C697A61626C653A20 PUSH4 0x6F6E7472 PUSH2 0x6374 KECCAK256 PUSH10 0x7320616C726561647920 PUSH10 0x6E697469616C697A6564 MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F774F776E61626C653A20 PUSH4 0x616C6C65 PUSH19 0x206973206E6F7420746865206F776E6572436F PUSH13 0x6C61746572616C732064656369 PUSH14 0x616C73206E65656420746F206265 KECCAK256 PUSH13 0x657373207468616E2031385361 PUSH7 0x6545524332303A KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A2646970667358221220264547BE ADDMOD MSTORE8 NOT SWAP13 0xCB PC LOG4 0x21 PUSH16 0x9488D8D9E6350441B24FD170B066A3B4 ORIGIN PUSH26 0xD664736F6C634300060C00330000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "CALLVALUE",
      "path": "19"
    },
    "6": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "DUP1",
      "path": "19"
    },
    "7": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "8": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "12": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "DUP1",
      "path": "19"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "REVERT",
      "path": "19"
    },
    "16": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "17": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "POP",
      "path": "19"
    },
    "18": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "21": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "LT",
      "path": "19"
    },
    "22": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF5"
    },
    "25": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "26": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "29": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "SHR",
      "path": "19"
    },
    "32": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "DUP1",
      "path": "19"
    },
    "33": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x8D52FEC6"
    },
    "38": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "GT",
      "path": "19"
    },
    "39": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x97"
    },
    "42": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "43": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "DUP1",
      "path": "19"
    },
    "44": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xC2F21E0F"
    },
    "49": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "GT",
      "path": "19"
    },
    "50": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "54": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "DUP1",
      "path": "19"
    },
    "55": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xC2F21E0F"
    },
    "60": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "EQ",
      "path": "19"
    },
    "61": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x23F"
    },
    "64": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "65": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "DUP1",
      "path": "19"
    },
    "66": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xC6783AF1"
    },
    "71": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "EQ",
      "path": "19"
    },
    "72": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x25C"
    },
    "75": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "76": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "DUP1",
      "path": "19"
    },
    "77": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xEC18154E"
    },
    "82": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "EQ",
      "path": "19"
    },
    "83": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x28A"
    },
    "86": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "87": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "DUP1",
      "path": "19"
    },
    "88": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "EQ",
      "path": "19"
    },
    "94": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x292"
    },
    "97": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "98": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF5"
    },
    "101": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "JUMP",
      "path": "19"
    },
    "102": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "103": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "DUP1",
      "path": "19"
    },
    "104": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x8D52FEC6"
    },
    "109": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "EQ",
      "path": "19"
    },
    "110": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x195"
    },
    "113": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "114": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "DUP1",
      "path": "19"
    },
    "115": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x8DA5CB5B"
    },
    "120": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "EQ",
      "path": "19"
    },
    "121": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E6"
    },
    "124": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "125": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "DUP1",
      "path": "19"
    },
    "126": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x96577A1A"
    },
    "131": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "EQ",
      "path": "19"
    },
    "132": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1EE"
    },
    "135": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "136": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "DUP1",
      "path": "19"
    },
    "137": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xABAA9916"
    },
    "142": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "EQ",
      "path": "19"
    },
    "143": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x237"
    },
    "146": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "147": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF5"
    },
    "150": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "JUMP",
      "path": "19"
    },
    "151": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "152": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "DUP1",
      "path": "19"
    },
    "153": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x715018A6"
    },
    "158": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "GT",
      "path": "19"
    },
    "159": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "163": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "DUP1",
      "path": "19"
    },
    "164": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x715018A6"
    },
    "169": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "EQ",
      "path": "19"
    },
    "170": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x144"
    },
    "173": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "174": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "DUP1",
      "path": "19"
    },
    "175": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x792F5874"
    },
    "180": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "EQ",
      "path": "19"
    },
    "181": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x14C"
    },
    "184": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "185": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "DUP1",
      "path": "19"
    },
    "186": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x7E428DAC"
    },
    "191": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "EQ",
      "path": "19"
    },
    "192": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x185"
    },
    "195": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "196": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "DUP1",
      "path": "19"
    },
    "197": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x8129FC1C"
    },
    "202": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "EQ",
      "path": "19"
    },
    "203": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18D"
    },
    "206": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "207": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF5"
    },
    "210": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "JUMP",
      "path": "19"
    },
    "211": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "212": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "DUP1",
      "path": "19"
    },
    "213": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x17852264"
    },
    "218": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "EQ",
      "path": "19"
    },
    "219": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xFA"
    },
    "222": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "223": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "DUP1",
      "path": "19"
    },
    "224": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x223E5479"
    },
    "229": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "EQ",
      "path": "19"
    },
    "230": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x114"
    },
    "233": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "234": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "DUP1",
      "path": "19"
    },
    "235": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x4641257D"
    },
    "240": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "EQ",
      "path": "19"
    },
    "241": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x13C"
    },
    "244": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "245": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "246": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "248": {
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "DUP1",
      "path": "19"
    },
    "249": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1009,
        8715
      ],
      "op": "REVERT",
      "path": "19"
    },
    "250": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7536,
        7813
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "251": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7536,
        7813
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x102"
    },
    "254": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7536,
        7813
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2B8"
    },
    "257": {
      "fn": "Vault.totalValueInStrategies",
      "jump": "i",
      "offset": [
        7536,
        7813
      ],
      "op": "JUMP",
      "path": "19"
    },
    "258": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7536,
        7813
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "259": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7536,
        7813
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "261": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7536,
        7813
      ],
      "op": "DUP1",
      "path": "19"
    },
    "262": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7536,
        7813
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "263": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7536,
        7813
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "264": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7536,
        7813
      ],
      "op": "DUP3",
      "path": "19"
    },
    "265": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7536,
        7813
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "266": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7536,
        7813
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "267": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7536,
        7813
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "268": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7536,
        7813
      ],
      "op": "DUP2",
      "path": "19"
    },
    "269": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7536,
        7813
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "270": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7536,
        7813
      ],
      "op": "SUB",
      "path": "19"
    },
    "271": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7536,
        7813
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "273": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7536,
        7813
      ],
      "op": "ADD",
      "path": "19"
    },
    "274": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7536,
        7813
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "275": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7536,
        7813
      ],
      "op": "RETURN",
      "path": "19"
    },
    "276": {
      "fn": "Vault.addStrategy",
      "offset": [
        3193,
        3574
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "277": {
      "fn": "Vault.addStrategy",
      "offset": [
        3193,
        3574
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x13A"
    },
    "280": {
      "fn": "Vault.addStrategy",
      "offset": [
        3193,
        3574
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "282": {
      "fn": "Vault.addStrategy",
      "offset": [
        3193,
        3574
      ],
      "op": "DUP1",
      "path": "19"
    },
    "283": {
      "fn": "Vault.addStrategy",
      "offset": [
        3193,
        3574
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "284": {
      "fn": "Vault.addStrategy",
      "offset": [
        3193,
        3574
      ],
      "op": "SUB",
      "path": "19"
    },
    "285": {
      "fn": "Vault.addStrategy",
      "offset": [
        3193,
        3574
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "287": {
      "fn": "Vault.addStrategy",
      "offset": [
        3193,
        3574
      ],
      "op": "DUP2",
      "path": "19"
    },
    "288": {
      "fn": "Vault.addStrategy",
      "offset": [
        3193,
        3574
      ],
      "op": "LT",
      "path": "19"
    },
    "289": {
      "fn": "Vault.addStrategy",
      "offset": [
        3193,
        3574
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "290": {
      "fn": "Vault.addStrategy",
      "offset": [
        3193,
        3574
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x12A"
    },
    "293": {
      "fn": "Vault.addStrategy",
      "offset": [
        3193,
        3574
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "294": {
      "fn": "Vault.addStrategy",
      "offset": [
        3193,
        3574
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "296": {
      "fn": "Vault.addStrategy",
      "offset": [
        3193,
        3574
      ],
      "op": "DUP1",
      "path": "19"
    },
    "297": {
      "fn": "Vault.addStrategy",
      "offset": [
        3193,
        3574
      ],
      "op": "REVERT",
      "path": "19"
    },
    "298": {
      "fn": "Vault.addStrategy",
      "offset": [
        3193,
        3574
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "299": {
      "op": "POP"
    },
    "300": {
      "fn": "Vault.addStrategy",
      "offset": [
        3193,
        3574
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "305": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "307": {
      "op": "SHL"
    },
    "308": {
      "op": "SUB"
    },
    "309": {
      "fn": "Vault.addStrategy",
      "offset": [
        3193,
        3574
      ],
      "op": "AND",
      "path": "19"
    },
    "310": {
      "fn": "Vault.addStrategy",
      "offset": [
        3193,
        3574
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x364"
    },
    "313": {
      "fn": "Vault.addStrategy",
      "jump": "i",
      "offset": [
        3193,
        3574
      ],
      "op": "JUMP",
      "path": "19"
    },
    "314": {
      "fn": "Vault.addStrategy",
      "offset": [
        3193,
        3574
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "315": {
      "fn": "Vault.addStrategy",
      "offset": [
        3193,
        3574
      ],
      "op": "STOP",
      "path": "19"
    },
    "316": {
      "fn": "Vault.harvest",
      "offset": [
        3732,
        4249
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "317": {
      "fn": "Vault.harvest",
      "offset": [
        3732,
        4249
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x13A"
    },
    "320": {
      "fn": "Vault.harvest",
      "offset": [
        3732,
        4249
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4E3"
    },
    "323": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        3732,
        4249
      ],
      "op": "JUMP",
      "path": "19"
    },
    "324": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1967,
        2112
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "325": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1967,
        2112
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13A"
    },
    "328": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1967,
        2112
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6E2"
    },
    "331": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "jump": "i",
      "offset": [
        1967,
        2112
      ],
      "op": "JUMP",
      "path": "1"
    },
    "332": {
      "offset": [
        1919,
        1951
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "333": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x169"
    },
    "336": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "338": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "DUP1",
      "path": "19"
    },
    "339": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "340": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "SUB",
      "path": "19"
    },
    "341": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "343": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "DUP2",
      "path": "19"
    },
    "344": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "LT",
      "path": "19"
    },
    "345": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "346": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x162"
    },
    "349": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "350": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "352": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "DUP1",
      "path": "19"
    },
    "353": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "REVERT",
      "path": "19"
    },
    "354": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "355": {
      "op": "POP"
    },
    "356": {
      "offset": [
        1919,
        1951
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "357": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x78E"
    },
    "360": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "jump": "i",
      "offset": [
        1919,
        1951
      ],
      "op": "JUMP",
      "path": "19"
    },
    "361": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "362": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "364": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "DUP1",
      "path": "19"
    },
    "365": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "370": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "372": {
      "op": "SHL"
    },
    "373": {
      "op": "SUB"
    },
    "374": {
      "offset": [
        1919,
        1951
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "375": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "376": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "AND",
      "path": "19"
    },
    "377": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "DUP3",
      "path": "19"
    },
    "378": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "379": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "380": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "381": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "DUP2",
      "path": "19"
    },
    "382": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "383": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "SUB",
      "path": "19"
    },
    "384": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "386": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "ADD",
      "path": "19"
    },
    "387": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "388": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "RETURN",
      "path": "19"
    },
    "389": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6507,
        6776
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "390": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6507,
        6776
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x102"
    },
    "393": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6507,
        6776
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7B5"
    },
    "396": {
      "fn": "Vault.totalValueInVault",
      "jump": "i",
      "offset": [
        6507,
        6776
      ],
      "op": "JUMP",
      "path": "19"
    },
    "397": {
      "fn": "Vault.initialize",
      "offset": [
        2033,
        2172
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "398": {
      "fn": "Vault.initialize",
      "offset": [
        2033,
        2172
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x13A"
    },
    "401": {
      "fn": "Vault.initialize",
      "offset": [
        2033,
        2172
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x856"
    },
    "404": {
      "fn": "Vault.initialize",
      "jump": "i",
      "offset": [
        2033,
        2172
      ],
      "op": "JUMP",
      "path": "19"
    },
    "405": {
      "offset": [
        1723,
        1782
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "406": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1BB"
    },
    "409": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "411": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "DUP1",
      "path": "19"
    },
    "412": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "413": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "SUB",
      "path": "19"
    },
    "414": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "416": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "DUP2",
      "path": "19"
    },
    "417": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "LT",
      "path": "19"
    },
    "418": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "419": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1AB"
    },
    "422": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "423": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "425": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "DUP1",
      "path": "19"
    },
    "426": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "REVERT",
      "path": "19"
    },
    "427": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "428": {
      "op": "POP"
    },
    "429": {
      "offset": [
        1723,
        1782
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "436": {
      "op": "SHL"
    },
    "437": {
      "op": "SUB"
    },
    "438": {
      "offset": [
        1723,
        1782
      ],
      "op": "AND",
      "path": "19"
    },
    "439": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x908"
    },
    "442": {
      "fn": "Vault.initialize",
      "jump": "i",
      "offset": [
        1723,
        1782
      ],
      "op": "JUMP",
      "path": "19"
    },
    "443": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "444": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "446": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "DUP1",
      "path": "19"
    },
    "447": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "452": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "454": {
      "op": "SHL"
    },
    "455": {
      "op": "SUB"
    },
    "456": {
      "offset": [
        1723,
        1782
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "457": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "DUP6",
      "path": "19"
    },
    "458": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "AND",
      "path": "19"
    },
    "459": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "DUP2",
      "path": "19"
    },
    "460": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "461": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "462": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "463": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "464": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "466": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "DUP5",
      "path": "19"
    },
    "467": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "ADD",
      "path": "19"
    },
    "468": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "469": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "470": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "AND",
      "path": "19"
    },
    "471": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "DUP2",
      "path": "19"
    },
    "472": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "DUP4",
      "path": "19"
    },
    "473": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "ADD",
      "path": "19"
    },
    "474": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "475": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "476": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "477": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "478": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "DUP2",
      "path": "19"
    },
    "479": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "480": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "SUB",
      "path": "19"
    },
    "481": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "483": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "ADD",
      "path": "19"
    },
    "484": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "485": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "RETURN",
      "path": "19"
    },
    "486": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1335,
        1420
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "487": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1335,
        1420
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x169"
    },
    "490": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1335,
        1420
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x939"
    },
    "493": {
      "fn": "OwnableUpgradeable.owner",
      "jump": "i",
      "offset": [
        1335,
        1420
      ],
      "op": "JUMP",
      "path": "1"
    },
    "494": {
      "offset": [
        1785,
        1841
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "495": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x214"
    },
    "498": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "500": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "DUP1",
      "path": "19"
    },
    "501": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "502": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "SUB",
      "path": "19"
    },
    "503": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "505": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "DUP2",
      "path": "19"
    },
    "506": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "LT",
      "path": "19"
    },
    "507": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "508": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x204"
    },
    "511": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "512": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "514": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "DUP1",
      "path": "19"
    },
    "515": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "REVERT",
      "path": "19"
    },
    "516": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "517": {
      "op": "POP"
    },
    "518": {
      "offset": [
        1785,
        1841
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "523": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "525": {
      "op": "SHL"
    },
    "526": {
      "op": "SUB"
    },
    "527": {
      "offset": [
        1785,
        1841
      ],
      "op": "AND",
      "path": "19"
    },
    "528": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x948"
    },
    "531": {
      "fn": "OwnableUpgradeable.owner",
      "jump": "i",
      "offset": [
        1785,
        1841
      ],
      "op": "JUMP",
      "path": "19"
    },
    "532": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "533": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "535": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "DUP1",
      "path": "19"
    },
    "536": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "541": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "543": {
      "op": "SHL"
    },
    "544": {
      "op": "SUB"
    },
    "545": {
      "offset": [
        1785,
        1841
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "546": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "547": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "AND",
      "path": "19"
    },
    "548": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "DUP4",
      "path": "19"
    },
    "549": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "550": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "551": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "552": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "553": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "555": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "DUP4",
      "path": "19"
    },
    "556": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "ADD",
      "path": "19"
    },
    "557": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "558": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "DUP1",
      "path": "19"
    },
    "559": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "560": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "561": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "DUP3",
      "path": "19"
    },
    "562": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "563": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "SUB",
      "path": "19"
    },
    "564": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "ADD",
      "path": "19"
    },
    "565": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "566": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "RETURN",
      "path": "19"
    },
    "567": {
      "fn": "Vault.allocate",
      "offset": [
        5444,
        6238
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "568": {
      "fn": "Vault.allocate",
      "offset": [
        5444,
        6238
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x13A"
    },
    "571": {
      "fn": "Vault.allocate",
      "offset": [
        5444,
        6238
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x96F"
    },
    "574": {
      "fn": "Vault.allocate",
      "jump": "i",
      "offset": [
        5444,
        6238
      ],
      "op": "JUMP",
      "path": "19"
    },
    "575": {
      "offset": [
        1845,
        1879
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "576": {
      "fn": "Vault.allocate",
      "offset": [
        1845,
        1879
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x169"
    },
    "579": {
      "fn": "Vault.allocate",
      "offset": [
        1845,
        1879
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "581": {
      "fn": "Vault.allocate",
      "offset": [
        1845,
        1879
      ],
      "op": "DUP1",
      "path": "19"
    },
    "582": {
      "fn": "Vault.allocate",
      "offset": [
        1845,
        1879
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "583": {
      "fn": "Vault.allocate",
      "offset": [
        1845,
        1879
      ],
      "op": "SUB",
      "path": "19"
    },
    "584": {
      "fn": "Vault.allocate",
      "offset": [
        1845,
        1879
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "586": {
      "fn": "Vault.allocate",
      "offset": [
        1845,
        1879
      ],
      "op": "DUP2",
      "path": "19"
    },
    "587": {
      "fn": "Vault.allocate",
      "offset": [
        1845,
        1879
      ],
      "op": "LT",
      "path": "19"
    },
    "588": {
      "fn": "Vault.allocate",
      "offset": [
        1845,
        1879
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "589": {
      "fn": "Vault.allocate",
      "offset": [
        1845,
        1879
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x255"
    },
    "592": {
      "fn": "Vault.allocate",
      "offset": [
        1845,
        1879
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "593": {
      "fn": "Vault.allocate",
      "offset": [
        1845,
        1879
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "595": {
      "fn": "Vault.allocate",
      "offset": [
        1845,
        1879
      ],
      "op": "DUP1",
      "path": "19"
    },
    "596": {
      "fn": "Vault.allocate",
      "offset": [
        1845,
        1879
      ],
      "op": "REVERT",
      "path": "19"
    },
    "597": {
      "fn": "Vault.allocate",
      "offset": [
        1845,
        1879
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "598": {
      "op": "POP"
    },
    "599": {
      "offset": [
        1845,
        1879
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "600": {
      "fn": "Vault.allocate",
      "offset": [
        1845,
        1879
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xCA9"
    },
    "603": {
      "fn": "Vault.allocate",
      "jump": "i",
      "offset": [
        1845,
        1879
      ],
      "op": "JUMP",
      "path": "19"
    },
    "604": {
      "fn": "Vault.addCollateral",
      "offset": [
        2439,
        3098
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "605": {
      "fn": "Vault.addCollateral",
      "offset": [
        2439,
        3098
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x13A"
    },
    "608": {
      "fn": "Vault.addCollateral",
      "offset": [
        2439,
        3098
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "610": {
      "fn": "Vault.addCollateral",
      "offset": [
        2439,
        3098
      ],
      "op": "DUP1",
      "path": "19"
    },
    "611": {
      "fn": "Vault.addCollateral",
      "offset": [
        2439,
        3098
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "612": {
      "fn": "Vault.addCollateral",
      "offset": [
        2439,
        3098
      ],
      "op": "SUB",
      "path": "19"
    },
    "613": {
      "fn": "Vault.addCollateral",
      "offset": [
        2439,
        3098
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "615": {
      "fn": "Vault.addCollateral",
      "offset": [
        2439,
        3098
      ],
      "op": "DUP2",
      "path": "19"
    },
    "616": {
      "fn": "Vault.addCollateral",
      "offset": [
        2439,
        3098
      ],
      "op": "LT",
      "path": "19"
    },
    "617": {
      "fn": "Vault.addCollateral",
      "offset": [
        2439,
        3098
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "618": {
      "fn": "Vault.addCollateral",
      "offset": [
        2439,
        3098
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x272"
    },
    "621": {
      "fn": "Vault.addCollateral",
      "offset": [
        2439,
        3098
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "622": {
      "fn": "Vault.addCollateral",
      "offset": [
        2439,
        3098
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "624": {
      "fn": "Vault.addCollateral",
      "offset": [
        2439,
        3098
      ],
      "op": "DUP1",
      "path": "19"
    },
    "625": {
      "fn": "Vault.addCollateral",
      "offset": [
        2439,
        3098
      ],
      "op": "REVERT",
      "path": "19"
    },
    "626": {
      "fn": "Vault.addCollateral",
      "offset": [
        2439,
        3098
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "627": {
      "op": "POP"
    },
    "628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "634": {
      "op": "SHL"
    },
    "635": {
      "op": "SUB"
    },
    "636": {
      "fn": "Vault.addCollateral",
      "offset": [
        2439,
        3098
      ],
      "op": "DUP2",
      "path": "19"
    },
    "637": {
      "fn": "Vault.addCollateral",
      "offset": [
        2439,
        3098
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "638": {
      "fn": "Vault.addCollateral",
      "offset": [
        2439,
        3098
      ],
      "op": "DUP2",
      "path": "19"
    },
    "639": {
      "fn": "Vault.addCollateral",
      "offset": [
        2439,
        3098
      ],
      "op": "AND",
      "path": "19"
    },
    "640": {
      "fn": "Vault.addCollateral",
      "offset": [
        2439,
        3098
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "641": {
      "fn": "Vault.addCollateral",
      "offset": [
        2439,
        3098
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "643": {
      "fn": "Vault.addCollateral",
      "offset": [
        2439,
        3098
      ],
      "op": "ADD",
      "path": "19"
    },
    "644": {
      "fn": "Vault.addCollateral",
      "offset": [
        2439,
        3098
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "645": {
      "fn": "Vault.addCollateral",
      "offset": [
        2439,
        3098
      ],
      "op": "AND",
      "path": "19"
    },
    "646": {
      "fn": "Vault.addCollateral",
      "offset": [
        2439,
        3098
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xCB6"
    },
    "649": {
      "fn": "Vault.addCollateral",
      "jump": "i",
      "offset": [
        2439,
        3098
      ],
      "op": "JUMP",
      "path": "19"
    },
    "650": {
      "fn": "Vault.totalValueLocked",
      "offset": [
        6317,
        6443
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "651": {
      "fn": "Vault.totalValueLocked",
      "offset": [
        6317,
        6443
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x102"
    },
    "654": {
      "fn": "Vault.totalValueLocked",
      "offset": [
        6317,
        6443
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF00"
    },
    "657": {
      "fn": "Vault.totalValueLocked",
      "jump": "i",
      "offset": [
        6317,
        6443
      ],
      "op": "JUMP",
      "path": "19"
    },
    "658": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2261,
        2501
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "659": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2261,
        2501
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13A"
    },
    "662": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2261,
        2501
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "664": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2261,
        2501
      ],
      "op": "DUP1",
      "path": "1"
    },
    "665": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2261,
        2501
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "666": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2261,
        2501
      ],
      "op": "SUB",
      "path": "1"
    },
    "667": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2261,
        2501
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "669": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2261,
        2501
      ],
      "op": "DUP2",
      "path": "1"
    },
    "670": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2261,
        2501
      ],
      "op": "LT",
      "path": "1"
    },
    "671": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2261,
        2501
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "672": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2261,
        2501
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A8"
    },
    "675": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2261,
        2501
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "676": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2261,
        2501
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "678": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2261,
        2501
      ],
      "op": "DUP1",
      "path": "1"
    },
    "679": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2261,
        2501
      ],
      "op": "REVERT",
      "path": "1"
    },
    "680": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2261,
        2501
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "681": {
      "op": "POP"
    },
    "682": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2261,
        2501
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "685": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "687": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "689": {
      "op": "SHL"
    },
    "690": {
      "op": "SUB"
    },
    "691": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2261,
        2501
      ],
      "op": "AND",
      "path": "1"
    },
    "692": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2261,
        2501
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF20"
    },
    "695": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "jump": "i",
      "offset": [
        2261,
        2501
      ],
      "op": "JUMP",
      "path": "1"
    },
    "696": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7536,
        7813
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "697": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7591,
        7601
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "699": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7591,
        7601
      ],
      "op": "DUP1",
      "path": "19"
    },
    "700": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7607,
        7810
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "701": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7628,
        7645
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x99"
    },
    "703": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7628,
        7652
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "704": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7624,
        7652
      ],
      "op": "DUP2",
      "path": "19"
    },
    "705": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7624,
        7652
      ],
      "op": "LT",
      "path": "19"
    },
    "706": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7607,
        7810
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "707": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7607,
        7810
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x360"
    },
    "710": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7607,
        7810
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "711": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7698
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2CE"
    },
    "714": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7698
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E57"
    },
    "717": {
      "fn": "Vault.totalValueInStrategies",
      "jump": "i",
      "offset": [
        7664,
        7698
      ],
      "op": "JUMP",
      "path": "19"
    },
    "718": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7698
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "719": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7701,
        7716
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x97"
    },
    "721": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7701,
        7738
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "723": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7717,
        7734
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x99"
    },
    "725": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7735,
        7736
      ],
      "op": "DUP5",
      "path": "19"
    },
    "726": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7717,
        7737
      ],
      "op": "DUP2",
      "path": "19"
    },
    "727": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7717,
        7737
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "728": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7717,
        7737
      ],
      "op": "DUP2",
      "path": "19"
    },
    "729": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7717,
        7737
      ],
      "op": "LT",
      "path": "19"
    },
    "730": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7717,
        7737
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2DF"
    },
    "733": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7717,
        7737
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "734": {
      "dev": "Index out of range",
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7717,
        7737
      ],
      "op": "INVALID",
      "path": "19"
    },
    "735": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7717,
        7737
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "736": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7717,
        7737
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "738": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7717,
        7737
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "739": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7717,
        7737
      ],
      "op": "DUP3",
      "path": "19"
    },
    "740": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7717,
        7737
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "741": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7717,
        7737
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "743": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7717,
        7737
      ],
      "op": "DUP1",
      "path": "19"
    },
    "744": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7717,
        7737
      ],
      "op": "DUP4",
      "path": "19"
    },
    "745": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7717,
        7737
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "746": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7717,
        7737
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "747": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7717,
        7737
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "748": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7717,
        7737
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "749": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7717,
        7737
      ],
      "op": "ADD",
      "path": "19"
    },
    "750": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7717,
        7737
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "755": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "757": {
      "op": "SHL"
    },
    "758": {
      "op": "SUB"
    },
    "759": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7717,
        7737
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "760": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7717,
        7737
      ],
      "op": "DUP2",
      "path": "19"
    },
    "761": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7717,
        7737
      ],
      "op": "AND",
      "path": "19"
    },
    "762": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7701,
        7738
      ],
      "op": "DUP5",
      "path": "19"
    },
    "763": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7701,
        7738
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "764": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7701,
        7738
      ],
      "op": "DUP4",
      "path": "19"
    },
    "765": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7701,
        7738
      ],
      "op": "DUP3",
      "path": "19"
    },
    "766": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7701,
        7738
      ],
      "op": "ADD",
      "path": "19"
    },
    "767": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7701,
        7738
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "768": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7701,
        7738
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "769": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7701,
        7738
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "770": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7701,
        7738
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "771": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7701,
        7738
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "773": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7701,
        7738
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "774": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7701,
        7738
      ],
      "op": "DUP4",
      "path": "19"
    },
    "775": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7701,
        7738
      ],
      "op": "ADD",
      "path": "19"
    },
    "776": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7701,
        7738
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "777": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7701,
        7738
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "778": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7701,
        7738
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "779": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "DUP3",
      "path": "19"
    },
    "780": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "781": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "783": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "DUP2",
      "path": "19"
    },
    "784": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "ADD",
      "path": "19"
    },
    "785": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "DUP5",
      "path": "19"
    },
    "786": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "787": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "DUP2",
      "path": "19"
    },
    "788": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "789": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "DUP1",
      "path": "19"
    },
    "790": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "DUP7",
      "path": "19"
    },
    "791": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "AND",
      "path": "19"
    },
    "792": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "DUP1",
      "path": "19"
    },
    "793": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "DUP4",
      "path": "19"
    },
    "794": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "797": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "799": {
      "op": "SHL"
    },
    "800": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "801": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "802": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "DIV",
      "path": "19"
    },
    "803": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "805": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "AND",
      "path": "19"
    },
    "806": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "807": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "808": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "809": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "DUP3",
      "path": "19"
    },
    "810": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "ADD",
      "path": "19"
    },
    "811": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "812": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "813": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "814": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "815": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7717,
        7737
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "817": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "818": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "819": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "ADD",
      "path": "19"
    },
    "820": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "821": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "822": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "823": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "AND",
      "path": "19"
    },
    "824": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "825": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "DUP4",
      "path": "19"
    },
    "826": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "ADD",
      "path": "19"
    },
    "827": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "828": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "829": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "830": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "831": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "832": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7664,
        7738
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "833": {
      "op": "POP"
    },
    "834": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7751,
        7805
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 0,
      "value": "0x355"
    },
    "837": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7751,
        7805
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "838": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7761,
        7804
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x34E"
    },
    "841": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7761,
        7804
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "842": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7761,
        7777
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1023"
    },
    "845": {
      "fn": "Vault.totalValueInStrategies",
      "jump": "i",
      "offset": [
        7761,
        7804
      ],
      "op": "JUMP",
      "path": "19"
    },
    "846": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7761,
        7804
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "847": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7751,
        7756
      ],
      "op": "DUP5",
      "path": "19"
    },
    "848": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7751,
        7756
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "849": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7751,
        7760
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x125D"
    },
    "852": {
      "fn": "Vault.totalValueInStrategies",
      "jump": "i",
      "offset": [
        7751,
        7805
      ],
      "op": "JUMP",
      "path": "19"
    },
    "853": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7751,
        7805
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "854": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7743,
        7805
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "855": {
      "op": "POP"
    },
    "856": {
      "op": "POP"
    },
    "857": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7654,
        7657
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 1,
      "value": "0x1"
    },
    "859": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7654,
        7657
      ],
      "op": "ADD",
      "path": "19"
    },
    "860": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7607,
        7810
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2BC"
    },
    "863": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7607,
        7810
      ],
      "op": "JUMP",
      "path": "19"
    },
    "864": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7607,
        7810
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "865": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7607,
        7810
      ],
      "op": "POP",
      "path": "19"
    },
    "866": {
      "fn": "Vault.totalValueInStrategies",
      "offset": [
        7536,
        7813
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "867": {
      "fn": "Vault.totalValueInStrategies",
      "jump": "o",
      "offset": [
        7536,
        7813
      ],
      "op": "JUMP",
      "path": "19"
    },
    "868": {
      "fn": "Vault.addStrategy",
      "offset": [
        3193,
        3574
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "869": {
      "offset": [
        1558,
        1570
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36C"
    },
    "872": {
      "offset": [
        1558,
        1568
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12C0"
    },
    "875": {
      "jump": "i",
      "offset": [
        1558,
        1570
      ],
      "op": "JUMP",
      "path": "1"
    },
    "876": {
      "fn": "Vault.addStrategy",
      "offset": [
        1558,
        1570
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "881": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "883": {
      "op": "SHL"
    },
    "884": {
      "op": "SUB"
    },
    "885": {
      "offset": [
        1547,
        1570
      ],
      "op": "AND",
      "path": "1"
    },
    "886": {
      "offset": [
        1547,
        1554
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x37D"
    },
    "889": {
      "offset": [
        1547,
        1552
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x939"
    },
    "892": {
      "jump": "i",
      "offset": [
        1547,
        1554
      ],
      "op": "JUMP",
      "path": "1"
    },
    "893": {
      "fn": "Vault.addStrategy",
      "offset": [
        1547,
        1554
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "900": {
      "op": "SHL"
    },
    "901": {
      "op": "SUB"
    },
    "902": {
      "offset": [
        1547,
        1570
      ],
      "op": "AND",
      "path": "1"
    },
    "903": {
      "fn": "Vault.addStrategy",
      "offset": [
        1547,
        1570
      ],
      "op": "EQ",
      "path": "1"
    },
    "904": {
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3C6"
    },
    "907": {
      "offset": [
        1539,
        1607
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "908": {
      "fn": "Vault.addStrategy",
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "910": {
      "fn": "Vault.addStrategy",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP1",
      "path": "1"
    },
    "911": {
      "fn": "Vault.addStrategy",
      "offset": [
        1539,
        1607
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "912": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "916": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "918": {
      "op": "SHL"
    },
    "919": {
      "offset": [
        1539,
        1607
      ],
      "op": "DUP2",
      "path": "1"
    },
    "920": {
      "fn": "Vault.addStrategy",
      "offset": [
        1539,
        1607
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "921": {
      "fn": "Vault.addStrategy",
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "923": {
      "fn": "Vault.addStrategy",
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "925": {
      "fn": "Vault.addStrategy",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP3",
      "path": "1"
    },
    "926": {
      "fn": "Vault.addStrategy",
      "offset": [
        1539,
        1607
      ],
      "op": "ADD",
      "path": "1"
    },
    "927": {
      "fn": "Vault.addStrategy",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP2",
      "path": "1"
    },
    "928": {
      "fn": "Vault.addStrategy",
      "offset": [
        1539,
        1607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "929": {
      "fn": "Vault.addStrategy",
      "offset": [
        1539,
        1607
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "930": {
      "fn": "Vault.addStrategy",
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "932": {
      "fn": "Vault.addStrategy",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP3",
      "path": "1"
    },
    "933": {
      "fn": "Vault.addStrategy",
      "offset": [
        1539,
        1607
      ],
      "op": "ADD",
      "path": "1"
    },
    "934": {
      "fn": "Vault.addStrategy",
      "offset": [
        1539,
        1607
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "937": {
      "op": "DUP1"
    },
    "938": {
      "op": "MLOAD"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "941": {
      "op": "PUSH2",
      "value": "0x1F13"
    },
    "944": {
      "op": "DUP4"
    },
    "945": {
      "op": "CODECOPY"
    },
    "946": {
      "op": "DUP2"
    },
    "947": {
      "op": "MLOAD"
    },
    "948": {
      "op": "SWAP2"
    },
    "949": {
      "op": "MSTORE"
    },
    "950": {
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "952": {
      "fn": "Vault.addStrategy",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP3",
      "path": "1"
    },
    "953": {
      "fn": "Vault.addStrategy",
      "offset": [
        1539,
        1607
      ],
      "op": "ADD",
      "path": "1"
    },
    "954": {
      "fn": "Vault.addStrategy",
      "offset": [
        1539,
        1607
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "955": {
      "fn": "Vault.addStrategy",
      "offset": [
        1539,
        1607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "956": {
      "fn": "Vault.addStrategy",
      "offset": [
        1539,
        1607
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "957": {
      "fn": "Vault.addStrategy",
      "offset": [
        1539,
        1607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "958": {
      "fn": "Vault.addStrategy",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP2",
      "path": "1"
    },
    "959": {
      "fn": "Vault.addStrategy",
      "offset": [
        1539,
        1607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "960": {
      "fn": "Vault.addStrategy",
      "offset": [
        1539,
        1607
      ],
      "op": "SUB",
      "path": "1"
    },
    "961": {
      "fn": "Vault.addStrategy",
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "963": {
      "fn": "Vault.addStrategy",
      "offset": [
        1539,
        1607
      ],
      "op": "ADD",
      "path": "1"
    },
    "964": {
      "fn": "Vault.addStrategy",
      "offset": [
        1539,
        1607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "965": {
      "fn": "Vault.addStrategy",
      "offset": [
        1539,
        1607
      ],
      "op": "REVERT",
      "path": "1"
    },
    "966": {
      "fn": "Vault.addStrategy",
      "offset": [
        1539,
        1607
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "971": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "973": {
      "op": "SHL"
    },
    "974": {
      "op": "SUB"
    },
    "975": {
      "fn": "Vault.addStrategy",
      "offset": [
        3269,
        3298
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 2
    },
    "976": {
      "fn": "Vault.addStrategy",
      "offset": [
        3269,
        3298
      ],
      "op": "AND",
      "path": "19"
    },
    "977": {
      "fn": "Vault.addStrategy",
      "offset": [
        3269,
        3298
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "979": {
      "fn": "Vault.addStrategy",
      "offset": [
        3269,
        3298
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "980": {
      "fn": "Vault.addStrategy",
      "offset": [
        3269,
        3298
      ],
      "op": "DUP2",
      "path": "19"
    },
    "981": {
      "fn": "Vault.addStrategy",
      "offset": [
        3269,
        3298
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "982": {
      "fn": "Vault.addStrategy",
      "offset": [
        3269,
        3283
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x98"
    },
    "984": {
      "fn": "Vault.addStrategy",
      "offset": [
        3269,
        3298
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "986": {
      "fn": "Vault.addStrategy",
      "offset": [
        3269,
        3298
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "987": {
      "fn": "Vault.addStrategy",
      "offset": [
        3269,
        3298
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "989": {
      "fn": "Vault.addStrategy",
      "offset": [
        3269,
        3298
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "990": {
      "fn": "Vault.addStrategy",
      "offset": [
        3269,
        3298
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "991": {
      "fn": "Vault.addStrategy",
      "offset": [
        3269,
        3304
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "994": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "996": {
      "op": "SHL"
    },
    "997": {
      "fn": "Vault.addStrategy",
      "offset": [
        3269,
        3304
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "998": {
      "fn": "Vault.addStrategy",
      "offset": [
        3269,
        3304
      ],
      "op": "DIV",
      "path": "19"
    },
    "999": {
      "fn": "Vault.addStrategy",
      "offset": [
        3269,
        3304
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "1001": {
      "fn": "Vault.addStrategy",
      "offset": [
        3269,
        3304
      ],
      "op": "AND",
      "path": "19"
    },
    "1002": {
      "branch": 67,
      "fn": "Vault.addStrategy",
      "offset": [
        3268,
        3304
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1003": {
      "fn": "Vault.addStrategy",
      "offset": [
        3260,
        3323
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x42C"
    },
    "1006": {
      "branch": 67,
      "fn": "Vault.addStrategy",
      "offset": [
        3260,
        3323
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1007": {
      "fn": "Vault.addStrategy",
      "offset": [
        3260,
        3323
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1009": {
      "fn": "Vault.addStrategy",
      "offset": [
        3260,
        3323
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1010": {
      "fn": "Vault.addStrategy",
      "offset": [
        3260,
        3323
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1011": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1017": {
      "op": "SHL"
    },
    "1018": {
      "fn": "Vault.addStrategy",
      "offset": [
        3260,
        3323
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1019": {
      "fn": "Vault.addStrategy",
      "offset": [
        3260,
        3323
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1020": {
      "fn": "Vault.addStrategy",
      "offset": [
        3260,
        3323
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1022": {
      "fn": "Vault.addStrategy",
      "offset": [
        3260,
        3323
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1024": {
      "fn": "Vault.addStrategy",
      "offset": [
        3260,
        3323
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1025": {
      "fn": "Vault.addStrategy",
      "offset": [
        3260,
        3323
      ],
      "op": "ADD",
      "path": "19"
    },
    "1026": {
      "fn": "Vault.addStrategy",
      "offset": [
        3260,
        3323
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1027": {
      "fn": "Vault.addStrategy",
      "offset": [
        3260,
        3323
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE"
    },
    "1029": {
      "fn": "Vault.addStrategy",
      "offset": [
        3260,
        3323
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "1031": {
      "fn": "Vault.addStrategy",
      "offset": [
        3260,
        3323
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1032": {
      "fn": "Vault.addStrategy",
      "offset": [
        3260,
        3323
      ],
      "op": "ADD",
      "path": "19"
    },
    "1033": {
      "fn": "Vault.addStrategy",
      "offset": [
        3260,
        3323
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1034": {
      "op": "PUSH14",
      "value": "0x14DD1C985D1959DE481859191959"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "1051": {
      "op": "SHL"
    },
    "1052": {
      "fn": "Vault.addStrategy",
      "offset": [
        3260,
        3323
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "1054": {
      "fn": "Vault.addStrategy",
      "offset": [
        3260,
        3323
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1055": {
      "fn": "Vault.addStrategy",
      "offset": [
        3260,
        3323
      ],
      "op": "ADD",
      "path": "19"
    },
    "1056": {
      "fn": "Vault.addStrategy",
      "offset": [
        3260,
        3323
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1057": {
      "fn": "Vault.addStrategy",
      "offset": [
        3260,
        3323
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1058": {
      "fn": "Vault.addStrategy",
      "offset": [
        3260,
        3323
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1059": {
      "fn": "Vault.addStrategy",
      "offset": [
        3260,
        3323
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1060": {
      "fn": "Vault.addStrategy",
      "offset": [
        3260,
        3323
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1061": {
      "fn": "Vault.addStrategy",
      "offset": [
        3260,
        3323
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1062": {
      "fn": "Vault.addStrategy",
      "offset": [
        3260,
        3323
      ],
      "op": "SUB",
      "path": "19"
    },
    "1063": {
      "fn": "Vault.addStrategy",
      "offset": [
        3260,
        3323
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "1065": {
      "fn": "Vault.addStrategy",
      "offset": [
        3260,
        3323
      ],
      "op": "ADD",
      "path": "19"
    },
    "1066": {
      "fn": "Vault.addStrategy",
      "offset": [
        3260,
        3323
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1067": {
      "fn": "Vault.addStrategy",
      "offset": [
        3260,
        3323
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1068": {
      "fn": "Vault.addStrategy",
      "offset": [
        3260,
        3323
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1073": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1075": {
      "op": "SHL"
    },
    "1076": {
      "op": "SUB"
    },
    "1077": {
      "fn": "Vault.addStrategy",
      "offset": [
        3367,
        3396
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1078": {
      "fn": "Vault.addStrategy",
      "offset": [
        3367,
        3396
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1079": {
      "fn": "Vault.addStrategy",
      "offset": [
        3367,
        3396
      ],
      "op": "AND",
      "path": "19"
    },
    "1080": {
      "fn": "Vault.addStrategy",
      "offset": [
        3327,
        3364
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1082": {
      "fn": "Vault.addStrategy",
      "offset": [
        3367,
        3396
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1083": {
      "fn": "Vault.addStrategy",
      "offset": [
        3367,
        3396
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1084": {
      "fn": "Vault.addStrategy",
      "offset": [
        3367,
        3396
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1085": {
      "fn": "Vault.addStrategy",
      "offset": [
        3367,
        3381
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x98"
    },
    "1087": {
      "fn": "Vault.addStrategy",
      "offset": [
        3367,
        3396
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1089": {
      "fn": "Vault.addStrategy",
      "offset": [
        3367,
        3396
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1090": {
      "fn": "Vault.addStrategy",
      "offset": [
        3367,
        3396
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1091": {
      "fn": "Vault.addStrategy",
      "offset": [
        3367,
        3396
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1092": {
      "fn": "Vault.addStrategy",
      "offset": [
        3367,
        3396
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1094": {
      "fn": "Vault.addStrategy",
      "offset": [
        3367,
        3396
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1095": {
      "fn": "Vault.addStrategy",
      "offset": [
        3367,
        3396
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1096": {
      "fn": "Vault.addStrategy",
      "offset": [
        3367,
        3396
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1097": {
      "fn": "Vault.addStrategy",
      "offset": [
        3400,
        3443
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 3
    },
    "1098": {
      "fn": "Vault.addStrategy",
      "offset": [
        3400,
        3443
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1101": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1103": {
      "op": "SHL"
    },
    "1104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1110": {
      "op": "SHL"
    },
    "1111": {
      "op": "SUB"
    },
    "1112": {
      "op": "NOT"
    },
    "1113": {
      "fn": "Vault.addStrategy",
      "offset": [
        3400,
        3443
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1114": {
      "fn": "Vault.addStrategy",
      "offset": [
        3400,
        3443
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1115": {
      "fn": "Vault.addStrategy",
      "offset": [
        3400,
        3443
      ],
      "op": "AND",
      "path": "19"
    },
    "1116": {
      "fn": "Vault.addStrategy",
      "offset": [
        3400,
        3443
      ],
      "op": "DUP8",
      "path": "19"
    },
    "1117": {
      "fn": "Vault.addStrategy",
      "offset": [
        3400,
        3443
      ],
      "op": "OR",
      "path": "19"
    },
    "1118": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1120": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1122": {
      "op": "SHL"
    },
    "1123": {
      "op": "NOT"
    },
    "1124": {
      "fn": "Vault.addStrategy",
      "offset": [
        3447,
        3474
      ],
      "op": "AND",
      "path": "19",
      "statement": 4
    },
    "1125": {
      "fn": "Vault.addStrategy",
      "offset": [
        3447,
        3474
      ],
      "op": "OR",
      "path": "19"
    },
    "1126": {
      "fn": "Vault.addStrategy",
      "offset": [
        3447,
        3474
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1127": {
      "fn": "Vault.addStrategy",
      "offset": [
        3447,
        3474
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1128": {
      "fn": "Vault.addStrategy",
      "offset": [
        3447,
        3474
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "1129": {
      "fn": "Vault.addStrategy",
      "offset": [
        3478,
        3493
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 5,
      "value": "0x9A"
    },
    "1131": {
      "fn": "Vault.addStrategy",
      "offset": [
        3478,
        3527
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1132": {
      "fn": "Vault.addStrategy",
      "offset": [
        3478,
        3527
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1135": {
      "fn": "Vault.addStrategy",
      "offset": [
        3478,
        3527
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1136": {
      "fn": "Vault.addStrategy",
      "offset": [
        3478,
        3527
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1137": {
      "fn": "Vault.addStrategy",
      "offset": [
        3478,
        3527
      ],
      "op": "ADD",
      "path": "19"
    },
    "1138": {
      "fn": "Vault.addStrategy",
      "offset": [
        3478,
        3527
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1139": {
      "fn": "Vault.addStrategy",
      "offset": [
        3478,
        3527
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "1140": {
      "fn": "Vault.addStrategy",
      "offset": [
        3478,
        3527
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1141": {
      "fn": "Vault.addStrategy",
      "offset": [
        3478,
        3527
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1142": {
      "fn": "Vault.addStrategy",
      "offset": [
        3478,
        3527
      ],
      "op": "SWAP8",
      "path": "19"
    },
    "1143": {
      "fn": "Vault.addStrategy",
      "offset": [
        3478,
        3527
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1144": {
      "fn": "Vault.addStrategy",
      "offset": [
        3478,
        3527
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0x44DA158BA27F9252712A74FF6A55C5D531F69609F1F6E7F17C4443A8E2089BE4"
    },
    "1177": {
      "fn": "Vault.addStrategy",
      "offset": [
        3478,
        3527
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1178": {
      "fn": "Vault.addStrategy",
      "offset": [
        3478,
        3527
      ],
      "op": "SWAP7",
      "path": "19"
    },
    "1179": {
      "fn": "Vault.addStrategy",
      "offset": [
        3478,
        3527
      ],
      "op": "ADD",
      "path": "19"
    },
    "1180": {
      "fn": "Vault.addStrategy",
      "offset": [
        3478,
        3527
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1181": {
      "fn": "Vault.addStrategy",
      "offset": [
        3478,
        3527
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1182": {
      "fn": "Vault.addStrategy",
      "offset": [
        3499,
        3526
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1183": {
      "fn": "Vault.addStrategy",
      "offset": [
        3499,
        3526
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1184": {
      "fn": "Vault.addStrategy",
      "offset": [
        3499,
        3526
      ],
      "op": "SWAP9",
      "path": "19"
    },
    "1185": {
      "fn": "Vault.addStrategy",
      "offset": [
        3499,
        3526
      ],
      "op": "AND",
      "path": "19"
    },
    "1186": {
      "fn": "Vault.addStrategy",
      "offset": [
        3478,
        3527
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1187": {
      "fn": "Vault.addStrategy",
      "offset": [
        3478,
        3527
      ],
      "op": "AND",
      "path": "19"
    },
    "1188": {
      "fn": "Vault.addStrategy",
      "offset": [
        3478,
        3527
      ],
      "op": "OR",
      "path": "19"
    },
    "1189": {
      "fn": "Vault.addStrategy",
      "offset": [
        3478,
        3527
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1190": {
      "fn": "Vault.addStrategy",
      "offset": [
        3478,
        3527
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "1191": {
      "fn": "Vault.addStrategy",
      "offset": [
        3478,
        3527
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "1192": {
      "fn": "Vault.addStrategy",
      "offset": [
        3536,
        3570
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 6
    },
    "1193": {
      "fn": "Vault.addStrategy",
      "offset": [
        3536,
        3570
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1194": {
      "fn": "Vault.addStrategy",
      "offset": [
        3536,
        3570
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "1195": {
      "fn": "Vault.addStrategy",
      "offset": [
        3536,
        3570
      ],
      "op": "DUP5",
      "path": "19"
    },
    "1196": {
      "fn": "Vault.addStrategy",
      "offset": [
        3536,
        3570
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1197": {
      "fn": "Vault.addStrategy",
      "offset": [
        3536,
        3570
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1198": {
      "fn": "Vault.addStrategy",
      "offset": [
        3536,
        3570
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1199": {
      "fn": "Vault.addStrategy",
      "offset": [
        3536,
        3570
      ],
      "op": "ADD",
      "path": "19"
    },
    "1200": {
      "fn": "Vault.addStrategy",
      "offset": [
        3536,
        3570
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1201": {
      "fn": "Vault.addStrategy",
      "offset": [
        3536,
        3570
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1202": {
      "fn": "Vault.addStrategy",
      "offset": [
        3536,
        3570
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1203": {
      "fn": "Vault.addStrategy",
      "offset": [
        3536,
        3570
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1204": {
      "fn": "Vault.addStrategy",
      "offset": [
        3536,
        3570
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1205": {
      "fn": "Vault.addStrategy",
      "offset": [
        3536,
        3570
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1206": {
      "fn": "Vault.addStrategy",
      "offset": [
        3536,
        3570
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0x835A6C4FC865A810F7943CFCA478CADA6BF307D7DBD75892A046AEE7EA3CC214"
    },
    "1239": {
      "fn": "Vault.addStrategy",
      "offset": [
        3536,
        3570
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1240": {
      "fn": "Vault.addStrategy",
      "offset": [
        3536,
        3570
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1241": {
      "fn": "Vault.addStrategy",
      "offset": [
        3536,
        3570
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1242": {
      "fn": "Vault.addStrategy",
      "offset": [
        3536,
        3570
      ],
      "op": "SUB",
      "path": "19"
    },
    "1243": {
      "fn": "Vault.addStrategy",
      "offset": [
        3536,
        3570
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1244": {
      "fn": "Vault.addStrategy",
      "offset": [
        3536,
        3570
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1245": {
      "fn": "Vault.addStrategy",
      "offset": [
        3536,
        3570
      ],
      "op": "ADD",
      "path": "19"
    },
    "1246": {
      "fn": "Vault.addStrategy",
      "offset": [
        3536,
        3570
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1247": {
      "fn": "Vault.addStrategy",
      "offset": [
        3536,
        3570
      ],
      "op": "LOG1",
      "path": "19"
    },
    "1248": {
      "offset": [
        1617,
        1618
      ],
      "op": "POP",
      "path": "1"
    },
    "1249": {
      "fn": "Vault.addStrategy",
      "offset": [
        3193,
        3574
      ],
      "op": "POP",
      "path": "19"
    },
    "1250": {
      "fn": "Vault.addStrategy",
      "jump": "o",
      "offset": [
        3193,
        3574
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1251": {
      "fn": "Vault.harvest",
      "offset": [
        3732,
        4249
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1252": {
      "offset": [
        1558,
        1570
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4EB"
    },
    "1255": {
      "offset": [
        1558,
        1568
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12C0"
    },
    "1258": {
      "jump": "i",
      "offset": [
        1558,
        1570
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1259": {
      "fn": "Vault.harvest",
      "offset": [
        1558,
        1570
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1266": {
      "op": "SHL"
    },
    "1267": {
      "op": "SUB"
    },
    "1268": {
      "offset": [
        1547,
        1570
      ],
      "op": "AND",
      "path": "1"
    },
    "1269": {
      "offset": [
        1547,
        1554
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4FC"
    },
    "1272": {
      "offset": [
        1547,
        1552
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x939"
    },
    "1275": {
      "jump": "i",
      "offset": [
        1547,
        1554
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1276": {
      "fn": "Vault.harvest",
      "offset": [
        1547,
        1554
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1281": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1283": {
      "op": "SHL"
    },
    "1284": {
      "op": "SUB"
    },
    "1285": {
      "offset": [
        1547,
        1570
      ],
      "op": "AND",
      "path": "1"
    },
    "1286": {
      "fn": "Vault.harvest",
      "offset": [
        1547,
        1570
      ],
      "op": "EQ",
      "path": "1"
    },
    "1287": {
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x545"
    },
    "1290": {
      "offset": [
        1539,
        1607
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1291": {
      "fn": "Vault.harvest",
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1293": {
      "fn": "Vault.harvest",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1294": {
      "fn": "Vault.harvest",
      "offset": [
        1539,
        1607
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1295": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1299": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1301": {
      "op": "SHL"
    },
    "1302": {
      "offset": [
        1539,
        1607
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1303": {
      "fn": "Vault.harvest",
      "offset": [
        1539,
        1607
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1304": {
      "fn": "Vault.harvest",
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1306": {
      "fn": "Vault.harvest",
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1308": {
      "fn": "Vault.harvest",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1309": {
      "fn": "Vault.harvest",
      "offset": [
        1539,
        1607
      ],
      "op": "ADD",
      "path": "1"
    },
    "1310": {
      "fn": "Vault.harvest",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1311": {
      "fn": "Vault.harvest",
      "offset": [
        1539,
        1607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1312": {
      "fn": "Vault.harvest",
      "offset": [
        1539,
        1607
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1313": {
      "fn": "Vault.harvest",
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1315": {
      "fn": "Vault.harvest",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1316": {
      "fn": "Vault.harvest",
      "offset": [
        1539,
        1607
      ],
      "op": "ADD",
      "path": "1"
    },
    "1317": {
      "fn": "Vault.harvest",
      "offset": [
        1539,
        1607
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1318": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1320": {
      "op": "DUP1"
    },
    "1321": {
      "op": "MLOAD"
    },
    "1322": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1324": {
      "op": "PUSH2",
      "value": "0x1F13"
    },
    "1327": {
      "op": "DUP4"
    },
    "1328": {
      "op": "CODECOPY"
    },
    "1329": {
      "op": "DUP2"
    },
    "1330": {
      "op": "MLOAD"
    },
    "1331": {
      "op": "SWAP2"
    },
    "1332": {
      "op": "MSTORE"
    },
    "1333": {
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "1335": {
      "fn": "Vault.harvest",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1336": {
      "fn": "Vault.harvest",
      "offset": [
        1539,
        1607
      ],
      "op": "ADD",
      "path": "1"
    },
    "1337": {
      "fn": "Vault.harvest",
      "offset": [
        1539,
        1607
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1338": {
      "fn": "Vault.harvest",
      "offset": [
        1539,
        1607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1339": {
      "fn": "Vault.harvest",
      "offset": [
        1539,
        1607
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1340": {
      "fn": "Vault.harvest",
      "offset": [
        1539,
        1607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1341": {
      "fn": "Vault.harvest",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1342": {
      "fn": "Vault.harvest",
      "offset": [
        1539,
        1607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1343": {
      "fn": "Vault.harvest",
      "offset": [
        1539,
        1607
      ],
      "op": "SUB",
      "path": "1"
    },
    "1344": {
      "fn": "Vault.harvest",
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "1346": {
      "fn": "Vault.harvest",
      "offset": [
        1539,
        1607
      ],
      "op": "ADD",
      "path": "1"
    },
    "1347": {
      "fn": "Vault.harvest",
      "offset": [
        1539,
        1607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1348": {
      "fn": "Vault.harvest",
      "offset": [
        1539,
        1607
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1349": {
      "fn": "Vault.harvest",
      "offset": [
        1539,
        1607
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1350": {
      "offset": [
        1753,
        1754
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "1352": {
      "offset": [
        2495,
        2502
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x65"
    },
    "1354": {
      "fn": "Vault.harvest",
      "offset": [
        2495,
        2502
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1355": {
      "offset": [
        2495,
        2514
      ],
      "op": "EQ",
      "path": "10"
    },
    "1356": {
      "fn": "Vault.harvest",
      "offset": [
        2495,
        2514
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1357": {
      "offset": [
        2487,
        2550
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x59D"
    },
    "1360": {
      "offset": [
        2487,
        2550
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1361": {
      "fn": "Vault.harvest",
      "offset": [
        2487,
        2550
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1363": {
      "fn": "Vault.harvest",
      "offset": [
        2487,
        2550
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1364": {
      "fn": "Vault.harvest",
      "offset": [
        2487,
        2550
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1365": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1369": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1371": {
      "op": "SHL"
    },
    "1372": {
      "offset": [
        2487,
        2550
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1373": {
      "fn": "Vault.harvest",
      "offset": [
        2487,
        2550
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1374": {
      "fn": "Vault.harvest",
      "offset": [
        2487,
        2550
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1376": {
      "fn": "Vault.harvest",
      "offset": [
        2487,
        2550
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1378": {
      "fn": "Vault.harvest",
      "offset": [
        2487,
        2550
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1379": {
      "fn": "Vault.harvest",
      "offset": [
        2487,
        2550
      ],
      "op": "ADD",
      "path": "10"
    },
    "1380": {
      "fn": "Vault.harvest",
      "offset": [
        2487,
        2550
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1381": {
      "fn": "Vault.harvest",
      "offset": [
        2487,
        2550
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "1383": {
      "fn": "Vault.harvest",
      "offset": [
        2487,
        2550
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "1385": {
      "fn": "Vault.harvest",
      "offset": [
        2487,
        2550
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1386": {
      "fn": "Vault.harvest",
      "offset": [
        2487,
        2550
      ],
      "op": "ADD",
      "path": "10"
    },
    "1387": {
      "fn": "Vault.harvest",
      "offset": [
        2487,
        2550
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1388": {
      "fn": "Vault.harvest",
      "offset": [
        2487,
        2550
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "1421": {
      "fn": "Vault.harvest",
      "offset": [
        2487,
        2550
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "1423": {
      "fn": "Vault.harvest",
      "offset": [
        2487,
        2550
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1424": {
      "fn": "Vault.harvest",
      "offset": [
        2487,
        2550
      ],
      "op": "ADD",
      "path": "10"
    },
    "1425": {
      "fn": "Vault.harvest",
      "offset": [
        2487,
        2550
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1426": {
      "fn": "Vault.harvest",
      "offset": [
        2487,
        2550
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1427": {
      "fn": "Vault.harvest",
      "offset": [
        2487,
        2550
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1428": {
      "fn": "Vault.harvest",
      "offset": [
        2487,
        2550
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1429": {
      "fn": "Vault.harvest",
      "offset": [
        2487,
        2550
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1430": {
      "fn": "Vault.harvest",
      "offset": [
        2487,
        2550
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1431": {
      "fn": "Vault.harvest",
      "offset": [
        2487,
        2550
      ],
      "op": "SUB",
      "path": "10"
    },
    "1432": {
      "fn": "Vault.harvest",
      "offset": [
        2487,
        2550
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "1434": {
      "fn": "Vault.harvest",
      "offset": [
        2487,
        2550
      ],
      "op": "ADD",
      "path": "10"
    },
    "1435": {
      "fn": "Vault.harvest",
      "offset": [
        2487,
        2550
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1436": {
      "fn": "Vault.harvest",
      "offset": [
        2487,
        2550
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1437": {
      "fn": "Vault.harvest",
      "offset": [
        2487,
        2550
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1438": {
      "offset": [
        1753,
        1754
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "1440": {
      "offset": [
        2625,
        2632
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x65"
    },
    "1442": {
      "offset": [
        2625,
        2643
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1443": {
      "fn": "Vault.harvest",
      "offset": [
        3788,
        3806
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1445": {
      "fn": "Vault.harvest",
      "offset": [
        3811,
        3845
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5AC"
    },
    "1448": {
      "fn": "Vault.harvest",
      "offset": [
        3811,
        3845
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E57"
    },
    "1451": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        3811,
        3845
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1452": {
      "fn": "Vault.harvest",
      "offset": [
        3811,
        3845
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1453": {
      "fn": "Vault.harvest",
      "offset": [
        3855,
        3861
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1455": {
      "fn": "Vault.harvest",
      "offset": [
        3850,
        4245
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1456": {
      "fn": "Vault.harvest",
      "offset": [
        3871,
        3888
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x99"
    },
    "1458": {
      "fn": "Vault.harvest",
      "offset": [
        3871,
        3895
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1459": {
      "fn": "Vault.harvest",
      "offset": [
        3867,
        3895
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1460": {
      "fn": "Vault.harvest",
      "offset": [
        3867,
        3895
      ],
      "op": "LT",
      "path": "19"
    },
    "1461": {
      "fn": "Vault.harvest",
      "offset": [
        3850,
        4245
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1462": {
      "fn": "Vault.harvest",
      "offset": [
        3850,
        4245
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6D8"
    },
    "1465": {
      "fn": "Vault.harvest",
      "offset": [
        3850,
        4245
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1466": {
      "fn": "Vault.harvest",
      "offset": [
        3921,
        3936
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 7,
      "value": "0x97"
    },
    "1468": {
      "fn": "Vault.harvest",
      "offset": [
        3921,
        3958
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1470": {
      "fn": "Vault.harvest",
      "offset": [
        3937,
        3954
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x99"
    },
    "1472": {
      "fn": "Vault.harvest",
      "offset": [
        3955,
        3956
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1473": {
      "fn": "Vault.harvest",
      "offset": [
        3937,
        3957
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1474": {
      "fn": "Vault.harvest",
      "offset": [
        3937,
        3957
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1475": {
      "fn": "Vault.harvest",
      "offset": [
        3937,
        3957
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1476": {
      "fn": "Vault.harvest",
      "offset": [
        3937,
        3957
      ],
      "op": "LT",
      "path": "19"
    },
    "1477": {
      "fn": "Vault.harvest",
      "offset": [
        3937,
        3957
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5CA"
    },
    "1480": {
      "fn": "Vault.harvest",
      "offset": [
        3937,
        3957
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1481": {
      "dev": "Index out of range",
      "fn": "Vault.harvest",
      "offset": [
        3937,
        3957
      ],
      "op": "INVALID",
      "path": "19"
    },
    "1482": {
      "fn": "Vault.harvest",
      "offset": [
        3937,
        3957
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1483": {
      "fn": "Vault.harvest",
      "offset": [
        3937,
        3957
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1485": {
      "fn": "Vault.harvest",
      "offset": [
        3937,
        3957
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1486": {
      "fn": "Vault.harvest",
      "offset": [
        3937,
        3957
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1487": {
      "fn": "Vault.harvest",
      "offset": [
        3937,
        3957
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1488": {
      "fn": "Vault.harvest",
      "offset": [
        3937,
        3957
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1490": {
      "fn": "Vault.harvest",
      "offset": [
        3937,
        3957
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1491": {
      "fn": "Vault.harvest",
      "offset": [
        3937,
        3957
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1492": {
      "fn": "Vault.harvest",
      "offset": [
        3937,
        3957
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1493": {
      "fn": "Vault.harvest",
      "offset": [
        3937,
        3957
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1494": {
      "fn": "Vault.harvest",
      "offset": [
        3937,
        3957
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1495": {
      "fn": "Vault.harvest",
      "offset": [
        3937,
        3957
      ],
      "op": "ADD",
      "path": "19"
    },
    "1496": {
      "fn": "Vault.harvest",
      "offset": [
        3937,
        3957
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1503": {
      "op": "SHL"
    },
    "1504": {
      "op": "SUB"
    },
    "1505": {
      "fn": "Vault.harvest",
      "offset": [
        3937,
        3957
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1506": {
      "fn": "Vault.harvest",
      "offset": [
        3937,
        3957
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1507": {
      "fn": "Vault.harvest",
      "offset": [
        3937,
        3957
      ],
      "op": "AND",
      "path": "19"
    },
    "1508": {
      "fn": "Vault.harvest",
      "offset": [
        3921,
        3958
      ],
      "op": "DUP5",
      "path": "19"
    },
    "1509": {
      "fn": "Vault.harvest",
      "offset": [
        3921,
        3958
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1510": {
      "fn": "Vault.harvest",
      "offset": [
        3921,
        3958
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1511": {
      "fn": "Vault.harvest",
      "offset": [
        3921,
        3958
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1512": {
      "fn": "Vault.harvest",
      "offset": [
        3921,
        3958
      ],
      "op": "ADD",
      "path": "19"
    },
    "1513": {
      "fn": "Vault.harvest",
      "offset": [
        3921,
        3958
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "1514": {
      "fn": "Vault.harvest",
      "offset": [
        3921,
        3958
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1515": {
      "fn": "Vault.harvest",
      "offset": [
        3921,
        3958
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "1516": {
      "fn": "Vault.harvest",
      "offset": [
        3921,
        3958
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1517": {
      "fn": "Vault.harvest",
      "offset": [
        3921,
        3958
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1519": {
      "fn": "Vault.harvest",
      "offset": [
        3921,
        3958
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1520": {
      "fn": "Vault.harvest",
      "offset": [
        3921,
        3958
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1521": {
      "fn": "Vault.harvest",
      "offset": [
        3921,
        3958
      ],
      "op": "ADD",
      "path": "19"
    },
    "1522": {
      "fn": "Vault.harvest",
      "offset": [
        3921,
        3958
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1523": {
      "fn": "Vault.harvest",
      "offset": [
        3921,
        3958
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1524": {
      "fn": "Vault.harvest",
      "offset": [
        3921,
        3958
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1525": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1526": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1527": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "1529": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1530": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "ADD",
      "path": "19"
    },
    "1531": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "DUP5",
      "path": "19"
    },
    "1532": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1533": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1534": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1535": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1536": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "DUP7",
      "path": "19"
    },
    "1537": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "AND",
      "path": "19"
    },
    "1538": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1539": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1540": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "1542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1544": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1546": {
      "op": "SHL"
    },
    "1547": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1548": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1549": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "DIV",
      "path": "19"
    },
    "1550": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "AND",
      "path": "19"
    },
    "1551": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1552": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1553": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1554": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1555": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "ADD",
      "path": "19"
    },
    "1556": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1557": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1558": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1559": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1560": {
      "fn": "Vault.harvest",
      "offset": [
        3937,
        3957
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "1562": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "ADD",
      "path": "19"
    },
    "1563": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1564": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1565": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1566": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "AND",
      "path": "19"
    },
    "1567": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1568": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1569": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "ADD",
      "path": "19"
    },
    "1570": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1571": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1572": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1573": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1574": {
      "fn": "Vault.harvest",
      "offset": [
        3908,
        3958
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1575": {
      "op": "POP"
    },
    "1576": {
      "branch": 68,
      "fn": "Vault.harvest",
      "offset": [
        3968,
        4012
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1577": {
      "fn": "Vault.harvest",
      "offset": [
        3964,
        4240
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6D0"
    },
    "1580": {
      "branch": 68,
      "fn": "Vault.harvest",
      "offset": [
        3964,
        4240
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1581": {
      "fn": "Vault.harvest",
      "offset": [
        4042,
        4052
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 8
    },
    "1582": {
      "fn": "Vault.harvest",
      "offset": [
        4042,
        4072
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1584": {
      "fn": "Vault.harvest",
      "offset": [
        4042,
        4072
      ],
      "op": "ADD",
      "path": "19"
    },
    "1585": {
      "fn": "Vault.harvest",
      "offset": [
        4042,
        4072
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1586": {
      "fn": "Vault.harvest",
      "offset": [
        4021,
        4073
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1587": {
      "fn": "Vault.harvest",
      "offset": [
        4021,
        4073
      ],
      "op": "POP",
      "path": "19"
    },
    "1588": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4096
      ],
      "op": "DUP3",
      "path": "19",
      "statement": 9
    },
    "1589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1595": {
      "op": "SHL"
    },
    "1596": {
      "op": "SUB"
    },
    "1597": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4115
      ],
      "op": "AND",
      "path": "19"
    },
    "1598": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4115
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA400326F"
    },
    "1603": {
      "fn": "Vault.harvest",
      "offset": [
        4116,
        4126
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1604": {
      "fn": "Vault.harvest",
      "offset": [
        4116,
        4141
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1606": {
      "fn": "Vault.harvest",
      "offset": [
        4116,
        4141
      ],
      "op": "ADD",
      "path": "19"
    },
    "1607": {
      "fn": "Vault.harvest",
      "offset": [
        4116,
        4141
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1608": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1610": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1611": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1612": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "1617": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "AND",
      "path": "19"
    },
    "1618": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "1620": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "SHL",
      "path": "19"
    },
    "1621": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1622": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1623": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1625": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "ADD",
      "path": "19"
    },
    "1626": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1627": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1634": {
      "op": "SHL"
    },
    "1635": {
      "op": "SUB"
    },
    "1636": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "AND",
      "path": "19"
    },
    "1637": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1638": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1639": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1641": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "ADD",
      "path": "19"
    },
    "1642": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1643": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "POP",
      "path": "19"
    },
    "1644": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "POP",
      "path": "19"
    },
    "1645": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1647": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1649": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1650": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1651": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1652": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "SUB",
      "path": "19"
    },
    "1653": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1654": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "DUP7",
      "path": "19"
    },
    "1655": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1656": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "1657": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1658": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1659": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1660": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x684"
    },
    "1663": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1664": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1666": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1667": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1668": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1669": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "POP",
      "path": "19"
    },
    "1670": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "GAS",
      "path": "19"
    },
    "1671": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "1672": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1673": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1674": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1675": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x698"
    },
    "1678": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1679": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "1680": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1682": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1683": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "1684": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "1685": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1687": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1688": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1689": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "POP",
      "path": "19"
    },
    "1690": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "POP",
      "path": "19"
    },
    "1691": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "POP",
      "path": "19"
    },
    "1692": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "POP",
      "path": "19"
    },
    "1693": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1695": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1696": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "1697": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1699": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1700": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "LT",
      "path": "19"
    },
    "1701": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1702": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6AE"
    },
    "1705": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1706": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1708": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1709": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1710": {
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1711": {
      "op": "POP"
    },
    "1712": {
      "branch": 69,
      "fn": "Vault.harvest",
      "offset": [
        4088,
        4142
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1713": {
      "fn": "Vault.harvest",
      "offset": [
        4080,
        4143
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6B9"
    },
    "1716": {
      "branch": 69,
      "fn": "Vault.harvest",
      "offset": [
        4080,
        4143
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1717": {
      "fn": "Vault.harvest",
      "offset": [
        4080,
        4143
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1719": {
      "fn": "Vault.harvest",
      "offset": [
        4080,
        4143
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1720": {
      "fn": "Vault.harvest",
      "offset": [
        4080,
        4143
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1721": {
      "fn": "Vault.harvest",
      "offset": [
        4080,
        4143
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1722": {
      "fn": "Vault.harvest",
      "offset": [
        4149,
        4202
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 10,
      "value": "0x6C7"
    },
    "1725": {
      "fn": "Vault.harvest",
      "offset": [
        4166,
        4174
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1726": {
      "fn": "Vault.harvest",
      "offset": [
        4176,
        4186
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1727": {
      "fn": "Vault.harvest",
      "offset": [
        4176,
        4201
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1729": {
      "fn": "Vault.harvest",
      "offset": [
        4176,
        4201
      ],
      "op": "ADD",
      "path": "19"
    },
    "1730": {
      "fn": "Vault.harvest",
      "offset": [
        4176,
        4201
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1731": {
      "fn": "Vault.harvest",
      "offset": [
        4149,
        4165
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x12C4"
    },
    "1734": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        4149,
        4202
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1735": {
      "fn": "Vault.harvest",
      "offset": [
        4149,
        4202
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1736": {
      "fn": "Vault.harvest",
      "offset": [
        4209,
        4233
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 11,
      "value": "0x6D0"
    },
    "1739": {
      "fn": "Vault.harvest",
      "offset": [
        4224,
        4232
      ],
      "op": "DUP4",
      "path": "19"
    },
    "1740": {
      "fn": "Vault.harvest",
      "offset": [
        4209,
        4223
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1410"
    },
    "1743": {
      "fn": "Vault.harvest",
      "jump": "i",
      "offset": [
        4209,
        4233
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1744": {
      "fn": "Vault.harvest",
      "offset": [
        4209,
        4233
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1745": {
      "fn": "Vault.harvest",
      "offset": [
        3897,
        3900
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 12,
      "value": "0x1"
    },
    "1747": {
      "fn": "Vault.harvest",
      "offset": [
        3897,
        3900
      ],
      "op": "ADD",
      "path": "19"
    },
    "1748": {
      "fn": "Vault.harvest",
      "offset": [
        3850,
        4245
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x5AF"
    },
    "1751": {
      "fn": "Vault.harvest",
      "offset": [
        3850,
        4245
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1752": {
      "fn": "Vault.harvest",
      "offset": [
        3850,
        4245
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1753": {
      "op": "POP"
    },
    "1754": {
      "op": "POP"
    },
    "1755": {
      "offset": [
        1710,
        1711
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "1757": {
      "offset": [
        2798,
        2805
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x65"
    },
    "1759": {
      "offset": [
        2798,
        2820
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1760": {
      "op": "POP"
    },
    "1761": {
      "fn": "Vault.harvest",
      "jump": "o",
      "offset": [
        3732,
        4249
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1762": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1967,
        2112
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1763": {
      "offset": [
        1558,
        1570
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6EA"
    },
    "1766": {
      "offset": [
        1558,
        1568
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12C0"
    },
    "1769": {
      "jump": "i",
      "offset": [
        1558,
        1570
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1770": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1558,
        1570
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1775": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1777": {
      "op": "SHL"
    },
    "1778": {
      "op": "SUB"
    },
    "1779": {
      "offset": [
        1547,
        1570
      ],
      "op": "AND",
      "path": "1"
    },
    "1780": {
      "offset": [
        1547,
        1554
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6FB"
    },
    "1783": {
      "offset": [
        1547,
        1552
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x939"
    },
    "1786": {
      "jump": "i",
      "offset": [
        1547,
        1554
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1787": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1547,
        1554
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1792": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1794": {
      "op": "SHL"
    },
    "1795": {
      "op": "SUB"
    },
    "1796": {
      "offset": [
        1547,
        1570
      ],
      "op": "AND",
      "path": "1"
    },
    "1797": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1547,
        1570
      ],
      "op": "EQ",
      "path": "1"
    },
    "1798": {
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x744"
    },
    "1801": {
      "offset": [
        1539,
        1607
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1802": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1804": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1805": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1806": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1810": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1812": {
      "op": "SHL"
    },
    "1813": {
      "offset": [
        1539,
        1607
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1814": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1815": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1817": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1819": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1820": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "ADD",
      "path": "1"
    },
    "1821": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1822": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1823": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1824": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1826": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1827": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "ADD",
      "path": "1"
    },
    "1828": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1829": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1831": {
      "op": "DUP1"
    },
    "1832": {
      "op": "MLOAD"
    },
    "1833": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1835": {
      "op": "PUSH2",
      "value": "0x1F13"
    },
    "1838": {
      "op": "DUP4"
    },
    "1839": {
      "op": "CODECOPY"
    },
    "1840": {
      "op": "DUP2"
    },
    "1841": {
      "op": "MLOAD"
    },
    "1842": {
      "op": "SWAP2"
    },
    "1843": {
      "op": "MSTORE"
    },
    "1844": {
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "1846": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1847": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "ADD",
      "path": "1"
    },
    "1848": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1849": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1850": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1851": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1852": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1853": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1854": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "SUB",
      "path": "1"
    },
    "1855": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "1857": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "ADD",
      "path": "1"
    },
    "1858": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1859": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1860": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1861": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2057,
        2063
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 13,
      "value": "0x33"
    },
    "1863": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2057,
        2063
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1864": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2036,
        2076
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1866": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2036,
        2076
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1867": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2073,
        2074
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1869": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2073,
        2074
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1876": {
      "op": "SHL"
    },
    "1877": {
      "op": "SUB"
    },
    "1878": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2057,
        2063
      ],
      "op": "AND",
      "path": "1"
    },
    "1879": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2057,
        2063
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1880": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2036,
        2076
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1913": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2036,
        2076
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1914": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2073,
        2074
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1915": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2073,
        2074
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1916": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2036,
        2076
      ],
      "op": "LOG3",
      "path": "1"
    },
    "1917": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2086,
        2092
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 14,
      "value": "0x33"
    },
    "1919": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2086,
        2105
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1920": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2086,
        2105
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1925": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1927": {
      "op": "SHL"
    },
    "1928": {
      "op": "SUB"
    },
    "1929": {
      "op": "NOT"
    },
    "1930": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2086,
        2105
      ],
      "op": "AND",
      "path": "1"
    },
    "1931": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2086,
        2105
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1932": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        2086,
        2105
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1933": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "jump": "o",
      "offset": [
        1967,
        2112
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1934": {
      "offset": [
        1919,
        1951
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1935": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x9A"
    },
    "1937": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1938": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1939": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1940": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1941": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "LT",
      "path": "19"
    },
    "1942": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x79B"
    },
    "1945": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1946": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "INVALID",
      "path": "19"
    },
    "1947": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1948": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1950": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1951": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1952": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1953": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1955": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1956": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1957": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "1958": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "ADD",
      "path": "19"
    },
    "1959": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1966": {
      "op": "SHL"
    },
    "1967": {
      "op": "SUB"
    },
    "1968": {
      "offset": [
        1919,
        1951
      ],
      "op": "AND",
      "path": "19"
    },
    "1969": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1919,
        1951
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1970": {
      "op": "POP"
    },
    "1971": {
      "offset": [
        1919,
        1951
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1972": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "jump": "o",
      "offset": [
        1919,
        1951
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1973": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6507,
        6776
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1974": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6557,
        6567
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1976": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6557,
        6567
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1977": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6573,
        6773
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1978": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6594,
        6611
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x99"
    },
    "1980": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6594,
        6618
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1981": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6590,
        6618
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1982": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6590,
        6618
      ],
      "op": "LT",
      "path": "19"
    },
    "1983": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6573,
        6773
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1984": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6573,
        6773
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x360"
    },
    "1987": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6573,
        6773
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1988": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6664
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7CB"
    },
    "1991": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6664
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E57"
    },
    "1994": {
      "fn": "Vault.totalValueInVault",
      "jump": "i",
      "offset": [
        6630,
        6664
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1995": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6664
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1996": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6667,
        6682
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x97"
    },
    "1998": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6667,
        6704
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2000": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6683,
        6700
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x99"
    },
    "2002": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6701,
        6702
      ],
      "op": "DUP5",
      "path": "19"
    },
    "2003": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6683,
        6703
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2004": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6683,
        6703
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2005": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6683,
        6703
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2006": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6683,
        6703
      ],
      "op": "LT",
      "path": "19"
    },
    "2007": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6683,
        6703
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7DC"
    },
    "2010": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6683,
        6703
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2011": {
      "dev": "Index out of range",
      "fn": "Vault.totalValueInVault",
      "offset": [
        6683,
        6703
      ],
      "op": "INVALID",
      "path": "19"
    },
    "2012": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6683,
        6703
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2013": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6683,
        6703
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2015": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6683,
        6703
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2016": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6683,
        6703
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2017": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6683,
        6703
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2018": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6683,
        6703
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2020": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6683,
        6703
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2021": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6683,
        6703
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2022": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6683,
        6703
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "2023": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6683,
        6703
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2024": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6683,
        6703
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2025": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6683,
        6703
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2026": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6683,
        6703
      ],
      "op": "ADD",
      "path": "19"
    },
    "2027": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6683,
        6703
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2032": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2034": {
      "op": "SHL"
    },
    "2035": {
      "op": "SUB"
    },
    "2036": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6683,
        6703
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2037": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6683,
        6703
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2038": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6683,
        6703
      ],
      "op": "AND",
      "path": "19"
    },
    "2039": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6667,
        6704
      ],
      "op": "DUP5",
      "path": "19"
    },
    "2040": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6667,
        6704
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2041": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6667,
        6704
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2042": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6667,
        6704
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2043": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6667,
        6704
      ],
      "op": "ADD",
      "path": "19"
    },
    "2044": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6667,
        6704
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "2045": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6667,
        6704
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2046": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6667,
        6704
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "2047": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6667,
        6704
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2048": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6667,
        6704
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2050": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6667,
        6704
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2051": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6667,
        6704
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2052": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6667,
        6704
      ],
      "op": "ADD",
      "path": "19"
    },
    "2053": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6667,
        6704
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2054": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6667,
        6704
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2055": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6667,
        6704
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "2056": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2057": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2058": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "2060": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2061": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "ADD",
      "path": "19"
    },
    "2062": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "DUP5",
      "path": "19"
    },
    "2063": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2064": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2065": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2066": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2067": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "DUP7",
      "path": "19"
    },
    "2068": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "AND",
      "path": "19"
    },
    "2069": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2070": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2071": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2076": {
      "op": "SHL"
    },
    "2077": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2078": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2079": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "DIV",
      "path": "19"
    },
    "2080": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "2082": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "AND",
      "path": "19"
    },
    "2083": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2084": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2085": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "2086": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2087": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "ADD",
      "path": "19"
    },
    "2088": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "2089": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2090": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "2091": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2092": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6683,
        6703
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "2094": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2095": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2096": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "ADD",
      "path": "19"
    },
    "2097": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2098": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2099": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "2100": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "AND",
      "path": "19"
    },
    "2101": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2102": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2103": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "ADD",
      "path": "19"
    },
    "2104": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2105": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2106": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2107": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2108": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2109": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6630,
        6704
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2110": {
      "op": "POP"
    },
    "2111": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6717,
        6768
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 15,
      "value": "0x84B"
    },
    "2114": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6717,
        6768
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2115": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6727,
        6767
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x34E"
    },
    "2118": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6727,
        6767
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2119": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6727,
        6740
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1561"
    },
    "2122": {
      "fn": "Vault.totalValueInVault",
      "jump": "i",
      "offset": [
        6727,
        6767
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2123": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6717,
        6768
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2124": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6709,
        6768
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2125": {
      "op": "POP"
    },
    "2126": {
      "op": "POP"
    },
    "2127": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6620,
        6623
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 16,
      "value": "0x1"
    },
    "2129": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6620,
        6623
      ],
      "op": "ADD",
      "path": "19"
    },
    "2130": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6573,
        6773
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7B9"
    },
    "2133": {
      "fn": "Vault.totalValueInVault",
      "offset": [
        6573,
        6773
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2134": {
      "fn": "Vault.initialize",
      "offset": [
        2033,
        2172
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2135": {
      "offset": [
        1512,
        1525
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2137": {
      "fn": "Vault.initialize",
      "offset": [
        1512,
        1525
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2138": {
      "fn": "Vault.initialize",
      "offset": [
        1512,
        1525
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "2141": {
      "fn": "Vault.initialize",
      "offset": [
        1512,
        1525
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2142": {
      "fn": "Vault.initialize",
      "offset": [
        1512,
        1525
      ],
      "op": "DIV",
      "path": "3"
    },
    "2143": {
      "fn": "Vault.initialize",
      "offset": [
        1512,
        1525
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "2145": {
      "fn": "Vault.initialize",
      "offset": [
        1512,
        1525
      ],
      "op": "AND",
      "path": "3"
    },
    "2146": {
      "fn": "Vault.initialize",
      "offset": [
        1512,
        1525
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2147": {
      "offset": [
        1512,
        1545
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x86F"
    },
    "2150": {
      "offset": [
        1512,
        1545
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2151": {
      "fn": "Vault.initialize",
      "offset": [
        1512,
        1545
      ],
      "op": "POP",
      "path": "3"
    },
    "2152": {
      "offset": [
        1529,
        1545
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x86F"
    },
    "2155": {
      "offset": [
        1529,
        1543
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1696"
    },
    "2158": {
      "jump": "i",
      "offset": [
        1529,
        1545
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2159": {
      "fn": "Vault.initialize",
      "offset": [
        1529,
        1545
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2160": {
      "offset": [
        1512,
        1562
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2161": {
      "fn": "Vault.initialize",
      "offset": [
        1512,
        1562
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x87D"
    },
    "2164": {
      "offset": [
        1512,
        1562
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2165": {
      "op": "POP"
    },
    "2166": {
      "offset": [
        1550,
        1562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2168": {
      "fn": "Vault.initialize",
      "offset": [
        1550,
        1562
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2169": {
      "fn": "Vault.initialize",
      "offset": [
        1550,
        1562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "2171": {
      "fn": "Vault.initialize",
      "offset": [
        1550,
        1562
      ],
      "op": "AND",
      "path": "3"
    },
    "2172": {
      "offset": [
        1549,
        1562
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2173": {
      "offset": [
        1512,
        1562
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2174": {
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8B8"
    },
    "2177": {
      "offset": [
        1504,
        1613
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2178": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2180": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2181": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2185": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2187": {
      "op": "SHL"
    },
    "2188": {
      "offset": [
        1504,
        1613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2189": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2190": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2192": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "ADD",
      "path": "3"
    },
    "2193": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2194": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2195": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2197": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "ADD",
      "path": "3"
    },
    "2198": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2199": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2200": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "SUB",
      "path": "3"
    },
    "2201": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2202": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2203": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2E"
    },
    "2205": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2206": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2207": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2209": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "ADD",
      "path": "3"
    },
    "2210": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2211": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EC4"
    },
    "2214": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2E"
    },
    "2216": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2217": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "2218": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2220": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "ADD",
      "path": "3"
    },
    "2221": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2222": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "POP",
      "path": "3"
    },
    "2223": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "POP",
      "path": "3"
    },
    "2224": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2226": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2227": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2228": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2229": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "SUB",
      "path": "3"
    },
    "2230": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2231": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2232": {
      "fn": "Vault.initialize",
      "offset": [
        1504,
        1613
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2233": {
      "offset": [
        1624,
        1643
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2235": {
      "offset": [
        1647,
        1660
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2236": {
      "fn": "Vault.initialize",
      "offset": [
        1647,
        1660
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "2239": {
      "fn": "Vault.initialize",
      "offset": [
        1647,
        1660
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2240": {
      "fn": "Vault.initialize",
      "offset": [
        1647,
        1660
      ],
      "op": "DIV",
      "path": "3"
    },
    "2241": {
      "fn": "Vault.initialize",
      "offset": [
        1647,
        1660
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "2243": {
      "fn": "Vault.initialize",
      "offset": [
        1647,
        1660
      ],
      "op": "AND",
      "path": "3"
    },
    "2244": {
      "offset": [
        1646,
        1660
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2245": {
      "offset": [
        1670,
        1768
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2246": {
      "fn": "Vault.initialize",
      "offset": [
        1670,
        1768
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2247": {
      "fn": "Vault.initialize",
      "offset": [
        1670,
        1768
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8E3"
    },
    "2250": {
      "fn": "Vault.initialize",
      "offset": [
        1670,
        1768
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2251": {
      "offset": [
        1704,
        1717
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2253": {
      "offset": [
        1704,
        1724
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2254": {
      "fn": "Vault.initialize",
      "offset": [
        1704,
        1724
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2255": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2257": {
      "op": "NOT"
    },
    "2258": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "2261": {
      "op": "NOT"
    },
    "2262": {
      "offset": [
        1704,
        1724
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2263": {
      "fn": "Vault.initialize",
      "offset": [
        1704,
        1724
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2264": {
      "fn": "Vault.initialize",
      "offset": [
        1704,
        1724
      ],
      "op": "AND",
      "path": "3"
    },
    "2265": {
      "fn": "Vault.initialize",
      "offset": [
        1704,
        1724
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "2268": {
      "fn": "Vault.initialize",
      "offset": [
        1704,
        1724
      ],
      "op": "OR",
      "path": "3"
    },
    "2269": {
      "offset": [
        1738,
        1757
      ],
      "op": "AND",
      "path": "3"
    },
    "2270": {
      "offset": [
        1720,
        1724
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2272": {
      "offset": [
        1738,
        1757
      ],
      "op": "OR",
      "path": "3"
    },
    "2273": {
      "fn": "Vault.initialize",
      "offset": [
        1738,
        1757
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2274": {
      "fn": "Vault.initialize",
      "offset": [
        1738,
        1757
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2275": {
      "offset": [
        1670,
        1768
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2276": {
      "fn": "Vault.initialize",
      "offset": [
        2078,
        2113
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 17,
      "value": "0x8EB"
    },
    "2279": {
      "fn": "Vault.initialize",
      "offset": [
        2078,
        2111
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x16A7"
    },
    "2282": {
      "fn": "Vault.initialize",
      "jump": "i",
      "offset": [
        2078,
        2113
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2283": {
      "fn": "Vault.initialize",
      "offset": [
        2078,
        2113
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2284": {
      "fn": "Vault.initialize",
      "offset": [
        2117,
        2168
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 18,
      "value": "0x8F3"
    },
    "2287": {
      "fn": "Vault.initialize",
      "offset": [
        2117,
        2166
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1744"
    },
    "2290": {
      "fn": "Vault.initialize",
      "jump": "i",
      "offset": [
        2117,
        2168
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2291": {
      "fn": "Vault.initialize",
      "offset": [
        2117,
        2168
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2292": {
      "offset": [
        1794,
        1808
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2293": {
      "offset": [
        1790,
        1856
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2294": {
      "fn": "Vault.initialize",
      "offset": [
        1790,
        1856
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x905"
    },
    "2297": {
      "offset": [
        1790,
        1856
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2298": {
      "offset": [
        1840,
        1845
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2300": {
      "offset": [
        1824,
        1845
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2301": {
      "fn": "Vault.initialize",
      "offset": [
        1824,
        1845
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2302": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "2305": {
      "op": "NOT"
    },
    "2306": {
      "offset": [
        1824,
        1845
      ],
      "op": "AND",
      "path": "3"
    },
    "2307": {
      "fn": "Vault.initialize",
      "offset": [
        1824,
        1845
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2308": {
      "fn": "Vault.initialize",
      "offset": [
        1824,
        1845
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2309": {
      "offset": [
        1790,
        1856
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2310": {
      "fn": "Vault.initialize",
      "offset": [
        2033,
        2172
      ],
      "op": "POP",
      "path": "19"
    },
    "2311": {
      "fn": "Vault.initialize",
      "jump": "o",
      "offset": [
        2033,
        2172
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2312": {
      "offset": [
        1723,
        1782
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2313": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x97"
    },
    "2315": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2317": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2318": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2320": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2321": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2322": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2323": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2325": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2326": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "2327": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2328": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2329": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "2331": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2332": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2333": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "ADD",
      "path": "19"
    },
    "2334": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2339": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2341": {
      "op": "SHL"
    },
    "2342": {
      "op": "SUB"
    },
    "2343": {
      "offset": [
        1723,
        1782
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2344": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2345": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "AND",
      "path": "19"
    },
    "2346": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2349": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2351": {
      "op": "SHL"
    },
    "2352": {
      "offset": [
        1723,
        1782
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2353": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "DIV",
      "path": "19"
    },
    "2354": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "2356": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "AND",
      "path": "19"
    },
    "2357": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2358": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "AND",
      "path": "19"
    },
    "2359": {
      "fn": "Vault.initialize",
      "offset": [
        1723,
        1782
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2360": {
      "fn": "Vault.initialize",
      "jump": "o",
      "offset": [
        1723,
        1782
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2361": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1335,
        1420
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2362": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1407,
        1413
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 19,
      "value": "0x33"
    },
    "2364": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1407,
        1413
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2369": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2371": {
      "op": "SHL"
    },
    "2372": {
      "op": "SUB"
    },
    "2373": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1407,
        1413
      ],
      "op": "AND",
      "path": "1"
    },
    "2374": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1335,
        1420
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2375": {
      "fn": "OwnableUpgradeable.owner",
      "jump": "o",
      "offset": [
        1335,
        1420
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2376": {
      "offset": [
        1785,
        1841
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2377": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x98"
    },
    "2379": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2381": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2382": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2384": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2385": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2386": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2387": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2389": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2390": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "2391": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2392": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2396": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2398": {
      "op": "SHL"
    },
    "2399": {
      "op": "SUB"
    },
    "2400": {
      "offset": [
        1785,
        1841
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2401": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "AND",
      "path": "19"
    },
    "2402": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2405": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2407": {
      "op": "SHL"
    },
    "2408": {
      "offset": [
        1785,
        1841
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2409": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "DIV",
      "path": "19"
    },
    "2410": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "2412": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "AND",
      "path": "19"
    },
    "2413": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1785,
        1841
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2414": {
      "fn": "OwnableUpgradeable.owner",
      "jump": "o",
      "offset": [
        1785,
        1841
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2415": {
      "fn": "Vault.allocate",
      "offset": [
        5444,
        6238
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2416": {
      "offset": [
        1558,
        1570
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x977"
    },
    "2419": {
      "offset": [
        1558,
        1568
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12C0"
    },
    "2422": {
      "jump": "i",
      "offset": [
        1558,
        1570
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2423": {
      "fn": "Vault.allocate",
      "offset": [
        1558,
        1570
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2430": {
      "op": "SHL"
    },
    "2431": {
      "op": "SUB"
    },
    "2432": {
      "offset": [
        1547,
        1570
      ],
      "op": "AND",
      "path": "1"
    },
    "2433": {
      "offset": [
        1547,
        1554
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x988"
    },
    "2436": {
      "offset": [
        1547,
        1552
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x939"
    },
    "2439": {
      "jump": "i",
      "offset": [
        1547,
        1554
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2440": {
      "fn": "Vault.allocate",
      "offset": [
        1547,
        1554
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2445": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2447": {
      "op": "SHL"
    },
    "2448": {
      "op": "SUB"
    },
    "2449": {
      "offset": [
        1547,
        1570
      ],
      "op": "AND",
      "path": "1"
    },
    "2450": {
      "fn": "Vault.allocate",
      "offset": [
        1547,
        1570
      ],
      "op": "EQ",
      "path": "1"
    },
    "2451": {
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9D1"
    },
    "2454": {
      "offset": [
        1539,
        1607
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2455": {
      "fn": "Vault.allocate",
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2457": {
      "fn": "Vault.allocate",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2458": {
      "fn": "Vault.allocate",
      "offset": [
        1539,
        1607
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2459": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2465": {
      "op": "SHL"
    },
    "2466": {
      "offset": [
        1539,
        1607
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2467": {
      "fn": "Vault.allocate",
      "offset": [
        1539,
        1607
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2468": {
      "fn": "Vault.allocate",
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2470": {
      "fn": "Vault.allocate",
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2472": {
      "fn": "Vault.allocate",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2473": {
      "fn": "Vault.allocate",
      "offset": [
        1539,
        1607
      ],
      "op": "ADD",
      "path": "1"
    },
    "2474": {
      "fn": "Vault.allocate",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2475": {
      "fn": "Vault.allocate",
      "offset": [
        1539,
        1607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2476": {
      "fn": "Vault.allocate",
      "offset": [
        1539,
        1607
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2477": {
      "fn": "Vault.allocate",
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2479": {
      "fn": "Vault.allocate",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2480": {
      "fn": "Vault.allocate",
      "offset": [
        1539,
        1607
      ],
      "op": "ADD",
      "path": "1"
    },
    "2481": {
      "fn": "Vault.allocate",
      "offset": [
        1539,
        1607
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2482": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2484": {
      "op": "DUP1"
    },
    "2485": {
      "op": "MLOAD"
    },
    "2486": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2488": {
      "op": "PUSH2",
      "value": "0x1F13"
    },
    "2491": {
      "op": "DUP4"
    },
    "2492": {
      "op": "CODECOPY"
    },
    "2493": {
      "op": "DUP2"
    },
    "2494": {
      "op": "MLOAD"
    },
    "2495": {
      "op": "SWAP2"
    },
    "2496": {
      "op": "MSTORE"
    },
    "2497": {
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "2499": {
      "fn": "Vault.allocate",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2500": {
      "fn": "Vault.allocate",
      "offset": [
        1539,
        1607
      ],
      "op": "ADD",
      "path": "1"
    },
    "2501": {
      "fn": "Vault.allocate",
      "offset": [
        1539,
        1607
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2502": {
      "fn": "Vault.allocate",
      "offset": [
        1539,
        1607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2503": {
      "fn": "Vault.allocate",
      "offset": [
        1539,
        1607
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2504": {
      "fn": "Vault.allocate",
      "offset": [
        1539,
        1607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2505": {
      "fn": "Vault.allocate",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2506": {
      "fn": "Vault.allocate",
      "offset": [
        1539,
        1607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2507": {
      "fn": "Vault.allocate",
      "offset": [
        1539,
        1607
      ],
      "op": "SUB",
      "path": "1"
    },
    "2508": {
      "fn": "Vault.allocate",
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "2510": {
      "fn": "Vault.allocate",
      "offset": [
        1539,
        1607
      ],
      "op": "ADD",
      "path": "1"
    },
    "2511": {
      "fn": "Vault.allocate",
      "offset": [
        1539,
        1607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2512": {
      "fn": "Vault.allocate",
      "offset": [
        1539,
        1607
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2513": {
      "fn": "Vault.allocate",
      "offset": [
        1539,
        1607
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2514": {
      "offset": [
        1753,
        1754
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "2516": {
      "offset": [
        2495,
        2502
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x65"
    },
    "2518": {
      "fn": "Vault.allocate",
      "offset": [
        2495,
        2502
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2519": {
      "offset": [
        2495,
        2514
      ],
      "op": "EQ",
      "path": "10"
    },
    "2520": {
      "branch": 86,
      "fn": "Vault.allocate",
      "offset": [
        2495,
        2514
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2521": {
      "offset": [
        2487,
        2550
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA29"
    },
    "2524": {
      "branch": 86,
      "offset": [
        2487,
        2550
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2525": {
      "fn": "Vault.allocate",
      "offset": [
        2487,
        2550
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2527": {
      "fn": "Vault.allocate",
      "offset": [
        2487,
        2550
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2528": {
      "fn": "Vault.allocate",
      "offset": [
        2487,
        2550
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2529": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2533": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2535": {
      "op": "SHL"
    },
    "2536": {
      "offset": [
        2487,
        2550
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2537": {
      "fn": "Vault.allocate",
      "offset": [
        2487,
        2550
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2538": {
      "fn": "Vault.allocate",
      "offset": [
        2487,
        2550
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2540": {
      "fn": "Vault.allocate",
      "offset": [
        2487,
        2550
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2542": {
      "fn": "Vault.allocate",
      "offset": [
        2487,
        2550
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2543": {
      "fn": "Vault.allocate",
      "offset": [
        2487,
        2550
      ],
      "op": "ADD",
      "path": "10"
    },
    "2544": {
      "fn": "Vault.allocate",
      "offset": [
        2487,
        2550
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2545": {
      "fn": "Vault.allocate",
      "offset": [
        2487,
        2550
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "2547": {
      "fn": "Vault.allocate",
      "offset": [
        2487,
        2550
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "2549": {
      "fn": "Vault.allocate",
      "offset": [
        2487,
        2550
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2550": {
      "fn": "Vault.allocate",
      "offset": [
        2487,
        2550
      ],
      "op": "ADD",
      "path": "10"
    },
    "2551": {
      "fn": "Vault.allocate",
      "offset": [
        2487,
        2550
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2552": {
      "fn": "Vault.allocate",
      "offset": [
        2487,
        2550
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "2585": {
      "fn": "Vault.allocate",
      "offset": [
        2487,
        2550
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "2587": {
      "fn": "Vault.allocate",
      "offset": [
        2487,
        2550
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2588": {
      "fn": "Vault.allocate",
      "offset": [
        2487,
        2550
      ],
      "op": "ADD",
      "path": "10"
    },
    "2589": {
      "fn": "Vault.allocate",
      "offset": [
        2487,
        2550
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2590": {
      "fn": "Vault.allocate",
      "offset": [
        2487,
        2550
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2591": {
      "fn": "Vault.allocate",
      "offset": [
        2487,
        2550
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2592": {
      "fn": "Vault.allocate",
      "offset": [
        2487,
        2550
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2593": {
      "fn": "Vault.allocate",
      "offset": [
        2487,
        2550
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2594": {
      "fn": "Vault.allocate",
      "offset": [
        2487,
        2550
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2595": {
      "fn": "Vault.allocate",
      "offset": [
        2487,
        2550
      ],
      "op": "SUB",
      "path": "10"
    },
    "2596": {
      "fn": "Vault.allocate",
      "offset": [
        2487,
        2550
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "2598": {
      "fn": "Vault.allocate",
      "offset": [
        2487,
        2550
      ],
      "op": "ADD",
      "path": "10"
    },
    "2599": {
      "fn": "Vault.allocate",
      "offset": [
        2487,
        2550
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2600": {
      "fn": "Vault.allocate",
      "offset": [
        2487,
        2550
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2601": {
      "fn": "Vault.allocate",
      "offset": [
        2487,
        2550
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2602": {
      "offset": [
        1753,
        1754
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "2604": {
      "offset": [
        2625,
        2632
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x65"
    },
    "2606": {
      "offset": [
        2625,
        2643
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2607": {
      "fn": "Vault.allocate",
      "offset": [
        5500,
        5518
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2609": {
      "fn": "Vault.allocate",
      "offset": [
        5522,
        5556
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA38"
    },
    "2612": {
      "fn": "Vault.allocate",
      "offset": [
        5522,
        5556
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E57"
    },
    "2615": {
      "fn": "Vault.allocate",
      "jump": "i",
      "offset": [
        5522,
        5556
      ],
      "op": "JUMP",
      "path": "19"
    },
    "2616": {
      "fn": "Vault.allocate",
      "offset": [
        5522,
        5556
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2617": {
      "fn": "Vault.allocate",
      "offset": [
        5565,
        5571
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2619": {
      "fn": "Vault.allocate",
      "offset": [
        5560,
        6235
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2620": {
      "fn": "Vault.allocate",
      "offset": [
        5581,
        5598
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x99"
    },
    "2622": {
      "fn": "Vault.allocate",
      "offset": [
        5581,
        5605
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2623": {
      "fn": "Vault.allocate",
      "offset": [
        5577,
        5605
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2624": {
      "fn": "Vault.allocate",
      "offset": [
        5577,
        5605
      ],
      "op": "LT",
      "path": "19"
    },
    "2625": {
      "fn": "Vault.allocate",
      "offset": [
        5560,
        6235
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2626": {
      "fn": "Vault.allocate",
      "offset": [
        5560,
        6235
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6D8"
    },
    "2629": {
      "fn": "Vault.allocate",
      "offset": [
        5560,
        6235
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2630": {
      "fn": "Vault.allocate",
      "offset": [
        5630,
        5645
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 20,
      "value": "0x97"
    },
    "2632": {
      "fn": "Vault.allocate",
      "offset": [
        5630,
        5667
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2634": {
      "fn": "Vault.allocate",
      "offset": [
        5646,
        5663
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x99"
    },
    "2636": {
      "fn": "Vault.allocate",
      "offset": [
        5664,
        5665
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2637": {
      "fn": "Vault.allocate",
      "offset": [
        5646,
        5666
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2638": {
      "fn": "Vault.allocate",
      "offset": [
        5646,
        5666
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2639": {
      "fn": "Vault.allocate",
      "offset": [
        5646,
        5666
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2640": {
      "fn": "Vault.allocate",
      "offset": [
        5646,
        5666
      ],
      "op": "LT",
      "path": "19"
    },
    "2641": {
      "fn": "Vault.allocate",
      "offset": [
        5646,
        5666
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA56"
    },
    "2644": {
      "fn": "Vault.allocate",
      "offset": [
        5646,
        5666
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2645": {
      "dev": "Index out of range",
      "fn": "Vault.allocate",
      "offset": [
        5646,
        5666
      ],
      "op": "INVALID",
      "path": "19"
    },
    "2646": {
      "fn": "Vault.allocate",
      "offset": [
        5646,
        5666
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2647": {
      "fn": "Vault.allocate",
      "offset": [
        5646,
        5666
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2649": {
      "fn": "Vault.allocate",
      "offset": [
        5646,
        5666
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2650": {
      "fn": "Vault.allocate",
      "offset": [
        5646,
        5666
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2651": {
      "fn": "Vault.allocate",
      "offset": [
        5646,
        5666
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2652": {
      "fn": "Vault.allocate",
      "offset": [
        5646,
        5666
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2654": {
      "fn": "Vault.allocate",
      "offset": [
        5646,
        5666
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2655": {
      "fn": "Vault.allocate",
      "offset": [
        5646,
        5666
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2656": {
      "fn": "Vault.allocate",
      "offset": [
        5646,
        5666
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "2657": {
      "fn": "Vault.allocate",
      "offset": [
        5646,
        5666
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2658": {
      "fn": "Vault.allocate",
      "offset": [
        5646,
        5666
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2659": {
      "fn": "Vault.allocate",
      "offset": [
        5646,
        5666
      ],
      "op": "ADD",
      "path": "19"
    },
    "2660": {
      "fn": "Vault.allocate",
      "offset": [
        5646,
        5666
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2667": {
      "op": "SHL"
    },
    "2668": {
      "op": "SUB"
    },
    "2669": {
      "fn": "Vault.allocate",
      "offset": [
        5646,
        5666
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2670": {
      "fn": "Vault.allocate",
      "offset": [
        5646,
        5666
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2671": {
      "fn": "Vault.allocate",
      "offset": [
        5646,
        5666
      ],
      "op": "AND",
      "path": "19"
    },
    "2672": {
      "fn": "Vault.allocate",
      "offset": [
        5630,
        5667
      ],
      "op": "DUP5",
      "path": "19"
    },
    "2673": {
      "fn": "Vault.allocate",
      "offset": [
        5630,
        5667
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2674": {
      "fn": "Vault.allocate",
      "offset": [
        5630,
        5667
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2675": {
      "fn": "Vault.allocate",
      "offset": [
        5630,
        5667
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2676": {
      "fn": "Vault.allocate",
      "offset": [
        5630,
        5667
      ],
      "op": "ADD",
      "path": "19"
    },
    "2677": {
      "fn": "Vault.allocate",
      "offset": [
        5630,
        5667
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "2678": {
      "fn": "Vault.allocate",
      "offset": [
        5630,
        5667
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2679": {
      "fn": "Vault.allocate",
      "offset": [
        5630,
        5667
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "2680": {
      "fn": "Vault.allocate",
      "offset": [
        5630,
        5667
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2681": {
      "fn": "Vault.allocate",
      "offset": [
        5630,
        5667
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2683": {
      "fn": "Vault.allocate",
      "offset": [
        5630,
        5667
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2684": {
      "fn": "Vault.allocate",
      "offset": [
        5630,
        5667
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2685": {
      "fn": "Vault.allocate",
      "offset": [
        5630,
        5667
      ],
      "op": "ADD",
      "path": "19"
    },
    "2686": {
      "fn": "Vault.allocate",
      "offset": [
        5630,
        5667
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2687": {
      "fn": "Vault.allocate",
      "offset": [
        5630,
        5667
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2688": {
      "fn": "Vault.allocate",
      "offset": [
        5630,
        5667
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "2689": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2690": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2691": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "2693": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2694": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "ADD",
      "path": "19"
    },
    "2695": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "DUP5",
      "path": "19"
    },
    "2696": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2697": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2698": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2699": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2700": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "DUP7",
      "path": "19"
    },
    "2701": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "AND",
      "path": "19"
    },
    "2702": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2703": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2704": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "2706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2708": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2710": {
      "op": "SHL"
    },
    "2711": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2712": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2713": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "DIV",
      "path": "19"
    },
    "2714": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "AND",
      "path": "19"
    },
    "2715": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2716": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2717": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2718": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2719": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "ADD",
      "path": "19"
    },
    "2720": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2721": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2722": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2723": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2724": {
      "fn": "Vault.allocate",
      "offset": [
        5646,
        5666
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "2726": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "ADD",
      "path": "19"
    },
    "2727": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "2728": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2729": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2730": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "AND",
      "path": "19"
    },
    "2731": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2732": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2733": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "ADD",
      "path": "19"
    },
    "2734": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2735": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2736": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2737": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2738": {
      "fn": "Vault.allocate",
      "offset": [
        5617,
        5667
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2739": {
      "op": "POP"
    },
    "2740": {
      "branch": 70,
      "fn": "Vault.allocate",
      "offset": [
        5676,
        5720
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2741": {
      "fn": "Vault.allocate",
      "offset": [
        5672,
        6230
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xCA1"
    },
    "2744": {
      "branch": 70,
      "fn": "Vault.allocate",
      "offset": [
        5672,
        6230
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2745": {
      "fn": "Vault.allocate",
      "offset": [
        5749,
        5759
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 21
    },
    "2746": {
      "fn": "Vault.allocate",
      "offset": [
        5749,
        5779
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2748": {
      "fn": "Vault.allocate",
      "offset": [
        5749,
        5779
      ],
      "op": "ADD",
      "path": "19"
    },
    "2749": {
      "fn": "Vault.allocate",
      "offset": [
        5749,
        5779
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2750": {
      "fn": "Vault.allocate",
      "offset": [
        5728,
        5780
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2751": {
      "fn": "Vault.allocate",
      "offset": [
        5728,
        5780
      ],
      "op": "POP",
      "path": "19"
    },
    "2752": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5803
      ],
      "op": "DUP3",
      "path": "19",
      "statement": 22
    },
    "2753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2757": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2759": {
      "op": "SHL"
    },
    "2760": {
      "op": "SUB"
    },
    "2761": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5822
      ],
      "op": "AND",
      "path": "19"
    },
    "2762": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5822
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA400326F"
    },
    "2767": {
      "fn": "Vault.allocate",
      "offset": [
        5823,
        5833
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2768": {
      "fn": "Vault.allocate",
      "offset": [
        5823,
        5848
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2770": {
      "fn": "Vault.allocate",
      "offset": [
        5823,
        5848
      ],
      "op": "ADD",
      "path": "19"
    },
    "2771": {
      "fn": "Vault.allocate",
      "offset": [
        5823,
        5848
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2772": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2774": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2775": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2776": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "2781": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "AND",
      "path": "19"
    },
    "2782": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "2784": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "SHL",
      "path": "19"
    },
    "2785": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2786": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2787": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2789": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "ADD",
      "path": "19"
    },
    "2790": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2791": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2798": {
      "op": "SHL"
    },
    "2799": {
      "op": "SUB"
    },
    "2800": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "AND",
      "path": "19"
    },
    "2801": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2802": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2803": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2805": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "ADD",
      "path": "19"
    },
    "2806": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2807": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "POP",
      "path": "19"
    },
    "2808": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "POP",
      "path": "19"
    },
    "2809": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2811": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2813": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2814": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2815": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2816": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "SUB",
      "path": "19"
    },
    "2817": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2818": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "DUP7",
      "path": "19"
    },
    "2819": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2820": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "2821": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2822": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2823": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2824": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB10"
    },
    "2827": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2828": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2830": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2831": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2832": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2833": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "POP",
      "path": "19"
    },
    "2834": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "GAS",
      "path": "19"
    },
    "2835": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "2836": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2837": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2838": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2839": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB24"
    },
    "2842": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2843": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "2844": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2846": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2847": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "2848": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "2849": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2851": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2852": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2853": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "POP",
      "path": "19"
    },
    "2854": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "POP",
      "path": "19"
    },
    "2855": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "POP",
      "path": "19"
    },
    "2856": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "POP",
      "path": "19"
    },
    "2857": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2859": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2860": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "2861": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2863": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2864": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "LT",
      "path": "19"
    },
    "2865": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2866": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB3A"
    },
    "2869": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2870": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2872": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2873": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2874": {
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2875": {
      "op": "POP"
    },
    "2876": {
      "branch": 71,
      "fn": "Vault.allocate",
      "offset": [
        5795,
        5849
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2877": {
      "fn": "Vault.allocate",
      "offset": [
        5787,
        5850
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB45"
    },
    "2880": {
      "branch": 71,
      "fn": "Vault.allocate",
      "offset": [
        5787,
        5850
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2881": {
      "fn": "Vault.allocate",
      "offset": [
        5787,
        5850
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2883": {
      "fn": "Vault.allocate",
      "offset": [
        5787,
        5850
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2884": {
      "fn": "Vault.allocate",
      "offset": [
        5787,
        5850
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2885": {
      "fn": "Vault.allocate",
      "offset": [
        5787,
        5850
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2886": {
      "fn": "Vault.allocate",
      "offset": [
        5895,
        5920
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2887": {
      "fn": "Vault.allocate",
      "offset": [
        5895,
        5920
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2888": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2890": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2891": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2892": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2897": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2899": {
      "op": "SHL"
    },
    "2900": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2901": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2902": {
      "fn": "Vault.allocate",
      "offset": [
        5940,
        5944
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "2903": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "2905": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2906": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "ADD",
      "path": "19"
    },
    "2907": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "2908": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2909": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2910": {
      "fn": "Vault.allocate",
      "offset": [
        5856,
        5874
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2912": {
      "fn": "Vault.allocate",
      "offset": [
        5856,
        5874
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2917": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2919": {
      "op": "SHL"
    },
    "2920": {
      "op": "SUB"
    },
    "2921": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5931
      ],
      "op": "AND",
      "path": "19"
    },
    "2922": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5931
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2923": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5931
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "2928": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5931
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2929": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "2931": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2932": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "DUP4",
      "path": "19"
    },
    "2933": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "ADD",
      "path": "19"
    },
    "2934": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2935": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2937": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "2938": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "2939": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2940": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "DUP3",
      "path": "19"
    },
    "2941": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "2942": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "SUB",
      "path": "19"
    },
    "2943": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "ADD",
      "path": "19"
    },
    "2944": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2945": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5931
      ],
      "op": "DUP7",
      "path": "19"
    },
    "2946": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2947": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "2948": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2949": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2950": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2951": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB8F"
    },
    "2954": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2955": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2957": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2958": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2959": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2960": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "POP",
      "path": "19"
    },
    "2961": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "GAS",
      "path": "19"
    },
    "2962": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "2963": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2964": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2965": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2966": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xBA3"
    },
    "2969": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2970": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "2971": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2973": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "DUP1",
      "path": "19"
    },
    "2974": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "2975": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "2976": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2978": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "REVERT",
      "path": "19"
    },
    "2979": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "2980": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "POP",
      "path": "19"
    },
    "2981": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "POP",
      "path": "19"
    },
    "2982": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "POP",
      "path": "19"
    },
    "2983": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "POP",
      "path": "19"
    },
    "2984": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "2986": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "2987": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "2988": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "2990": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "DUP2",
      "path": "19"
    },
    "2991": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "LT",
      "path": "19"
    },
    "2992": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "2993": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xBB9"
    },
    "2996": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "2997": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "2999": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3000": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "REVERT",
      "path": "19"
    },
    "3001": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3002": {
      "op": "POP"
    },
    "3003": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3004": {
      "fn": "Vault.allocate",
      "offset": [
        6010,
        6040
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 23,
      "value": "0x40"
    },
    "3006": {
      "fn": "Vault.allocate",
      "offset": [
        6010,
        6040
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3007": {
      "fn": "Vault.allocate",
      "offset": [
        6010,
        6040
      ],
      "op": "ADD",
      "path": "19"
    },
    "3008": {
      "fn": "Vault.allocate",
      "offset": [
        6010,
        6040
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3009": {
      "fn": "Vault.allocate",
      "offset": [
        5970,
        5995
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3010": {
      "fn": "Vault.allocate",
      "offset": [
        5970,
        5995
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3011": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3012": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3013": {
      "op": "POP"
    },
    "3014": {
      "fn": "Vault.allocate",
      "offset": [
        5952,
        6056
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xBD9"
    },
    "3017": {
      "fn": "Vault.allocate",
      "offset": [
        5952,
        6056
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3024": {
      "op": "SHL"
    },
    "3025": {
      "op": "SUB"
    },
    "3026": {
      "fn": "Vault.allocate",
      "offset": [
        5952,
        6009
      ],
      "op": "AND",
      "path": "19"
    },
    "3027": {
      "fn": "Vault.allocate",
      "offset": [
        5952,
        6009
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3028": {
      "fn": "Vault.allocate",
      "offset": [
        5877,
        5946
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3029": {
      "fn": "Vault.allocate",
      "offset": [
        5952,
        6009
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x17D9"
    },
    "3032": {
      "fn": "Vault.allocate",
      "jump": "i",
      "offset": [
        5952,
        6056
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3033": {
      "fn": "Vault.allocate",
      "offset": [
        5952,
        6056
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3034": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6070
      ],
      "op": "DUP4",
      "path": "19",
      "statement": 24
    },
    "3035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3039": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3041": {
      "op": "SHL"
    },
    "3042": {
      "op": "SUB"
    },
    "3043": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6078
      ],
      "op": "AND",
      "path": "19"
    },
    "3044": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6078
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x47E7EF24"
    },
    "3049": {
      "fn": "Vault.allocate",
      "offset": [
        6079,
        6089
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3050": {
      "fn": "Vault.allocate",
      "offset": [
        6079,
        6104
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3052": {
      "fn": "Vault.allocate",
      "offset": [
        6079,
        6104
      ],
      "op": "ADD",
      "path": "19"
    },
    "3053": {
      "fn": "Vault.allocate",
      "offset": [
        6079,
        6104
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3054": {
      "fn": "Vault.allocate",
      "offset": [
        6106,
        6119
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3055": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3057": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3058": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3059": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "3064": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "AND",
      "path": "19"
    },
    "3065": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "3067": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "SHL",
      "path": "19"
    },
    "3068": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3069": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3070": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3072": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "ADD",
      "path": "19"
    },
    "3073": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3074": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3079": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3081": {
      "op": "SHL"
    },
    "3082": {
      "op": "SUB"
    },
    "3083": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "AND",
      "path": "19"
    },
    "3084": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3085": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3086": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3088": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "ADD",
      "path": "19"
    },
    "3089": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3090": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3091": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3092": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3094": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "ADD",
      "path": "19"
    },
    "3095": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3096": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "POP",
      "path": "19"
    },
    "3097": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "POP",
      "path": "19"
    },
    "3098": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "POP",
      "path": "19"
    },
    "3099": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3101": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3103": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3104": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3105": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3106": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "SUB",
      "path": "19"
    },
    "3107": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3108": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3110": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "DUP8",
      "path": "19"
    },
    "3111": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3112": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "3113": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3114": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3115": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3116": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC34"
    },
    "3119": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3120": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3122": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3123": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "REVERT",
      "path": "19"
    },
    "3124": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3125": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "POP",
      "path": "19"
    },
    "3126": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "GAS",
      "path": "19"
    },
    "3127": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "CALL",
      "path": "19"
    },
    "3128": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3129": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3130": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3131": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xC48"
    },
    "3134": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3135": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3136": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3138": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3139": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "3140": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3141": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3143": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "REVERT",
      "path": "19"
    },
    "3144": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3145": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "POP",
      "path": "19"
    },
    "3146": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "POP",
      "path": "19"
    },
    "3147": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "POP",
      "path": "19"
    },
    "3148": {
      "fn": "Vault.allocate",
      "offset": [
        6062,
        6120
      ],
      "op": "POP",
      "path": "19"
    },
    "3149": {
      "fn": "Vault.allocate",
      "offset": [
        6178,
        6188
      ],
      "op": "DUP3",
      "path": "19",
      "statement": 25
    },
    "3150": {
      "fn": "Vault.allocate",
      "offset": [
        6178,
        6208
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3152": {
      "fn": "Vault.allocate",
      "offset": [
        6178,
        6208
      ],
      "op": "ADD",
      "path": "19"
    },
    "3153": {
      "fn": "Vault.allocate",
      "offset": [
        6178,
        6208
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3158": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3160": {
      "op": "SHL"
    },
    "3161": {
      "op": "SUB"
    },
    "3162": {
      "fn": "Vault.allocate",
      "offset": [
        6131,
        6224
      ],
      "op": "AND",
      "path": "19"
    },
    "3163": {
      "fn": "Vault.allocate",
      "offset": [
        6151,
        6161
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3164": {
      "fn": "Vault.allocate",
      "offset": [
        6151,
        6176
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3166": {
      "fn": "Vault.allocate",
      "offset": [
        6151,
        6176
      ],
      "op": "ADD",
      "path": "19"
    },
    "3167": {
      "fn": "Vault.allocate",
      "offset": [
        6151,
        6176
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3174": {
      "op": "SHL"
    },
    "3175": {
      "op": "SUB"
    },
    "3176": {
      "fn": "Vault.allocate",
      "offset": [
        6131,
        6224
      ],
      "op": "AND",
      "path": "19"
    },
    "3177": {
      "fn": "Vault.allocate",
      "offset": [
        6131,
        6224
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0x290D3382F5CB307945388C5A4AB3A9E3695C8706927C11C35EB329620A310961"
    },
    "3210": {
      "fn": "Vault.allocate",
      "offset": [
        6210,
        6223
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3211": {
      "fn": "Vault.allocate",
      "offset": [
        6131,
        6224
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3213": {
      "fn": "Vault.allocate",
      "offset": [
        6131,
        6224
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3214": {
      "fn": "Vault.allocate",
      "offset": [
        6131,
        6224
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3215": {
      "fn": "Vault.allocate",
      "offset": [
        6131,
        6224
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3216": {
      "fn": "Vault.allocate",
      "offset": [
        6131,
        6224
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3217": {
      "fn": "Vault.allocate",
      "offset": [
        6131,
        6224
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3218": {
      "fn": "Vault.allocate",
      "offset": [
        6131,
        6224
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3220": {
      "fn": "Vault.allocate",
      "offset": [
        6131,
        6224
      ],
      "op": "ADD",
      "path": "19"
    },
    "3221": {
      "fn": "Vault.allocate",
      "offset": [
        6131,
        6224
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3222": {
      "fn": "Vault.allocate",
      "offset": [
        6131,
        6224
      ],
      "op": "POP",
      "path": "19"
    },
    "3223": {
      "fn": "Vault.allocate",
      "offset": [
        6131,
        6224
      ],
      "op": "POP",
      "path": "19"
    },
    "3224": {
      "fn": "Vault.allocate",
      "offset": [
        6131,
        6224
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3226": {
      "fn": "Vault.allocate",
      "offset": [
        6131,
        6224
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3227": {
      "fn": "Vault.allocate",
      "offset": [
        6131,
        6224
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3228": {
      "fn": "Vault.allocate",
      "offset": [
        6131,
        6224
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3229": {
      "fn": "Vault.allocate",
      "offset": [
        6131,
        6224
      ],
      "op": "SUB",
      "path": "19"
    },
    "3230": {
      "fn": "Vault.allocate",
      "offset": [
        6131,
        6224
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3231": {
      "fn": "Vault.allocate",
      "offset": [
        6131,
        6224
      ],
      "op": "LOG3",
      "path": "19"
    },
    "3232": {
      "fn": "Vault.allocate",
      "offset": [
        5672,
        6230
      ],
      "op": "POP",
      "path": "19"
    },
    "3233": {
      "fn": "Vault.allocate",
      "offset": [
        5672,
        6230
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3234": {
      "fn": "Vault.allocate",
      "offset": [
        5607,
        5610
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 26,
      "value": "0x1"
    },
    "3236": {
      "fn": "Vault.allocate",
      "offset": [
        5607,
        5610
      ],
      "op": "ADD",
      "path": "19"
    },
    "3237": {
      "fn": "Vault.allocate",
      "offset": [
        5560,
        6235
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xA3B"
    },
    "3240": {
      "fn": "Vault.allocate",
      "offset": [
        5560,
        6235
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3241": {
      "offset": [
        1845,
        1879
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3242": {
      "fn": "Vault.allocate",
      "offset": [
        1845,
        1879
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x99"
    },
    "3244": {
      "fn": "Vault.allocate",
      "offset": [
        1845,
        1879
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3245": {
      "fn": "Vault.allocate",
      "offset": [
        1845,
        1879
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3246": {
      "fn": "Vault.allocate",
      "offset": [
        1845,
        1879
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3247": {
      "fn": "Vault.allocate",
      "offset": [
        1845,
        1879
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3248": {
      "fn": "Vault.allocate",
      "offset": [
        1845,
        1879
      ],
      "op": "LT",
      "path": "19"
    },
    "3249": {
      "fn": "Vault.allocate",
      "offset": [
        1845,
        1879
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x79B"
    },
    "3252": {
      "fn": "Vault.allocate",
      "offset": [
        1845,
        1879
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3253": {
      "fn": "Vault.allocate",
      "offset": [
        1845,
        1879
      ],
      "op": "INVALID",
      "path": "19"
    },
    "3254": {
      "fn": "Vault.addCollateral",
      "offset": [
        2439,
        3098
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3255": {
      "offset": [
        1558,
        1570
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCBE"
    },
    "3258": {
      "offset": [
        1558,
        1568
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12C0"
    },
    "3261": {
      "jump": "i",
      "offset": [
        1558,
        1570
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3262": {
      "fn": "Vault.addCollateral",
      "offset": [
        1558,
        1570
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3267": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3269": {
      "op": "SHL"
    },
    "3270": {
      "op": "SUB"
    },
    "3271": {
      "offset": [
        1547,
        1570
      ],
      "op": "AND",
      "path": "1"
    },
    "3272": {
      "offset": [
        1547,
        1554
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCCF"
    },
    "3275": {
      "offset": [
        1547,
        1552
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x939"
    },
    "3278": {
      "jump": "i",
      "offset": [
        1547,
        1554
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3279": {
      "fn": "Vault.addCollateral",
      "offset": [
        1547,
        1554
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3284": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3286": {
      "op": "SHL"
    },
    "3287": {
      "op": "SUB"
    },
    "3288": {
      "offset": [
        1547,
        1570
      ],
      "op": "AND",
      "path": "1"
    },
    "3289": {
      "fn": "Vault.addCollateral",
      "offset": [
        1547,
        1570
      ],
      "op": "EQ",
      "path": "1"
    },
    "3290": {
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD18"
    },
    "3293": {
      "offset": [
        1539,
        1607
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3294": {
      "fn": "Vault.addCollateral",
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3296": {
      "fn": "Vault.addCollateral",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3297": {
      "fn": "Vault.addCollateral",
      "offset": [
        1539,
        1607
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3298": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3302": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3304": {
      "op": "SHL"
    },
    "3305": {
      "offset": [
        1539,
        1607
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3306": {
      "fn": "Vault.addCollateral",
      "offset": [
        1539,
        1607
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3307": {
      "fn": "Vault.addCollateral",
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3309": {
      "fn": "Vault.addCollateral",
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3311": {
      "fn": "Vault.addCollateral",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3312": {
      "fn": "Vault.addCollateral",
      "offset": [
        1539,
        1607
      ],
      "op": "ADD",
      "path": "1"
    },
    "3313": {
      "fn": "Vault.addCollateral",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3314": {
      "fn": "Vault.addCollateral",
      "offset": [
        1539,
        1607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3315": {
      "fn": "Vault.addCollateral",
      "offset": [
        1539,
        1607
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3316": {
      "fn": "Vault.addCollateral",
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "3318": {
      "fn": "Vault.addCollateral",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3319": {
      "fn": "Vault.addCollateral",
      "offset": [
        1539,
        1607
      ],
      "op": "ADD",
      "path": "1"
    },
    "3320": {
      "fn": "Vault.addCollateral",
      "offset": [
        1539,
        1607
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3321": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3323": {
      "op": "DUP1"
    },
    "3324": {
      "op": "MLOAD"
    },
    "3325": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3327": {
      "op": "PUSH2",
      "value": "0x1F13"
    },
    "3330": {
      "op": "DUP4"
    },
    "3331": {
      "op": "CODECOPY"
    },
    "3332": {
      "op": "DUP2"
    },
    "3333": {
      "op": "MLOAD"
    },
    "3334": {
      "op": "SWAP2"
    },
    "3335": {
      "op": "MSTORE"
    },
    "3336": {
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "3338": {
      "fn": "Vault.addCollateral",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3339": {
      "fn": "Vault.addCollateral",
      "offset": [
        1539,
        1607
      ],
      "op": "ADD",
      "path": "1"
    },
    "3340": {
      "fn": "Vault.addCollateral",
      "offset": [
        1539,
        1607
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3341": {
      "fn": "Vault.addCollateral",
      "offset": [
        1539,
        1607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3342": {
      "fn": "Vault.addCollateral",
      "offset": [
        1539,
        1607
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3343": {
      "fn": "Vault.addCollateral",
      "offset": [
        1539,
        1607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3344": {
      "fn": "Vault.addCollateral",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3345": {
      "fn": "Vault.addCollateral",
      "offset": [
        1539,
        1607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3346": {
      "fn": "Vault.addCollateral",
      "offset": [
        1539,
        1607
      ],
      "op": "SUB",
      "path": "1"
    },
    "3347": {
      "fn": "Vault.addCollateral",
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "3349": {
      "fn": "Vault.addCollateral",
      "offset": [
        1539,
        1607
      ],
      "op": "ADD",
      "path": "1"
    },
    "3350": {
      "fn": "Vault.addCollateral",
      "offset": [
        1539,
        1607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3351": {
      "fn": "Vault.addCollateral",
      "offset": [
        1539,
        1607
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3352": {
      "fn": "Vault.addCollateral",
      "offset": [
        1539,
        1607
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3357": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3359": {
      "op": "SHL"
    },
    "3360": {
      "op": "SUB"
    },
    "3361": {
      "fn": "Vault.addCollateral",
      "offset": [
        2549,
        2581
      ],
      "op": "DUP3",
      "path": "19",
      "statement": 27
    },
    "3362": {
      "fn": "Vault.addCollateral",
      "offset": [
        2549,
        2581
      ],
      "op": "AND",
      "path": "19"
    },
    "3363": {
      "fn": "Vault.addCollateral",
      "offset": [
        2549,
        2581
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3365": {
      "fn": "Vault.addCollateral",
      "offset": [
        2549,
        2581
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3366": {
      "fn": "Vault.addCollateral",
      "offset": [
        2549,
        2581
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3367": {
      "fn": "Vault.addCollateral",
      "offset": [
        2549,
        2581
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3368": {
      "fn": "Vault.addCollateral",
      "offset": [
        2549,
        2564
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x97"
    },
    "3370": {
      "fn": "Vault.addCollateral",
      "offset": [
        2549,
        2581
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3372": {
      "fn": "Vault.addCollateral",
      "offset": [
        2549,
        2581
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3373": {
      "fn": "Vault.addCollateral",
      "offset": [
        2549,
        2581
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3375": {
      "fn": "Vault.addCollateral",
      "offset": [
        2549,
        2581
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3376": {
      "fn": "Vault.addCollateral",
      "offset": [
        2549,
        2581
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3377": {
      "fn": "Vault.addCollateral",
      "offset": [
        2549,
        2587
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3380": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3382": {
      "op": "SHL"
    },
    "3383": {
      "fn": "Vault.addCollateral",
      "offset": [
        2549,
        2587
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3384": {
      "fn": "Vault.addCollateral",
      "offset": [
        2549,
        2587
      ],
      "op": "DIV",
      "path": "19"
    },
    "3385": {
      "fn": "Vault.addCollateral",
      "offset": [
        2549,
        2587
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "3387": {
      "fn": "Vault.addCollateral",
      "offset": [
        2549,
        2587
      ],
      "op": "AND",
      "path": "19"
    },
    "3388": {
      "branch": 72,
      "fn": "Vault.addCollateral",
      "offset": [
        2548,
        2587
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3389": {
      "fn": "Vault.addCollateral",
      "offset": [
        2540,
        2608
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD80"
    },
    "3392": {
      "branch": 72,
      "fn": "Vault.addCollateral",
      "offset": [
        2540,
        2608
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3393": {
      "fn": "Vault.addCollateral",
      "offset": [
        2540,
        2608
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3395": {
      "fn": "Vault.addCollateral",
      "offset": [
        2540,
        2608
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3396": {
      "fn": "Vault.addCollateral",
      "offset": [
        2540,
        2608
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3397": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3401": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3403": {
      "op": "SHL"
    },
    "3404": {
      "fn": "Vault.addCollateral",
      "offset": [
        2540,
        2608
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3405": {
      "fn": "Vault.addCollateral",
      "offset": [
        2540,
        2608
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3406": {
      "fn": "Vault.addCollateral",
      "offset": [
        2540,
        2608
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3408": {
      "fn": "Vault.addCollateral",
      "offset": [
        2540,
        2608
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3410": {
      "fn": "Vault.addCollateral",
      "offset": [
        2540,
        2608
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3411": {
      "fn": "Vault.addCollateral",
      "offset": [
        2540,
        2608
      ],
      "op": "ADD",
      "path": "19"
    },
    "3412": {
      "fn": "Vault.addCollateral",
      "offset": [
        2540,
        2608
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3413": {
      "fn": "Vault.addCollateral",
      "offset": [
        2540,
        2608
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x10"
    },
    "3415": {
      "fn": "Vault.addCollateral",
      "offset": [
        2540,
        2608
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "3417": {
      "fn": "Vault.addCollateral",
      "offset": [
        2540,
        2608
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3418": {
      "fn": "Vault.addCollateral",
      "offset": [
        2540,
        2608
      ],
      "op": "ADD",
      "path": "19"
    },
    "3419": {
      "fn": "Vault.addCollateral",
      "offset": [
        2540,
        2608
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3420": {
      "op": "PUSH16",
      "value": "0x10DBDB1B185D195C985B081859191959"
    },
    "3437": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "3439": {
      "op": "SHL"
    },
    "3440": {
      "fn": "Vault.addCollateral",
      "offset": [
        2540,
        2608
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "3442": {
      "fn": "Vault.addCollateral",
      "offset": [
        2540,
        2608
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3443": {
      "fn": "Vault.addCollateral",
      "offset": [
        2540,
        2608
      ],
      "op": "ADD",
      "path": "19"
    },
    "3444": {
      "fn": "Vault.addCollateral",
      "offset": [
        2540,
        2608
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3445": {
      "fn": "Vault.addCollateral",
      "offset": [
        2540,
        2608
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3446": {
      "fn": "Vault.addCollateral",
      "offset": [
        2540,
        2608
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3447": {
      "fn": "Vault.addCollateral",
      "offset": [
        2540,
        2608
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3448": {
      "fn": "Vault.addCollateral",
      "offset": [
        2540,
        2608
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3449": {
      "fn": "Vault.addCollateral",
      "offset": [
        2540,
        2608
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3450": {
      "fn": "Vault.addCollateral",
      "offset": [
        2540,
        2608
      ],
      "op": "SUB",
      "path": "19"
    },
    "3451": {
      "fn": "Vault.addCollateral",
      "offset": [
        2540,
        2608
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "3453": {
      "fn": "Vault.addCollateral",
      "offset": [
        2540,
        2608
      ],
      "op": "ADD",
      "path": "19"
    },
    "3454": {
      "fn": "Vault.addCollateral",
      "offset": [
        2540,
        2608
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3455": {
      "fn": "Vault.addCollateral",
      "offset": [
        2540,
        2608
      ],
      "op": "REVERT",
      "path": "19"
    },
    "3456": {
      "fn": "Vault.addCollateral",
      "offset": [
        2540,
        2608
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3457": {
      "fn": "Vault.addCollateral",
      "offset": [
        2668,
        2670
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 28,
      "value": "0x12"
    },
    "3459": {
      "fn": "Vault.addCollateral",
      "offset": [
        2637,
        2652
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3464": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3466": {
      "op": "SHL"
    },
    "3467": {
      "op": "SUB"
    },
    "3468": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2662
      ],
      "op": "AND",
      "path": "19"
    },
    "3469": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2662
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x313CE567"
    },
    "3474": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3476": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3477": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3478": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "3483": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "AND",
      "path": "19"
    },
    "3484": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "3486": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "SHL",
      "path": "19"
    },
    "3487": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3488": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3489": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3491": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "ADD",
      "path": "19"
    },
    "3492": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3494": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3496": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3497": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3498": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3499": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "SUB",
      "path": "19"
    },
    "3500": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3501": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "DUP7",
      "path": "19"
    },
    "3502": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3503": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "3504": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3505": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3506": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3507": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDBB"
    },
    "3510": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3511": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3513": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3514": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "REVERT",
      "path": "19"
    },
    "3515": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3516": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "POP",
      "path": "19"
    },
    "3517": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "GAS",
      "path": "19"
    },
    "3518": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "3519": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3520": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3521": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3522": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDCF"
    },
    "3525": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3526": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3527": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3529": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3530": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "3531": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3532": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3534": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "REVERT",
      "path": "19"
    },
    "3535": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3536": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "POP",
      "path": "19"
    },
    "3537": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "POP",
      "path": "19"
    },
    "3538": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "POP",
      "path": "19"
    },
    "3539": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "POP",
      "path": "19"
    },
    "3540": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3542": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3543": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "3544": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3546": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3547": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "LT",
      "path": "19"
    },
    "3548": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3549": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDE5"
    },
    "3552": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3553": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3555": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3556": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "REVERT",
      "path": "19"
    },
    "3557": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3558": {
      "op": "POP"
    },
    "3559": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2664
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3560": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2670
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "3562": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2670
      ],
      "op": "AND",
      "path": "19"
    },
    "3563": {
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2670
      ],
      "op": "GT",
      "path": "19"
    },
    "3564": {
      "branch": 73,
      "fn": "Vault.addCollateral",
      "offset": [
        2620,
        2670
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3565": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE27"
    },
    "3568": {
      "branch": 73,
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3569": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3571": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3572": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3576": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3578": {
      "op": "SHL"
    },
    "3579": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3580": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3581": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3583": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "ADD",
      "path": "19"
    },
    "3584": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3585": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3586": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3588": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "ADD",
      "path": "19"
    },
    "3589": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3590": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3591": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "SUB",
      "path": "19"
    },
    "3592": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3593": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3594": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2C"
    },
    "3596": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3597": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3598": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3600": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "ADD",
      "path": "19"
    },
    "3601": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3602": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1F33"
    },
    "3605": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x2C"
    },
    "3607": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3608": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "CODECOPY",
      "path": "19"
    },
    "3609": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3611": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "ADD",
      "path": "19"
    },
    "3612": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3613": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "POP",
      "path": "19"
    },
    "3614": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "POP",
      "path": "19"
    },
    "3615": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3617": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3618": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3619": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3620": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "SUB",
      "path": "19"
    },
    "3621": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3622": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "REVERT",
      "path": "19"
    },
    "3623": {
      "fn": "Vault.addCollateral",
      "offset": [
        2612,
        2719
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3628": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3630": {
      "op": "SHL"
    },
    "3631": {
      "op": "SUB"
    },
    "3632": {
      "fn": "Vault.addCollateral",
      "offset": [
        2767,
        2799
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3633": {
      "fn": "Vault.addCollateral",
      "offset": [
        2767,
        2799
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3634": {
      "fn": "Vault.addCollateral",
      "offset": [
        2767,
        2799
      ],
      "op": "AND",
      "path": "19"
    },
    "3635": {
      "fn": "Vault.addCollateral",
      "offset": [
        2723,
        2764
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3637": {
      "fn": "Vault.addCollateral",
      "offset": [
        2767,
        2799
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3638": {
      "fn": "Vault.addCollateral",
      "offset": [
        2767,
        2799
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3639": {
      "fn": "Vault.addCollateral",
      "offset": [
        2767,
        2799
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3640": {
      "fn": "Vault.addCollateral",
      "offset": [
        2767,
        2782
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x97"
    },
    "3642": {
      "fn": "Vault.addCollateral",
      "offset": [
        2767,
        2799
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3644": {
      "fn": "Vault.addCollateral",
      "offset": [
        2767,
        2799
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3645": {
      "fn": "Vault.addCollateral",
      "offset": [
        2767,
        2799
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3646": {
      "fn": "Vault.addCollateral",
      "offset": [
        2767,
        2799
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3647": {
      "fn": "Vault.addCollateral",
      "offset": [
        2767,
        2799
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3649": {
      "fn": "Vault.addCollateral",
      "offset": [
        2767,
        2799
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3650": {
      "fn": "Vault.addCollateral",
      "offset": [
        2767,
        2799
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3651": {
      "fn": "Vault.addCollateral",
      "offset": [
        2767,
        2799
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "3652": {
      "fn": "Vault.addCollateral",
      "offset": [
        2803,
        2852
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 29
    },
    "3653": {
      "fn": "Vault.addCollateral",
      "offset": [
        2803,
        2852
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3654": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3656": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3658": {
      "op": "SHL"
    },
    "3659": {
      "op": "NOT"
    },
    "3660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3664": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3666": {
      "op": "SHL"
    },
    "3667": {
      "op": "SUB"
    },
    "3668": {
      "op": "NOT"
    },
    "3669": {
      "fn": "Vault.addCollateral",
      "offset": [
        2803,
        2852
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3670": {
      "fn": "Vault.addCollateral",
      "offset": [
        2803,
        2852
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3671": {
      "fn": "Vault.addCollateral",
      "offset": [
        2803,
        2852
      ],
      "op": "AND",
      "path": "19"
    },
    "3672": {
      "fn": "Vault.addCollateral",
      "offset": [
        2803,
        2852
      ],
      "op": "DUP8",
      "path": "19"
    },
    "3673": {
      "fn": "Vault.addCollateral",
      "offset": [
        2803,
        2852
      ],
      "op": "OR",
      "path": "19"
    },
    "3674": {
      "fn": "Vault.addCollateral",
      "offset": [
        2856,
        2885
      ],
      "op": "AND",
      "path": "19",
      "statement": 30
    },
    "3675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3677": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3679": {
      "op": "SHL"
    },
    "3680": {
      "fn": "Vault.addCollateral",
      "offset": [
        2856,
        2885
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3681": {
      "fn": "Vault.addCollateral",
      "offset": [
        2856,
        2885
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3682": {
      "fn": "Vault.addCollateral",
      "offset": [
        2856,
        2885
      ],
      "op": "OR",
      "path": "19"
    },
    "3683": {
      "fn": "Vault.addCollateral",
      "offset": [
        2856,
        2885
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3684": {
      "fn": "Vault.addCollateral",
      "offset": [
        2856,
        2885
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3685": {
      "fn": "Vault.addCollateral",
      "offset": [
        2856,
        2885
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3686": {
      "fn": "Vault.addCollateral",
      "offset": [
        2803,
        2852
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "3688": {
      "fn": "Vault.addCollateral",
      "offset": [
        2889,
        2925
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 31
    },
    "3689": {
      "fn": "Vault.addCollateral",
      "offset": [
        2889,
        2925
      ],
      "op": "DUP6",
      "path": "19"
    },
    "3690": {
      "fn": "Vault.addCollateral",
      "offset": [
        2889,
        2925
      ],
      "op": "ADD",
      "path": "19"
    },
    "3691": {
      "fn": "Vault.addCollateral",
      "offset": [
        2889,
        2948
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3692": {
      "fn": "Vault.addCollateral",
      "offset": [
        2889,
        2948
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3693": {
      "fn": "Vault.addCollateral",
      "offset": [
        2889,
        2948
      ],
      "op": "DUP13",
      "path": "19"
    },
    "3694": {
      "fn": "Vault.addCollateral",
      "offset": [
        2889,
        2948
      ],
      "op": "DUP13",
      "path": "19"
    },
    "3695": {
      "fn": "Vault.addCollateral",
      "offset": [
        2889,
        2948
      ],
      "op": "AND",
      "path": "19"
    },
    "3696": {
      "fn": "Vault.addCollateral",
      "offset": [
        2889,
        2948
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3697": {
      "fn": "Vault.addCollateral",
      "offset": [
        2889,
        2948
      ],
      "op": "DUP7",
      "path": "19"
    },
    "3698": {
      "fn": "Vault.addCollateral",
      "offset": [
        2889,
        2948
      ],
      "op": "AND",
      "path": "19"
    },
    "3699": {
      "fn": "Vault.addCollateral",
      "offset": [
        2889,
        2948
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3700": {
      "fn": "Vault.addCollateral",
      "offset": [
        2889,
        2948
      ],
      "op": "OR",
      "path": "19"
    },
    "3701": {
      "fn": "Vault.addCollateral",
      "offset": [
        2889,
        2948
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3702": {
      "fn": "Vault.addCollateral",
      "offset": [
        2889,
        2948
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3703": {
      "fn": "Vault.addCollateral",
      "offset": [
        2889,
        2948
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3704": {
      "fn": "Vault.addCollateral",
      "offset": [
        2952,
        2969
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 32,
      "value": "0x99"
    },
    "3706": {
      "fn": "Vault.addCollateral",
      "offset": [
        2952,
        3007
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3707": {
      "fn": "Vault.addCollateral",
      "offset": [
        2952,
        3007
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3708": {
      "fn": "Vault.addCollateral",
      "offset": [
        2952,
        3007
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "3709": {
      "fn": "Vault.addCollateral",
      "offset": [
        2952,
        3007
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3710": {
      "fn": "Vault.addCollateral",
      "offset": [
        2952,
        3007
      ],
      "op": "ADD",
      "path": "19"
    },
    "3711": {
      "fn": "Vault.addCollateral",
      "offset": [
        2952,
        3007
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3712": {
      "fn": "Vault.addCollateral",
      "offset": [
        2952,
        3007
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3713": {
      "fn": "Vault.addCollateral",
      "offset": [
        2952,
        3007
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3714": {
      "fn": "Vault.addCollateral",
      "offset": [
        2952,
        3007
      ],
      "op": "SWAP9",
      "path": "19"
    },
    "3715": {
      "fn": "Vault.addCollateral",
      "offset": [
        2952,
        3007
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3716": {
      "fn": "Vault.addCollateral",
      "offset": [
        2952,
        3007
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0x72A152DDFB8E864297C917AF52EA6C1C68AEAD0FEE1A62673FCC7E0C94979D00"
    },
    "3749": {
      "fn": "Vault.addCollateral",
      "offset": [
        2952,
        3007
      ],
      "op": "ADD",
      "path": "19"
    },
    "3750": {
      "fn": "Vault.addCollateral",
      "offset": [
        2952,
        3007
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3751": {
      "fn": "Vault.addCollateral",
      "offset": [
        2952,
        3007
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3752": {
      "fn": "Vault.addCollateral",
      "offset": [
        2952,
        3007
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3753": {
      "fn": "Vault.addCollateral",
      "offset": [
        2952,
        3007
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "3754": {
      "fn": "Vault.addCollateral",
      "offset": [
        2952,
        3007
      ],
      "op": "AND",
      "path": "19"
    },
    "3755": {
      "fn": "Vault.addCollateral",
      "offset": [
        2975,
        3006
      ],
      "op": "SWAP9",
      "path": "19"
    },
    "3756": {
      "fn": "Vault.addCollateral",
      "offset": [
        2975,
        3006
      ],
      "op": "AND",
      "path": "19"
    },
    "3757": {
      "fn": "Vault.addCollateral",
      "offset": [
        2952,
        3007
      ],
      "op": "SWAP8",
      "path": "19"
    },
    "3758": {
      "fn": "Vault.addCollateral",
      "offset": [
        2952,
        3007
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3759": {
      "fn": "Vault.addCollateral",
      "offset": [
        2952,
        3007
      ],
      "op": "SWAP8",
      "path": "19"
    },
    "3760": {
      "fn": "Vault.addCollateral",
      "offset": [
        2952,
        3007
      ],
      "op": "OR",
      "path": "19"
    },
    "3761": {
      "fn": "Vault.addCollateral",
      "offset": [
        2952,
        3007
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3762": {
      "fn": "Vault.addCollateral",
      "offset": [
        2952,
        3007
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3763": {
      "fn": "Vault.addCollateral",
      "offset": [
        3049,
        3071
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 33
    },
    "3764": {
      "fn": "Vault.addCollateral",
      "offset": [
        3049,
        3071
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3765": {
      "fn": "Vault.addCollateral",
      "offset": [
        3016,
        3094
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3766": {
      "fn": "Vault.addCollateral",
      "offset": [
        3016,
        3094
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3767": {
      "fn": "Vault.addCollateral",
      "offset": [
        3016,
        3094
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "3768": {
      "fn": "Vault.addCollateral",
      "offset": [
        3016,
        3094
      ],
      "op": "DUP7",
      "path": "19"
    },
    "3769": {
      "fn": "Vault.addCollateral",
      "offset": [
        3016,
        3094
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3770": {
      "fn": "Vault.addCollateral",
      "offset": [
        3049,
        3071
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "3771": {
      "fn": "Vault.addCollateral",
      "offset": [
        3049,
        3071
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3772": {
      "fn": "Vault.addCollateral",
      "offset": [
        3049,
        3071
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "3773": {
      "fn": "Vault.addCollateral",
      "offset": [
        3049,
        3071
      ],
      "op": "DIV",
      "path": "19"
    },
    "3774": {
      "fn": "Vault.addCollateral",
      "offset": [
        2856,
        2885
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "3776": {
      "fn": "Vault.addCollateral",
      "offset": [
        3049,
        3071
      ],
      "op": "AND",
      "path": "19"
    },
    "3777": {
      "fn": "Vault.addCollateral",
      "offset": [
        3016,
        3094
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3778": {
      "fn": "Vault.addCollateral",
      "offset": [
        3016,
        3094
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "3779": {
      "fn": "Vault.addCollateral",
      "offset": [
        3016,
        3094
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3780": {
      "fn": "Vault.addCollateral",
      "offset": [
        3016,
        3094
      ],
      "op": "DUP5",
      "path": "19"
    },
    "3781": {
      "fn": "Vault.addCollateral",
      "offset": [
        3016,
        3094
      ],
      "op": "ADD",
      "path": "19"
    },
    "3782": {
      "fn": "Vault.addCollateral",
      "offset": [
        3016,
        3094
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3783": {
      "fn": "Vault.addCollateral",
      "offset": [
        3016,
        3094
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3784": {
      "fn": "Vault.addCollateral",
      "offset": [
        3016,
        3094
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3785": {
      "fn": "Vault.addCollateral",
      "offset": [
        3016,
        3094
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3786": {
      "fn": "Vault.addCollateral",
      "offset": [
        3016,
        3094
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3787": {
      "fn": "Vault.addCollateral",
      "offset": [
        3016,
        3094
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3788": {
      "fn": "Vault.addCollateral",
      "offset": [
        3016,
        3094
      ],
      "op": "ADD",
      "path": "19"
    },
    "3789": {
      "fn": "Vault.addCollateral",
      "offset": [
        3016,
        3094
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3790": {
      "fn": "Vault.addCollateral",
      "offset": [
        3016,
        3094
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3791": {
      "fn": "Vault.addCollateral",
      "offset": [
        3016,
        3094
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3792": {
      "fn": "Vault.addCollateral",
      "offset": [
        3016,
        3094
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3793": {
      "fn": "Vault.addCollateral",
      "offset": [
        3016,
        3094
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3794": {
      "fn": "Vault.addCollateral",
      "offset": [
        3016,
        3094
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0x1FB89240E26EFAF4D05F8F118B830B58A8B4843CEEFB4C360C2673FBF0189D60"
    },
    "3827": {
      "fn": "Vault.addCollateral",
      "offset": [
        3016,
        3094
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3828": {
      "fn": "Vault.addCollateral",
      "offset": [
        3016,
        3094
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3829": {
      "fn": "Vault.addCollateral",
      "offset": [
        3016,
        3094
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3830": {
      "fn": "Vault.addCollateral",
      "offset": [
        3016,
        3094
      ],
      "op": "SUB",
      "path": "19"
    },
    "3831": {
      "fn": "Vault.addCollateral",
      "offset": [
        3016,
        3094
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "3833": {
      "fn": "Vault.addCollateral",
      "offset": [
        3016,
        3094
      ],
      "op": "ADD",
      "path": "19"
    },
    "3834": {
      "fn": "Vault.addCollateral",
      "offset": [
        3016,
        3094
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3835": {
      "fn": "Vault.addCollateral",
      "offset": [
        3016,
        3094
      ],
      "op": "LOG1",
      "path": "19"
    },
    "3836": {
      "offset": [
        1617,
        1618
      ],
      "op": "POP",
      "path": "1"
    },
    "3837": {
      "fn": "Vault.addCollateral",
      "offset": [
        2439,
        3098
      ],
      "op": "POP",
      "path": "19"
    },
    "3838": {
      "fn": "Vault.addCollateral",
      "offset": [
        2439,
        3098
      ],
      "op": "POP",
      "path": "19"
    },
    "3839": {
      "fn": "Vault.addCollateral",
      "jump": "o",
      "offset": [
        2439,
        3098
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3840": {
      "fn": "Vault.totalValueLocked",
      "offset": [
        6317,
        6443
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3841": {
      "fn": "Vault.totalValueLocked",
      "offset": [
        6366,
        6376
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3843": {
      "fn": "Vault.totalValueLocked",
      "offset": [
        6390,
        6439
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 34,
      "value": "0xF1B"
    },
    "3846": {
      "fn": "Vault.totalValueLocked",
      "offset": [
        6414,
        6438
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF0D"
    },
    "3849": {
      "fn": "Vault.totalValueLocked",
      "offset": [
        6414,
        6436
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x2B8"
    },
    "3852": {
      "fn": "Vault.totalValueLocked",
      "jump": "i",
      "offset": [
        6414,
        6438
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3853": {
      "fn": "Vault.totalValueLocked",
      "offset": [
        6414,
        6438
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3854": {
      "fn": "Vault.totalValueLocked",
      "offset": [
        6390,
        6409
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF15"
    },
    "3857": {
      "fn": "Vault.totalValueLocked",
      "offset": [
        6390,
        6407
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x7B5"
    },
    "3860": {
      "fn": "Vault.totalValueLocked",
      "jump": "i",
      "offset": [
        6390,
        6409
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3861": {
      "fn": "Vault.totalValueLocked",
      "offset": [
        6390,
        6409
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3862": {
      "fn": "Vault.totalValueLocked",
      "offset": [
        6390,
        6413
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3863": {
      "fn": "Vault.totalValueLocked",
      "offset": [
        6390,
        6413
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x125D"
    },
    "3866": {
      "fn": "Vault.totalValueLocked",
      "jump": "i",
      "offset": [
        6390,
        6439
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3867": {
      "fn": "Vault.totalValueLocked",
      "offset": [
        6390,
        6439
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3868": {
      "fn": "Vault.totalValueLocked",
      "offset": [
        6382,
        6439
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3869": {
      "fn": "Vault.totalValueLocked",
      "offset": [
        6382,
        6439
      ],
      "op": "POP",
      "path": "19"
    },
    "3870": {
      "fn": "Vault.totalValueLocked",
      "offset": [
        6317,
        6443
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3871": {
      "fn": "Vault.totalValueLocked",
      "jump": "o",
      "offset": [
        6317,
        6443
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3872": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2261,
        2501
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3873": {
      "offset": [
        1558,
        1570
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF28"
    },
    "3876": {
      "offset": [
        1558,
        1568
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12C0"
    },
    "3879": {
      "jump": "i",
      "offset": [
        1558,
        1570
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3880": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1558,
        1570
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3887": {
      "op": "SHL"
    },
    "3888": {
      "op": "SUB"
    },
    "3889": {
      "offset": [
        1547,
        1570
      ],
      "op": "AND",
      "path": "1"
    },
    "3890": {
      "offset": [
        1547,
        1554
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF39"
    },
    "3893": {
      "offset": [
        1547,
        1552
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x939"
    },
    "3896": {
      "jump": "i",
      "offset": [
        1547,
        1554
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3897": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1547,
        1554
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3902": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3904": {
      "op": "SHL"
    },
    "3905": {
      "op": "SUB"
    },
    "3906": {
      "offset": [
        1547,
        1570
      ],
      "op": "AND",
      "path": "1"
    },
    "3907": {
      "branch": 84,
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1547,
        1570
      ],
      "op": "EQ",
      "path": "1"
    },
    "3908": {
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF82"
    },
    "3911": {
      "branch": 84,
      "offset": [
        1539,
        1607
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3912": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3914": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3915": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3916": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3920": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3922": {
      "op": "SHL"
    },
    "3923": {
      "offset": [
        1539,
        1607
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3924": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3925": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3927": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3929": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3930": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "ADD",
      "path": "1"
    },
    "3931": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3932": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3933": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3934": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "3936": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3937": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "ADD",
      "path": "1"
    },
    "3938": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3939": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3941": {
      "op": "DUP1"
    },
    "3942": {
      "op": "MLOAD"
    },
    "3943": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3945": {
      "op": "PUSH2",
      "value": "0x1F13"
    },
    "3948": {
      "op": "DUP4"
    },
    "3949": {
      "op": "CODECOPY"
    },
    "3950": {
      "op": "DUP2"
    },
    "3951": {
      "op": "MLOAD"
    },
    "3952": {
      "op": "SWAP2"
    },
    "3953": {
      "op": "MSTORE"
    },
    "3954": {
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "3956": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3957": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "ADD",
      "path": "1"
    },
    "3958": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3959": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3960": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3961": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3962": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3963": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3964": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "SUB",
      "path": "1"
    },
    "3965": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "3967": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "ADD",
      "path": "1"
    },
    "3968": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3969": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3970": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        1539,
        1607
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3975": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3977": {
      "op": "SHL"
    },
    "3978": {
      "op": "SUB"
    },
    "3979": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2349,
        2371
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 35
    },
    "3980": {
      "branch": 85,
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2349,
        2371
      ],
      "op": "AND",
      "path": "1"
    },
    "3981": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFC7"
    },
    "3984": {
      "branch": 85,
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3985": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3987": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3988": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3992": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3994": {
      "op": "SHL"
    },
    "3995": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3996": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3997": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3999": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "ADD",
      "path": "1"
    },
    "4000": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4001": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4002": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4004": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "ADD",
      "path": "1"
    },
    "4005": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4006": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4007": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "SUB",
      "path": "1"
    },
    "4008": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4009": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4010": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x26"
    },
    "4012": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4013": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4014": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4016": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "ADD",
      "path": "1"
    },
    "4017": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4018": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E78"
    },
    "4021": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x26"
    },
    "4023": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4024": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "4025": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4027": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "ADD",
      "path": "1"
    },
    "4028": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4029": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "POP",
      "path": "1"
    },
    "4030": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "POP",
      "path": "1"
    },
    "4031": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4033": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4034": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4035": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4036": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "SUB",
      "path": "1"
    },
    "4037": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4038": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "REVERT",
      "path": "1"
    },
    "4039": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2341,
        2414
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4040": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2450,
        2456
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 36,
      "value": "0x33"
    },
    "4042": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2450,
        2456
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4043": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2429,
        2467
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4045": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2429,
        2467
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4050": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4052": {
      "op": "SHL"
    },
    "4053": {
      "op": "SUB"
    },
    "4054": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2429,
        2467
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4055": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2429,
        2467
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4056": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2429,
        2467
      ],
      "op": "AND",
      "path": "1"
    },
    "4057": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2429,
        2467
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4058": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2450,
        2456
      ],
      "op": "AND",
      "path": "1"
    },
    "4059": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2450,
        2456
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4060": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2429,
        2467
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "4093": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2429,
        2467
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4094": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2450,
        2456
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4096": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2450,
        2456
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4097": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2429,
        2467
      ],
      "op": "LOG3",
      "path": "1"
    },
    "4098": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2477,
        2483
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 37,
      "value": "0x33"
    },
    "4100": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2477,
        2494
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4101": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2477,
        2494
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4106": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4108": {
      "op": "SHL"
    },
    "4109": {
      "op": "SUB"
    },
    "4110": {
      "op": "NOT"
    },
    "4111": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2477,
        2494
      ],
      "op": "AND",
      "path": "1"
    },
    "4112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4116": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4118": {
      "op": "SHL"
    },
    "4119": {
      "op": "SUB"
    },
    "4120": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2477,
        2494
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4121": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2477,
        2494
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4122": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2477,
        2494
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4123": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2477,
        2494
      ],
      "op": "AND",
      "path": "1"
    },
    "4124": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2477,
        2494
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4125": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2477,
        2494
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4126": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2477,
        2494
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4127": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2477,
        2494
      ],
      "op": "OR",
      "path": "1"
    },
    "4128": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2477,
        2494
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4129": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2477,
        2494
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4130": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "jump": "o",
      "offset": [
        2261,
        2501
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4131": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7894,
        8713
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4132": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7968,
        7972
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4134": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8012
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x102D"
    },
    "4137": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8012
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E57"
    },
    "4140": {
      "fn": "Vault._valueInStrategy",
      "jump": "i",
      "offset": [
        7978,
        8012
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4141": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8012
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4142": {
      "op": "POP"
    },
    "4143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4147": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4149": {
      "op": "SHL"
    },
    "4150": {
      "op": "SUB"
    },
    "4151": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8015,
        8047
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4152": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8015,
        8047
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4153": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8015,
        8047
      ],
      "op": "AND",
      "path": "19"
    },
    "4154": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8015,
        8047
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4156": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8015,
        8047
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4157": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8015,
        8047
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4158": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8015,
        8047
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4159": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8015,
        8030
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x97"
    },
    "4161": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8015,
        8047
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4163": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8015,
        8047
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4164": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8015,
        8047
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4165": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8015,
        8047
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4166": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8015,
        8047
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4168": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8015,
        8047
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4169": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8015,
        8047
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4170": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8015,
        8047
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4171": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8015,
        8047
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "4172": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4173": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4174": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "4176": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4177": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "ADD",
      "path": "19"
    },
    "4178": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "DUP5",
      "path": "19"
    },
    "4179": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4180": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4181": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4182": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4183": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "DUP7",
      "path": "19"
    },
    "4184": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "AND",
      "path": "19"
    },
    "4185": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4186": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4189": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4191": {
      "op": "SHL"
    },
    "4192": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4193": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "DIV",
      "path": "19"
    },
    "4194": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "4196": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "AND",
      "path": "19"
    },
    "4197": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4198": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4199": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4200": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4201": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "ADD",
      "path": "19"
    },
    "4202": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4203": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4204": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4205": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4206": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "4208": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "ADD",
      "path": "19"
    },
    "4209": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4210": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4211": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4212": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "AND",
      "path": "19"
    },
    "4213": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4214": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4215": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "ADD",
      "path": "19"
    },
    "4216": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4217": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4218": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7978,
        8047
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4219": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8051,
        8119
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1088"
    },
    "4222": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8051,
        8119
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4223": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8113,
        8114
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 38,
      "value": "0x0"
    },
    "4225": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8106,
        8114
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4226": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8106,
        8114
      ],
      "op": "POP",
      "path": "19"
    },
    "4227": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8106,
        8114
      ],
      "op": "POP",
      "path": "19"
    },
    "4228": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8106,
        8114
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1258"
    },
    "4231": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8106,
        8114
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4232": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8051,
        8119
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4233": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8122,
        8140
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4235": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8153,
        8163
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4236": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8153,
        8183
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4238": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8153,
        8183
      ],
      "op": "ADD",
      "path": "19"
    },
    "4239": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8153,
        8183
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4240": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8122,
        8184
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4241": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8122,
        8184
      ],
      "op": "POP",
      "path": "19"
    },
    "4242": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8201
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4249": {
      "op": "SHL"
    },
    "4250": {
      "op": "SUB"
    },
    "4251": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8220
      ],
      "op": "AND",
      "path": "19"
    },
    "4252": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8220
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xA400326F"
    },
    "4257": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8221,
        8231
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4258": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8221,
        8246
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4260": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8221,
        8246
      ],
      "op": "ADD",
      "path": "19"
    },
    "4261": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8221,
        8246
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4262": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4264": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4265": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4266": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "4271": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "AND",
      "path": "19"
    },
    "4272": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "4274": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "SHL",
      "path": "19"
    },
    "4275": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4276": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4277": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4279": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "ADD",
      "path": "19"
    },
    "4280": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4281": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4286": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4288": {
      "op": "SHL"
    },
    "4289": {
      "op": "SUB"
    },
    "4290": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "AND",
      "path": "19"
    },
    "4291": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4292": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4293": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4295": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "ADD",
      "path": "19"
    },
    "4296": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4297": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "POP",
      "path": "19"
    },
    "4298": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "POP",
      "path": "19"
    },
    "4299": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4301": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4303": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4304": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4305": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4306": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "SUB",
      "path": "19"
    },
    "4307": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4308": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "DUP7",
      "path": "19"
    },
    "4309": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4310": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "4311": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4312": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4313": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4314": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10E2"
    },
    "4317": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4318": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4320": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4321": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4322": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4323": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "POP",
      "path": "19"
    },
    "4324": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "GAS",
      "path": "19"
    },
    "4325": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "4326": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4327": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4328": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4329": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x10F6"
    },
    "4332": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4333": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4334": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4336": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4337": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "4338": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4339": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4341": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4342": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4343": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "POP",
      "path": "19"
    },
    "4344": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "POP",
      "path": "19"
    },
    "4345": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "POP",
      "path": "19"
    },
    "4346": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "POP",
      "path": "19"
    },
    "4347": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4349": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4350": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4351": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4353": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4354": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "LT",
      "path": "19"
    },
    "4355": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4356": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x110C"
    },
    "4359": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4360": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4362": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4363": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4364": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4365": {
      "op": "POP"
    },
    "4366": {
      "branch": 74,
      "fn": "Vault._valueInStrategy",
      "offset": [
        8193,
        8247
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4367": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8188,
        8267
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x111D"
    },
    "4370": {
      "branch": 74,
      "fn": "Vault._valueInStrategy",
      "offset": [
        8188,
        8267
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4371": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8261,
        8262
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 39,
      "value": "0x0"
    },
    "4373": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8254,
        8262
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4374": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8254,
        8262
      ],
      "op": "POP",
      "path": "19"
    },
    "4375": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8254,
        8262
      ],
      "op": "POP",
      "path": "19"
    },
    "4376": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8254,
        8262
      ],
      "op": "POP",
      "path": "19"
    },
    "4377": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8254,
        8262
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1258"
    },
    "4380": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8254,
        8262
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4381": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8188,
        8267
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4382": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8270,
        8285
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4384": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8288,
        8293
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x5F5E100"
    },
    "4389": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8270,
        8293
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4390": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8270,
        8293
      ],
      "op": "POP",
      "path": "19"
    },
    "4391": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8297,
        8316
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4393": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8319,
        8324
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x5F5E100"
    },
    "4398": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8297,
        8324
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4399": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8297,
        8324
      ],
      "op": "POP",
      "path": "19"
    },
    "4400": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8328,
        8354
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4402": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8379,
        8389
      ],
      "op": "DUP5",
      "path": "19"
    },
    "4403": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8379,
        8404
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4405": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8379,
        8404
      ],
      "op": "ADD",
      "path": "19"
    },
    "4406": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8379,
        8404
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4411": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4413": {
      "op": "SHL"
    },
    "4414": {
      "op": "SUB"
    },
    "4415": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8414
      ],
      "op": "AND",
      "path": "19"
    },
    "4416": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8414
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x313CE567"
    },
    "4421": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4423": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4424": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4425": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "4430": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "AND",
      "path": "19"
    },
    "4431": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "4433": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "SHL",
      "path": "19"
    },
    "4434": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4435": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4436": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4438": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "ADD",
      "path": "19"
    },
    "4439": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4441": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4443": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4444": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4445": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4446": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "SUB",
      "path": "19"
    },
    "4447": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4448": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "DUP7",
      "path": "19"
    },
    "4449": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4450": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "4451": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4452": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4453": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4454": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x116E"
    },
    "4457": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4458": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4460": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4461": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4462": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4463": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "POP",
      "path": "19"
    },
    "4464": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "GAS",
      "path": "19"
    },
    "4465": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "4466": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4467": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4468": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4469": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1182"
    },
    "4472": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4473": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4474": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4476": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4477": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "4478": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4479": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4481": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4482": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4483": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "POP",
      "path": "19"
    },
    "4484": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "POP",
      "path": "19"
    },
    "4485": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "POP",
      "path": "19"
    },
    "4486": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "POP",
      "path": "19"
    },
    "4487": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4489": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4490": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4491": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4493": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4494": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "LT",
      "path": "19"
    },
    "4495": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4496": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1198"
    },
    "4499": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4500": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4502": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4503": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4504": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4505": {
      "op": "POP"
    },
    "4506": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4507": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8481,
        8506
      ],
      "op": "DUP6",
      "path": "19"
    },
    "4508": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8481,
        8506
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4509": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4511": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4512": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4513": {
      "op": "PUSH4",
      "value": "0x2FA8A913"
    },
    "4518": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4520": {
      "op": "SHL"
    },
    "4521": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4522": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4527": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4529": {
      "op": "SHL"
    },
    "4530": {
      "op": "SUB"
    },
    "4531": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4532": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4533": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "AND",
      "path": "19"
    },
    "4534": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4536": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4537": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "ADD",
      "path": "19"
    },
    "4538": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4539": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4540": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4541": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8357,
        8417
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "4543": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8357,
        8417
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4544": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8357,
        8417
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "4545": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8357,
        8417
      ],
      "op": "AND",
      "path": "19"
    },
    "4546": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8357,
        8417
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "4547": {
      "op": "POP"
    },
    "4548": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8421,
        8456
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4550": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8421,
        8456
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4551": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8543
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1232"
    },
    "4554": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8543
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4555": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8528,
        8542
      ],
      "op": "DUP7",
      "path": "19"
    },
    "4556": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8528,
        8542
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4557": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8523
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x122C"
    },
    "4560": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8523
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4561": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8512,
        8522
      ],
      "op": "DUP10",
      "path": "19"
    },
    "4562": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8512,
        8522
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4563": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8480
      ],
      "op": "DUP12",
      "path": "19"
    },
    "4564": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8480
      ],
      "op": "AND",
      "path": "19"
    },
    "4565": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8480
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4566": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8480
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x5F515226"
    },
    "4571": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8480
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4572": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "4574": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4575": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4576": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "ADD",
      "path": "19"
    },
    "4577": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4578": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4580": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8362,
        8416
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4581": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4582": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4583": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4584": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4585": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "SUB",
      "path": "19"
    },
    "4586": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "ADD",
      "path": "19"
    },
    "4587": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4588": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8480
      ],
      "op": "DUP7",
      "path": "19"
    },
    "4589": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4590": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "4591": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4592": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4593": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4594": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x11FA"
    },
    "4597": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4598": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4600": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4601": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4602": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4603": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "POP",
      "path": "19"
    },
    "4604": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "GAS",
      "path": "19"
    },
    "4605": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "4606": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4607": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4608": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4609": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x120E"
    },
    "4612": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4613": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4614": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4616": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4617": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "4618": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4619": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4621": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4622": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4623": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "POP",
      "path": "19"
    },
    "4624": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "POP",
      "path": "19"
    },
    "4625": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "POP",
      "path": "19"
    },
    "4626": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "POP",
      "path": "19"
    },
    "4627": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4629": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4630": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4631": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4633": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4634": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "LT",
      "path": "19"
    },
    "4635": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4636": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1224"
    },
    "4639": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4640": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4642": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4643": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4644": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4645": {
      "op": "POP"
    },
    "4646": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4647": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8507
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4648": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8511
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x182B"
    },
    "4651": {
      "fn": "Vault._valueInStrategy",
      "jump": "i",
      "offset": [
        8459,
        8523
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4652": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8523
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4653": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8527
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4654": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8527
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1884"
    },
    "4657": {
      "fn": "Vault._valueInStrategy",
      "jump": "i",
      "offset": [
        8459,
        8543
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4658": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8459,
        8543
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4659": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8421,
        8543
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4660": {
      "op": "POP"
    },
    "4661": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8547,
        8585
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4663": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8588,
        8665
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x124E"
    },
    "4666": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8628,
        8663
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1244"
    },
    "4669": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8633,
        8635
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x12"
    },
    "4671": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8641,
        8662
      ],
      "op": "DUP6",
      "path": "19"
    },
    "4672": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8628,
        8640
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18EB"
    },
    "4675": {
      "fn": "Vault._valueInStrategy",
      "jump": "i",
      "offset": [
        8628,
        8663
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4676": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8628,
        8663
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4677": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8588,
        8618
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4678": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8588,
        8618
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4679": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8623,
        8625
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xA"
    },
    "4681": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8623,
        8664
      ],
      "op": "EXP",
      "path": "19"
    },
    "4682": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8588,
        8622
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x182B"
    },
    "4685": {
      "fn": "Vault._valueInStrategy",
      "jump": "i",
      "offset": [
        8588,
        8665
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4686": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8588,
        8665
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4687": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        8547,
        8665
      ],
      "op": "SWAP8",
      "path": "19"
    },
    "4688": {
      "op": "POP"
    },
    "4689": {
      "op": "POP"
    },
    "4690": {
      "op": "POP"
    },
    "4691": {
      "op": "POP"
    },
    "4692": {
      "op": "POP"
    },
    "4693": {
      "op": "POP"
    },
    "4694": {
      "op": "POP"
    },
    "4695": {
      "op": "POP"
    },
    "4696": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7894,
        8713
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4697": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7894,
        8713
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4698": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7894,
        8713
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4699": {
      "fn": "Vault._valueInStrategy",
      "offset": [
        7894,
        8713
      ],
      "op": "POP",
      "path": "19"
    },
    "4700": {
      "fn": "Vault._valueInStrategy",
      "jump": "o",
      "offset": [
        7894,
        8713
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4701": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2701,
        2876
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4702": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2759,
        2766
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4704": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2790,
        2795
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4705": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2790,
        2795
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4706": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2790,
        2795
      ],
      "op": "ADD",
      "path": "2"
    },
    "4707": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2813,
        2819
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 40
    },
    "4708": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2813,
        2819
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4709": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2813,
        2819
      ],
      "op": "LT",
      "path": "2"
    },
    "4710": {
      "branch": 89,
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2813,
        2819
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4711": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12B7"
    },
    "4714": {
      "branch": 89,
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4715": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4717": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4718": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4719": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4723": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4725": {
      "op": "SHL"
    },
    "4726": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4727": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4728": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4730": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4732": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4733": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "ADD",
      "path": "2"
    },
    "4734": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4735": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1B"
    },
    "4737": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "4739": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4740": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "ADD",
      "path": "2"
    },
    "4741": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4742": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "4775": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "4777": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4778": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "ADD",
      "path": "2"
    },
    "4779": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4780": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4781": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4782": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4783": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4784": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4785": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "SUB",
      "path": "2"
    },
    "4786": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "4788": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "ADD",
      "path": "2"
    },
    "4789": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4790": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4791": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2805,
        2851
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4792": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2868,
        2869
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 41
    },
    "4793": {
      "op": "POP"
    },
    "4794": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2701,
        2876
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4795": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2701,
        2876
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4796": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2701,
        2876
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4797": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2701,
        2876
      ],
      "op": "POP",
      "path": "2"
    },
    "4798": {
      "fn": "SafeMathUpgradeable.add",
      "offset": [
        2701,
        2876
      ],
      "op": "POP",
      "path": "2"
    },
    "4799": {
      "fn": "SafeMathUpgradeable.add",
      "jump": "o",
      "offset": [
        2701,
        2876
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4800": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        828,
        932
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "4801": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        915,
        925
      ],
      "op": "CALLER",
      "path": "8",
      "statement": 42
    },
    "4802": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        828,
        932
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "4803": {
      "fn": "ContextUpgradeable._msgSender",
      "jump": "o",
      "offset": [
        828,
        932
      ],
      "op": "JUMP",
      "path": "8"
    },
    "4804": {
      "fn": "Vault._harvestInterest",
      "offset": [
        4974,
        5368
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4805": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5091
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x12CC"
    },
    "4808": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5091
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E57"
    },
    "4811": {
      "fn": "Vault._harvestInterest",
      "jump": "i",
      "offset": [
        5057,
        5091
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4812": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5091
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4813": {
      "op": "POP"
    },
    "4814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4818": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4820": {
      "op": "SHL"
    },
    "4821": {
      "op": "SUB"
    },
    "4822": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5094,
        5125
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4823": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5094,
        5125
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4824": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5094,
        5125
      ],
      "op": "AND",
      "path": "19"
    },
    "4825": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5094,
        5125
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4827": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5094,
        5125
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4828": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5094,
        5125
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4829": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5094,
        5125
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4830": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5094,
        5109
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x97"
    },
    "4832": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5094,
        5125
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4834": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5094,
        5125
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4835": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5094,
        5125
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4836": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5094,
        5125
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4837": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5094,
        5125
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4839": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5094,
        5125
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4840": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5094,
        5125
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4841": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5094,
        5125
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "4842": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4843": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4844": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "4846": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4847": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "ADD",
      "path": "19"
    },
    "4848": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4849": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4850": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4851": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4852": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4853": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "DUP9",
      "path": "19"
    },
    "4854": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "AND",
      "path": "19"
    },
    "4855": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4856": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4859": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4861": {
      "op": "SHL"
    },
    "4862": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4863": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "DIV",
      "path": "19"
    },
    "4864": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "4866": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "AND",
      "path": "19"
    },
    "4867": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4868": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4869": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4870": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "DUP6",
      "path": "19"
    },
    "4871": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "ADD",
      "path": "19"
    },
    "4872": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4873": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "4875": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4876": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4877": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "ADD",
      "path": "19"
    },
    "4878": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4879": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "DUP7",
      "path": "19"
    },
    "4880": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "AND",
      "path": "19"
    },
    "4881": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4882": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4883": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "ADD",
      "path": "19"
    },
    "4884": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4885": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4886": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4887": {
      "op": "PUSH4",
      "value": "0x8D2C8727"
    },
    "4892": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4894": {
      "op": "SHL"
    },
    "4895": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4896": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4897": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4899": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4900": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "ADD",
      "path": "19"
    },
    "4901": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "4902": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4903": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "4904": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4905": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4906": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4907": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4908": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5057,
        5125
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "4909": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5094,
        5125
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4910": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5094,
        5125
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "4911": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5179
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4912": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5179
      ],
      "op": "DUP8",
      "path": "19"
    },
    "4913": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5179
      ],
      "op": "AND",
      "path": "19"
    },
    "4914": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5179
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4915": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5179
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x8D2C8727"
    },
    "4920": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5179
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4921": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "4923": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4924": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "DUP4",
      "path": "19"
    },
    "4925": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "ADD",
      "path": "19"
    },
    "4926": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "4927": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5094,
        5125
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4928": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5094,
        5125
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4929": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4930": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4931": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "SUB",
      "path": "19"
    },
    "4932": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "ADD",
      "path": "19"
    },
    "4933": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4934": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5179
      ],
      "op": "DUP7",
      "path": "19"
    },
    "4935": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4936": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "4937": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4938": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4939": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4940": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1354"
    },
    "4943": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4944": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4946": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4947": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4948": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4949": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "POP",
      "path": "19"
    },
    "4950": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "GAS",
      "path": "19"
    },
    "4951": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "4952": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4953": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4954": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4955": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1368"
    },
    "4958": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4959": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4960": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4962": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4963": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "4964": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4965": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4967": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4968": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4969": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "POP",
      "path": "19"
    },
    "4970": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "POP",
      "path": "19"
    },
    "4971": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "POP",
      "path": "19"
    },
    "4972": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "POP",
      "path": "19"
    },
    "4973": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4975": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4976": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "4977": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4979": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4980": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "LT",
      "path": "19"
    },
    "4981": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4982": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x137E"
    },
    "4985": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4986": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4988": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4989": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4990": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4991": {
      "op": "POP"
    },
    "4992": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4993": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5151,
        5195
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4994": {
      "op": "POP"
    },
    "4995": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5203,
        5221
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 43
    },
    "4996": {
      "branch": 75,
      "fn": "Vault._harvestInterest",
      "offset": [
        5203,
        5221
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "4997": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5199,
        5365
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x140A"
    },
    "5000": {
      "branch": 75,
      "fn": "Vault._harvestInterest",
      "offset": [
        5199,
        5365
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5001": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5330,
        5355
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5002": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5330,
        5355
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5003": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5005": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5006": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5007": {
      "op": "PUSH4",
      "value": "0x69AD7489"
    },
    "5012": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5014": {
      "op": "SHL"
    },
    "5015": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5016": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5017": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5319,
        5323
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "5018": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5020": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5021": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "ADD",
      "path": "19"
    },
    "5022": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5027": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5029": {
      "op": "SHL"
    },
    "5030": {
      "op": "SUB"
    },
    "5031": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5032": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5033": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "AND",
      "path": "19"
    },
    "5034": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "5036": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5037": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "ADD",
      "path": "19"
    },
    "5038": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5039": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5040": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5041": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5229,
        5250
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5043": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5229,
        5250
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "5044": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5229,
        5250
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5045": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5229,
        5250
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "5046": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5305
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5047": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5305
      ],
      "op": "DUP10",
      "path": "19"
    },
    "5048": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5305
      ],
      "op": "AND",
      "path": "19"
    },
    "5049": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5305
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5050": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5305
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x69AD7489"
    },
    "5055": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5305
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5056": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "5058": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5059": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5060": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "ADD",
      "path": "19"
    },
    "5061": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "5062": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5063": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5064": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5065": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "SUB",
      "path": "19"
    },
    "5066": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "ADD",
      "path": "19"
    },
    "5067": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5068": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5229,
        5250
      ],
      "op": "DUP8",
      "path": "19"
    },
    "5069": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5305
      ],
      "op": "DUP8",
      "path": "19"
    },
    "5070": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5071": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "5072": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5073": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5074": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5075": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x13DB"
    },
    "5078": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5079": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5081": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5082": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5083": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5084": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "POP",
      "path": "19"
    },
    "5085": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "GAS",
      "path": "19"
    },
    "5086": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "CALL",
      "path": "19"
    },
    "5087": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5088": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5089": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5090": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x13EF"
    },
    "5093": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5094": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5095": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5097": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5098": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "5099": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5100": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5102": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5103": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5104": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "POP",
      "path": "19"
    },
    "5105": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "POP",
      "path": "19"
    },
    "5106": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "POP",
      "path": "19"
    },
    "5107": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "POP",
      "path": "19"
    },
    "5108": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5110": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5111": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5112": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5114": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5115": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "LT",
      "path": "19"
    },
    "5116": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5117": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1405"
    },
    "5120": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5121": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5123": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5124": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5125": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5281,
        5360
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5126": {
      "op": "POP"
    },
    "5127": {
      "op": "POP"
    },
    "5128": {
      "op": "POP"
    },
    "5129": {
      "op": "POP"
    },
    "5130": {
      "fn": "Vault._harvestInterest",
      "offset": [
        5199,
        5365
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5131": {
      "fn": "Vault._harvestInterest",
      "offset": [
        4974,
        5368
      ],
      "op": "POP",
      "path": "19"
    },
    "5132": {
      "fn": "Vault._harvestInterest",
      "offset": [
        4974,
        5368
      ],
      "op": "POP",
      "path": "19"
    },
    "5133": {
      "fn": "Vault._harvestInterest",
      "offset": [
        4974,
        5368
      ],
      "op": "POP",
      "path": "19"
    },
    "5134": {
      "fn": "Vault._harvestInterest",
      "offset": [
        4974,
        5368
      ],
      "op": "POP",
      "path": "19"
    },
    "5135": {
      "fn": "Vault._harvestInterest",
      "jump": "o",
      "offset": [
        4974,
        5368
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5136": {
      "fn": "Vault._harvestReward",
      "offset": [
        4434,
        4693
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5137": {
      "fn": "Vault._harvestReward",
      "offset": [
        4491,
        4511
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5139": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4522
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5144": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5146": {
      "op": "SHL"
    },
    "5147": {
      "op": "SUB"
    },
    "5148": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4541
      ],
      "op": "AND",
      "path": "19"
    },
    "5149": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4541
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x125F9E33"
    },
    "5154": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5156": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5157": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5158": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "5163": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "AND",
      "path": "19"
    },
    "5164": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "5166": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "SHL",
      "path": "19"
    },
    "5167": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5168": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5169": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5171": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "ADD",
      "path": "19"
    },
    "5172": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5174": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5176": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5177": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5178": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5179": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "SUB",
      "path": "19"
    },
    "5180": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5181": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "DUP7",
      "path": "19"
    },
    "5182": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5183": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "5184": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5185": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5186": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5187": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x144B"
    },
    "5190": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5191": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5193": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5194": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5195": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5196": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "POP",
      "path": "19"
    },
    "5197": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "GAS",
      "path": "19"
    },
    "5198": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "5199": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5200": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5201": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5202": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x145F"
    },
    "5205": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5206": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5207": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5209": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5210": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "5211": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5212": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5214": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5215": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5216": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "POP",
      "path": "19"
    },
    "5217": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "POP",
      "path": "19"
    },
    "5218": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "POP",
      "path": "19"
    },
    "5219": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "POP",
      "path": "19"
    },
    "5220": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5222": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5223": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5224": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5226": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5227": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "LT",
      "path": "19"
    },
    "5228": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5229": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1475"
    },
    "5232": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5233": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5235": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5236": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5237": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5238": {
      "op": "POP"
    },
    "5239": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5240": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5242": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5243": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5244": {
      "op": "PUSH4",
      "value": "0x1D4814C1"
    },
    "5249": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "5251": {
      "op": "SHL"
    },
    "5252": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5253": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5254": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5255": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5256": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5257": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5258": {
      "op": "POP"
    },
    "5259": {
      "fn": "Vault._harvestReward",
      "offset": [
        4547,
        4567
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5261": {
      "fn": "Vault._harvestReward",
      "offset": [
        4547,
        4567
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5266": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5268": {
      "op": "SHL"
    },
    "5269": {
      "op": "SUB"
    },
    "5270": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4596
      ],
      "op": "DUP6",
      "path": "19"
    },
    "5271": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4596
      ],
      "op": "AND",
      "path": "19"
    },
    "5272": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4596
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5273": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4596
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x75205304"
    },
    "5278": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4596
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5279": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5281": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5282": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5283": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "ADD",
      "path": "19"
    },
    "5284": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5285": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5287": {
      "fn": "Vault._harvestReward",
      "offset": [
        4514,
        4543
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5288": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5289": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5290": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5291": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5292": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "SUB",
      "path": "19"
    },
    "5293": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "ADD",
      "path": "19"
    },
    "5294": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5295": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4596
      ],
      "op": "DUP7",
      "path": "19"
    },
    "5296": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5297": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "5298": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5299": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5300": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5301": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x14BD"
    },
    "5304": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5305": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5307": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5308": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5309": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5310": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "POP",
      "path": "19"
    },
    "5311": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "GAS",
      "path": "19"
    },
    "5312": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "5313": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5314": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5315": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5316": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x14D1"
    },
    "5319": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5320": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5321": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5323": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5324": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "5325": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5326": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5328": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5329": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5330": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "POP",
      "path": "19"
    },
    "5331": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "POP",
      "path": "19"
    },
    "5332": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "POP",
      "path": "19"
    },
    "5333": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "POP",
      "path": "19"
    },
    "5334": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5336": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5337": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5338": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5340": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5341": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "LT",
      "path": "19"
    },
    "5342": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5343": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x14E7"
    },
    "5346": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5347": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5349": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5350": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5351": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5352": {
      "op": "POP"
    },
    "5353": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5354": {
      "fn": "Vault._harvestReward",
      "offset": [
        4570,
        4598
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5355": {
      "op": "POP"
    },
    "5356": {
      "fn": "Vault._harvestReward",
      "offset": [
        4606,
        4622
      ],
      "op": "DUP1",
      "path": "19",
      "statement": 44
    },
    "5357": {
      "branch": 76,
      "fn": "Vault._harvestReward",
      "offset": [
        4606,
        4622
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5358": {
      "fn": "Vault._harvestReward",
      "offset": [
        4602,
        4690
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x155C"
    },
    "5361": {
      "branch": 76,
      "fn": "Vault._harvestReward",
      "offset": [
        4602,
        4690
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5362": {
      "fn": "Vault._harvestReward",
      "offset": [
        4629,
        4653
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5364": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4664
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5369": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5371": {
      "op": "SHL"
    },
    "5372": {
      "op": "SUB"
    },
    "5373": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4683
      ],
      "op": "AND",
      "path": "19"
    },
    "5374": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4683
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x242241D"
    },
    "5379": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5381": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5382": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5383": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0xFFFFFFFF"
    },
    "5388": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "AND",
      "path": "19"
    },
    "5389": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xE0"
    },
    "5391": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "SHL",
      "path": "19"
    },
    "5392": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5393": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5394": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5396": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "ADD",
      "path": "19"
    },
    "5397": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5399": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5401": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5402": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5403": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5404": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "SUB",
      "path": "19"
    },
    "5405": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5406": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5408": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "DUP8",
      "path": "19"
    },
    "5409": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5410": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "5411": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5412": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5413": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5414": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x152E"
    },
    "5417": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5418": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5420": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5421": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5422": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5423": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "POP",
      "path": "19"
    },
    "5424": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "GAS",
      "path": "19"
    },
    "5425": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "CALL",
      "path": "19"
    },
    "5426": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5427": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5428": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5429": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1542"
    },
    "5432": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5433": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5434": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5436": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5437": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "5438": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5439": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5441": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5442": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5443": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "POP",
      "path": "19"
    },
    "5444": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "POP",
      "path": "19"
    },
    "5445": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "POP",
      "path": "19"
    },
    "5446": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "POP",
      "path": "19"
    },
    "5447": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5449": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5450": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5451": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5453": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5454": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "LT",
      "path": "19"
    },
    "5455": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5456": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1558"
    },
    "5459": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5460": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5462": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5463": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5464": {
      "fn": "Vault._harvestReward",
      "offset": [
        4656,
        4685
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5465": {
      "op": "POP"
    },
    "5466": {
      "op": "POP"
    },
    "5467": {
      "op": "POP"
    },
    "5468": {
      "fn": "Vault._harvestReward",
      "offset": [
        4602,
        4690
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5469": {
      "fn": "Vault._harvestReward",
      "offset": [
        4434,
        4693
      ],
      "op": "POP",
      "path": "19"
    },
    "5470": {
      "fn": "Vault._harvestReward",
      "offset": [
        4434,
        4693
      ],
      "op": "POP",
      "path": "19"
    },
    "5471": {
      "fn": "Vault._harvestReward",
      "offset": [
        4434,
        4693
      ],
      "op": "POP",
      "path": "19"
    },
    "5472": {
      "fn": "Vault._harvestReward",
      "jump": "o",
      "offset": [
        4434,
        4693
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5473": {
      "fn": "Vault._valueInVault",
      "offset": [
        6858,
        7471
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5474": {
      "fn": "Vault._valueInVault",
      "offset": [
        6929,
        6939
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5476": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        6979
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x156B"
    },
    "5479": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        6979
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1E57"
    },
    "5482": {
      "fn": "Vault._valueInVault",
      "jump": "i",
      "offset": [
        6945,
        6979
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5483": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        6979
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5484": {
      "op": "POP"
    },
    "5485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5489": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5491": {
      "op": "SHL"
    },
    "5492": {
      "op": "SUB"
    },
    "5493": {
      "fn": "Vault._valueInVault",
      "offset": [
        6982,
        7014
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5494": {
      "fn": "Vault._valueInVault",
      "offset": [
        6982,
        7014
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5495": {
      "fn": "Vault._valueInVault",
      "offset": [
        6982,
        7014
      ],
      "op": "AND",
      "path": "19"
    },
    "5496": {
      "fn": "Vault._valueInVault",
      "offset": [
        6982,
        7014
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5498": {
      "fn": "Vault._valueInVault",
      "offset": [
        6982,
        7014
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5499": {
      "fn": "Vault._valueInVault",
      "offset": [
        6982,
        7014
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5500": {
      "fn": "Vault._valueInVault",
      "offset": [
        6982,
        7014
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5501": {
      "fn": "Vault._valueInVault",
      "offset": [
        6982,
        6997
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x97"
    },
    "5503": {
      "fn": "Vault._valueInVault",
      "offset": [
        6982,
        7014
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5505": {
      "fn": "Vault._valueInVault",
      "offset": [
        6982,
        7014
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5506": {
      "fn": "Vault._valueInVault",
      "offset": [
        6982,
        7014
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5507": {
      "fn": "Vault._valueInVault",
      "offset": [
        6982,
        7014
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5508": {
      "fn": "Vault._valueInVault",
      "offset": [
        6982,
        7014
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5510": {
      "fn": "Vault._valueInVault",
      "offset": [
        6982,
        7014
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5511": {
      "fn": "Vault._valueInVault",
      "offset": [
        6982,
        7014
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5512": {
      "fn": "Vault._valueInVault",
      "offset": [
        6982,
        7014
      ],
      "op": "KECCAK256",
      "path": "19"
    },
    "5513": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5514": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5515": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x60"
    },
    "5517": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5518": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "ADD",
      "path": "19"
    },
    "5519": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5520": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5521": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5522": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5523": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5524": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "DUP8",
      "path": "19"
    },
    "5525": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "AND",
      "path": "19"
    },
    "5526": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5527": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5528": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5531": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5533": {
      "op": "SHL"
    },
    "5534": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5535": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5536": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "DIV",
      "path": "19"
    },
    "5537": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "5539": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "AND",
      "path": "19"
    },
    "5540": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5541": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5542": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5543": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "DUP7",
      "path": "19"
    },
    "5544": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "ADD",
      "path": "19"
    },
    "5545": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5546": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x1"
    },
    "5548": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5549": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5550": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "ADD",
      "path": "19"
    },
    "5551": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "5552": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5553": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "SWAP6",
      "path": "19"
    },
    "5554": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "AND",
      "path": "19"
    },
    "5555": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "DUP6",
      "path": "19"
    },
    "5556": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5557": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "ADD",
      "path": "19"
    },
    "5558": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5559": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5560": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5561": {
      "op": "PUSH4",
      "value": "0x313CE567"
    },
    "5566": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5568": {
      "op": "SHL"
    },
    "5569": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5570": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5571": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5572": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5573": {
      "fn": "Vault._valueInVault",
      "offset": [
        7036,
        7041
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x5F5E100"
    },
    "5578": {
      "fn": "Vault._valueInVault",
      "offset": [
        7036,
        7041
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "5579": {
      "fn": "Vault._valueInVault",
      "offset": [
        7036,
        7041
      ],
      "op": "DUP6",
      "path": "19"
    },
    "5580": {
      "fn": "Vault._valueInVault",
      "offset": [
        7036,
        7041
      ],
      "op": "SWAP5",
      "path": "19"
    },
    "5581": {
      "fn": "Vault._valueInVault",
      "offset": [
        6982,
        7014
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5582": {
      "fn": "Vault._valueInVault",
      "offset": [
        6982,
        7014
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "5583": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7162
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x313CE567"
    },
    "5588": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7162
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5589": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5591": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5592": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5593": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "ADD",
      "path": "19"
    },
    "5594": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "5595": {
      "fn": "Vault._valueInVault",
      "offset": [
        6982,
        7014
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5596": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5597": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5598": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "SUB",
      "path": "19"
    },
    "5599": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "ADD",
      "path": "19"
    },
    "5600": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5601": {
      "fn": "Vault._valueInVault",
      "offset": [
        6945,
        7014
      ],
      "op": "DUP7",
      "path": "19"
    },
    "5602": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5603": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "5604": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5605": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5606": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5607": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x15EF"
    },
    "5610": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5611": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5613": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5614": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5615": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5616": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "POP",
      "path": "19"
    },
    "5617": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "GAS",
      "path": "19"
    },
    "5618": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "STATICCALL",
      "path": "19"
    },
    "5619": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5620": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5621": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5622": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1603"
    },
    "5625": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5626": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5627": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5629": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5630": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "RETURNDATACOPY",
      "path": "19"
    },
    "5631": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5632": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5634": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5635": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5636": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "POP",
      "path": "19"
    },
    "5637": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "POP",
      "path": "19"
    },
    "5638": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "POP",
      "path": "19"
    },
    "5639": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "POP",
      "path": "19"
    },
    "5640": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5642": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5643": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "RETURNDATASIZE",
      "path": "19"
    },
    "5644": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5646": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5647": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "LT",
      "path": "19"
    },
    "5648": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5649": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1619"
    },
    "5652": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5653": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5655": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5656": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5657": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5658": {
      "op": "POP"
    },
    "5659": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5660": {
      "fn": "Vault._valueInVault",
      "offset": [
        7222,
        7247
      ],
      "op": "DUP5",
      "path": "19"
    },
    "5661": {
      "fn": "Vault._valueInVault",
      "offset": [
        7222,
        7247
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5662": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "5664": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5665": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5666": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5671": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5673": {
      "op": "SHL"
    },
    "5674": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5675": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5676": {
      "fn": "Vault._valueInVault",
      "offset": [
        7267,
        7271
      ],
      "op": "ADDRESS",
      "path": "19"
    },
    "5677": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "5679": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5680": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "ADD",
      "path": "19"
    },
    "5681": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "5682": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5683": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "5684": {
      "fn": "Vault._valueInVault",
      "offset": [
        7105,
        7165
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0xFF"
    },
    "5686": {
      "fn": "Vault._valueInVault",
      "offset": [
        7105,
        7165
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5687": {
      "fn": "Vault._valueInVault",
      "offset": [
        7105,
        7165
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "5688": {
      "fn": "Vault._valueInVault",
      "offset": [
        7105,
        7165
      ],
      "op": "AND",
      "path": "19"
    },
    "5689": {
      "fn": "Vault._valueInVault",
      "offset": [
        7105,
        7165
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "5690": {
      "op": "POP"
    },
    "5691": {
      "fn": "Vault._valueInVault",
      "offset": [
        7169,
        7201
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5693": {
      "fn": "Vault._valueInVault",
      "offset": [
        7169,
        7201
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5694": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7309
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1678"
    },
    "5697": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7309
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5698": {
      "fn": "Vault._valueInVault",
      "offset": [
        7294,
        7308
      ],
      "op": "DUP7",
      "path": "19"
    },
    "5699": {
      "fn": "Vault._valueInVault",
      "offset": [
        7294,
        7308
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5700": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7289
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x122C"
    },
    "5703": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7289
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5704": {
      "fn": "Vault._valueInVault",
      "offset": [
        7278,
        7288
      ],
      "op": "DUP10",
      "path": "19"
    },
    "5705": {
      "fn": "Vault._valueInVault",
      "offset": [
        7278,
        7288
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5710": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5712": {
      "op": "SHL"
    },
    "5713": {
      "op": "SUB"
    },
    "5714": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7258
      ],
      "op": "AND",
      "path": "19"
    },
    "5715": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7258
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5716": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7258
      ],
      "op": "PUSH4",
      "path": "19",
      "value": "0x70A08231"
    },
    "5721": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7258
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5722": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "5724": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5725": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "DUP4",
      "path": "19"
    },
    "5726": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "ADD",
      "path": "19"
    },
    "5727": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5728": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "5730": {
      "fn": "Vault._valueInVault",
      "offset": [
        7110,
        7164
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "5731": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "5732": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5733": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "DUP3",
      "path": "19"
    },
    "5734": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5735": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "SUB",
      "path": "19"
    },
    "5736": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "ADD",
      "path": "19"
    },
    "5737": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "DUP2",
      "path": "19"
    },
    "5738": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7258
      ],
      "op": "DUP7",
      "path": "19"
    },
    "5739": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5740": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "EXTCODESIZE",
      "path": "19"
    },
    "5741": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5742": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5743": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "5744": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x11FA"
    },
    "5747": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "5748": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5750": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "DUP1",
      "path": "19"
    },
    "5751": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7273
      ],
      "op": "REVERT",
      "path": "19"
    },
    "5752": {
      "fn": "Vault._valueInVault",
      "offset": [
        7204,
        7309
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5753": {
      "fn": "Vault._valueInVault",
      "offset": [
        7169,
        7309
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "5754": {
      "op": "POP"
    },
    "5755": {
      "fn": "Vault._valueInVault",
      "offset": [
        7313,
        7348
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "5757": {
      "fn": "Vault._valueInVault",
      "offset": [
        7351,
        7425
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x168A"
    },
    "5760": {
      "fn": "Vault._valueInVault",
      "offset": [
        7388,
        7423
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1244"
    },
    "5763": {
      "fn": "Vault._valueInVault",
      "offset": [
        7393,
        7395
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x12"
    },
    "5765": {
      "fn": "Vault._valueInVault",
      "offset": [
        7401,
        7422
      ],
      "op": "DUP6",
      "path": "19"
    },
    "5766": {
      "fn": "Vault._valueInVault",
      "offset": [
        7388,
        7400
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x18EB"
    },
    "5769": {
      "fn": "Vault._valueInVault",
      "jump": "i",
      "offset": [
        7388,
        7423
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5770": {
      "fn": "Vault._valueInVault",
      "offset": [
        7351,
        7425
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "5771": {
      "fn": "Vault._valueInVault",
      "offset": [
        7313,
        7425
      ],
      "op": "SWAP9",
      "path": "19"
    },
    "5772": {
      "fn": "Vault._valueInVault",
      "offset": [
        6858,
        7471
      ],
      "op": "SWAP8",
      "path": "19"
    },
    "5773": {
      "op": "POP"
    },
    "5774": {
      "op": "POP"
    },
    "5775": {
      "op": "POP"
    },
    "5776": {
      "op": "POP"
    },
    "5777": {
      "op": "POP"
    },
    "5778": {
      "op": "POP"
    },
    "5779": {
      "op": "POP"
    },
    "5780": {
      "op": "POP"
    },
    "5781": {
      "fn": "Vault._valueInVault",
      "jump": "o",
      "offset": [
        6858,
        7471
      ],
      "op": "JUMP",
      "path": "19"
    },
    "5782": {
      "fn": "Initializable._isConstructor",
      "offset": [
        1952,
        2075
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5783": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2000,
        2004
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5785": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2024,
        2068
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 45,
      "value": "0x16A1"
    },
    "5788": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2062,
        2066
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "5789": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2024,
        2053
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1948"
    },
    "5792": {
      "fn": "Initializable._isConstructor",
      "jump": "i",
      "offset": [
        2024,
        2068
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5793": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2024,
        2068
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5794": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2023,
        2068
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5795": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2016,
        2068
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5796": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2016,
        2068
      ],
      "op": "POP",
      "path": "3"
    },
    "5797": {
      "fn": "Initializable._isConstructor",
      "offset": [
        1952,
        2075
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5798": {
      "fn": "Initializable._isConstructor",
      "jump": "o",
      "offset": [
        1952,
        2075
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5799": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        935,
        1061
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5800": {
      "offset": [
        1512,
        1525
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5802": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1512,
        1525
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5803": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1512,
        1525
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "5806": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1512,
        1525
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5807": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1512,
        1525
      ],
      "op": "DIV",
      "path": "3"
    },
    "5808": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1512,
        1525
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "5810": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1512,
        1525
      ],
      "op": "AND",
      "path": "3"
    },
    "5811": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1512,
        1525
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5812": {
      "offset": [
        1512,
        1545
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16C0"
    },
    "5815": {
      "offset": [
        1512,
        1545
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5816": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1512,
        1545
      ],
      "op": "POP",
      "path": "3"
    },
    "5817": {
      "offset": [
        1529,
        1545
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16C0"
    },
    "5820": {
      "offset": [
        1529,
        1543
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1696"
    },
    "5823": {
      "jump": "i",
      "offset": [
        1529,
        1545
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5824": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1529,
        1545
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5825": {
      "offset": [
        1512,
        1562
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5826": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1512,
        1562
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16CE"
    },
    "5829": {
      "offset": [
        1512,
        1562
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5830": {
      "op": "POP"
    },
    "5831": {
      "offset": [
        1550,
        1562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5833": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1550,
        1562
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5834": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1550,
        1562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "5836": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1550,
        1562
      ],
      "op": "AND",
      "path": "3"
    },
    "5837": {
      "offset": [
        1549,
        1562
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5838": {
      "offset": [
        1512,
        1562
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5839": {
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1709"
    },
    "5842": {
      "offset": [
        1504,
        1613
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5843": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5845": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5846": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5850": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5852": {
      "op": "SHL"
    },
    "5853": {
      "offset": [
        1504,
        1613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5854": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5855": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5857": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "ADD",
      "path": "3"
    },
    "5858": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5859": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5860": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5862": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "ADD",
      "path": "3"
    },
    "5863": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5864": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5865": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "SUB",
      "path": "3"
    },
    "5866": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5867": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5868": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2E"
    },
    "5870": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5871": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5872": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5874": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "ADD",
      "path": "3"
    },
    "5875": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5876": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EC4"
    },
    "5879": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2E"
    },
    "5881": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5882": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "5883": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5885": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "ADD",
      "path": "3"
    },
    "5886": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5887": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "POP",
      "path": "3"
    },
    "5888": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "POP",
      "path": "3"
    },
    "5889": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5891": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5892": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5893": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5894": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "SUB",
      "path": "3"
    },
    "5895": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5896": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5897": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1504,
        1613
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5898": {
      "offset": [
        1624,
        1643
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5900": {
      "offset": [
        1647,
        1660
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5901": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1647,
        1660
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "5904": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1647,
        1660
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5905": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1647,
        1660
      ],
      "op": "DIV",
      "path": "3"
    },
    "5906": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1647,
        1660
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "5908": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1647,
        1660
      ],
      "op": "AND",
      "path": "3"
    },
    "5909": {
      "offset": [
        1646,
        1660
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5910": {
      "offset": [
        1670,
        1768
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5911": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1670,
        1768
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5912": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1670,
        1768
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1734"
    },
    "5915": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1670,
        1768
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5916": {
      "offset": [
        1704,
        1717
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5918": {
      "offset": [
        1704,
        1724
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5919": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1704,
        1724
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5920": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5922": {
      "op": "NOT"
    },
    "5923": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "5926": {
      "op": "NOT"
    },
    "5927": {
      "offset": [
        1704,
        1724
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5928": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1704,
        1724
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5929": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1704,
        1724
      ],
      "op": "AND",
      "path": "3"
    },
    "5930": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1704,
        1724
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "5933": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1704,
        1724
      ],
      "op": "OR",
      "path": "3"
    },
    "5934": {
      "offset": [
        1738,
        1757
      ],
      "op": "AND",
      "path": "3"
    },
    "5935": {
      "offset": [
        1720,
        1724
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5937": {
      "offset": [
        1738,
        1757
      ],
      "op": "OR",
      "path": "3"
    },
    "5938": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1738,
        1757
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5939": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1738,
        1757
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "5940": {
      "offset": [
        1670,
        1768
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5941": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        992,
        1018
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 46,
      "value": "0x173C"
    },
    "5944": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        992,
        1016
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x194E"
    },
    "5947": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "jump": "i",
      "offset": [
        992,
        1018
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5948": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        992,
        1018
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5949": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1028,
        1054
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 47,
      "value": "0x8F3"
    },
    "5952": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1028,
        1052
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19EE"
    },
    "5955": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "jump": "i",
      "offset": [
        1028,
        1054
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5956": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1791,
        1897
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5957": {
      "offset": [
        1512,
        1525
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5959": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1512,
        1525
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5960": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1512,
        1525
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "5963": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1512,
        1525
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5964": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1512,
        1525
      ],
      "op": "DIV",
      "path": "3"
    },
    "5965": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1512,
        1525
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "5967": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1512,
        1525
      ],
      "op": "AND",
      "path": "3"
    },
    "5968": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1512,
        1525
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5969": {
      "offset": [
        1512,
        1545
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x175D"
    },
    "5972": {
      "offset": [
        1512,
        1545
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5973": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1512,
        1545
      ],
      "op": "POP",
      "path": "3"
    },
    "5974": {
      "offset": [
        1529,
        1545
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x175D"
    },
    "5977": {
      "offset": [
        1529,
        1543
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1696"
    },
    "5980": {
      "jump": "i",
      "offset": [
        1529,
        1545
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5981": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1529,
        1545
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5982": {
      "offset": [
        1512,
        1562
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5983": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1512,
        1562
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x176B"
    },
    "5986": {
      "offset": [
        1512,
        1562
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5987": {
      "op": "POP"
    },
    "5988": {
      "offset": [
        1550,
        1562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5990": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1550,
        1562
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5991": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1550,
        1562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "5993": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1550,
        1562
      ],
      "op": "AND",
      "path": "3"
    },
    "5994": {
      "offset": [
        1549,
        1562
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5995": {
      "offset": [
        1512,
        1562
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5996": {
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17A6"
    },
    "5999": {
      "offset": [
        1504,
        1613
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6000": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6002": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6003": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6007": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6009": {
      "op": "SHL"
    },
    "6010": {
      "offset": [
        1504,
        1613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6011": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6012": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6014": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "ADD",
      "path": "3"
    },
    "6015": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6016": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6017": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6019": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "ADD",
      "path": "3"
    },
    "6020": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6021": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6022": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "SUB",
      "path": "3"
    },
    "6023": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6024": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6025": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2E"
    },
    "6027": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6028": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6029": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6031": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "ADD",
      "path": "3"
    },
    "6032": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6033": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EC4"
    },
    "6036": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2E"
    },
    "6038": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6039": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "6040": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6042": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "ADD",
      "path": "3"
    },
    "6043": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6044": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "POP",
      "path": "3"
    },
    "6045": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "POP",
      "path": "3"
    },
    "6046": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6048": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6049": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6050": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6051": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "SUB",
      "path": "3"
    },
    "6052": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6053": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "REVERT",
      "path": "3"
    },
    "6054": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1504,
        1613
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6055": {
      "offset": [
        1624,
        1643
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6057": {
      "offset": [
        1647,
        1660
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6058": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1647,
        1660
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "6061": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1647,
        1660
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6062": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1647,
        1660
      ],
      "op": "DIV",
      "path": "3"
    },
    "6063": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1647,
        1660
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "6065": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1647,
        1660
      ],
      "op": "AND",
      "path": "3"
    },
    "6066": {
      "offset": [
        1646,
        1660
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6067": {
      "offset": [
        1670,
        1768
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6068": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1670,
        1768
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6069": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1670,
        1768
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17D1"
    },
    "6072": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1670,
        1768
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6073": {
      "offset": [
        1704,
        1717
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6075": {
      "offset": [
        1704,
        1724
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6076": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1704,
        1724
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6077": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6079": {
      "op": "NOT"
    },
    "6080": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "6083": {
      "op": "NOT"
    },
    "6084": {
      "offset": [
        1704,
        1724
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6085": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1704,
        1724
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6086": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1704,
        1724
      ],
      "op": "AND",
      "path": "3"
    },
    "6087": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1704,
        1724
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "6090": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1704,
        1724
      ],
      "op": "OR",
      "path": "3"
    },
    "6091": {
      "offset": [
        1738,
        1757
      ],
      "op": "AND",
      "path": "3"
    },
    "6092": {
      "offset": [
        1720,
        1724
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "6094": {
      "offset": [
        1738,
        1757
      ],
      "op": "OR",
      "path": "3"
    },
    "6095": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1738,
        1757
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6096": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1738,
        1757
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6097": {
      "offset": [
        1670,
        1768
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6098": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1856,
        1890
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 48,
      "value": "0x8F3"
    },
    "6101": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "offset": [
        1856,
        1888
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1AE7"
    },
    "6104": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init",
      "jump": "i",
      "offset": [
        1856,
        1890
      ],
      "op": "JUMP",
      "path": "10"
    },
    "6105": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        770,
        956
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6106": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 49,
      "value": "0x40"
    },
    "6108": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6109": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6114": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6116": {
      "op": "SHL"
    },
    "6117": {
      "op": "SUB"
    },
    "6118": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6119": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "AND",
      "path": "6"
    },
    "6120": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x24"
    },
    "6122": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6123": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "ADD",
      "path": "6"
    },
    "6124": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6125": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x44"
    },
    "6127": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6128": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6129": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "ADD",
      "path": "6"
    },
    "6130": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6131": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6132": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6133": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6134": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6135": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6136": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "DUP4",
      "path": "6"
    },
    "6137": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "SUB",
      "path": "6"
    },
    "6138": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6139": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6140": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "ADD",
      "path": "6"
    },
    "6141": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6142": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6143": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x64"
    },
    "6145": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6146": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6147": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "ADD",
      "path": "6"
    },
    "6148": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6149": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "6150": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6151": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "6153": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6154": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "ADD",
      "path": "6"
    },
    "6155": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "DUP1",
      "path": "6"
    },
    "6156": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6161": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6163": {
      "op": "SHL"
    },
    "6164": {
      "op": "SUB"
    },
    "6165": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "AND",
      "path": "6"
    },
    "6166": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "6171": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6173": {
      "op": "SHL"
    },
    "6174": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "OR",
      "path": "6"
    },
    "6175": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6176": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        890,
        948
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6177": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        863,
        949
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x155C"
    },
    "6180": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        863,
        949
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6181": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        883,
        888
      ],
      "op": "DUP5",
      "path": "6"
    },
    "6182": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        883,
        888
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "6183": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "offset": [
        863,
        882
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B8D"
    },
    "6186": {
      "fn": "SafeERC20Upgradeable.safeTransfer",
      "jump": "i",
      "offset": [
        863,
        949
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6187": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3549,
        3764
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6188": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3607,
        3614
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6190": {
      "branch": 90,
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3630,
        3636
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6191": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3626,
        3646
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x183A"
    },
    "6194": {
      "branch": 90,
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3626,
        3646
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6195": {
      "op": "POP"
    },
    "6196": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3645,
        3646
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 50,
      "value": "0x0"
    },
    "6198": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3638,
        3646
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12BA"
    },
    "6201": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3638,
        3646
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6202": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3626,
        3646
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6203": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3668,
        3673
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6204": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3668,
        3673
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6205": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3668,
        3673
      ],
      "op": "MUL",
      "path": "2"
    },
    "6206": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3672,
        3673
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6207": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3668,
        3669
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6208": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3668,
        3673
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6209": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3668,
        3669
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6210": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3691,
        3696
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 51,
      "value": "0x1847"
    },
    "6213": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3691,
        3696
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6214": {
      "dev": "Division by zero",
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3691,
        3696
      ],
      "op": "INVALID",
      "path": "2"
    },
    "6215": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3691,
        3696
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6216": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3691,
        3696
      ],
      "op": "DIV",
      "path": "2"
    },
    "6217": {
      "branch": 91,
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3691,
        3701
      ],
      "op": "EQ",
      "path": "2"
    },
    "6218": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12B7"
    },
    "6221": {
      "branch": 91,
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6222": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6224": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6225": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6229": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6231": {
      "op": "SHL"
    },
    "6232": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6233": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6234": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6236": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "ADD",
      "path": "2"
    },
    "6237": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6238": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6239": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6241": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "ADD",
      "path": "2"
    },
    "6242": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6243": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6244": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "SUB",
      "path": "2"
    },
    "6245": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6246": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6247": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x21"
    },
    "6249": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6250": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6251": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6253": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "ADD",
      "path": "2"
    },
    "6254": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6255": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EF2"
    },
    "6258": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x21"
    },
    "6260": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6261": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "CODECOPY",
      "path": "2"
    },
    "6262": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6264": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "ADD",
      "path": "2"
    },
    "6265": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6266": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "POP",
      "path": "2"
    },
    "6267": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "POP",
      "path": "2"
    },
    "6268": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6270": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6271": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6272": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6273": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "SUB",
      "path": "2"
    },
    "6274": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6275": {
      "fn": "SafeMathUpgradeable.mul",
      "offset": [
        3683,
        3739
      ],
      "op": "REVERT",
      "path": "2"
    },
    "6276": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4228,
        4378
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6277": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4286,
        4293
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6279": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4317,
        4318
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 52
    },
    "6280": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4313,
        4314
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6281": {
      "branch": 92,
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4313,
        4318
      ],
      "op": "GT",
      "path": "2"
    },
    "6282": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18DA"
    },
    "6285": {
      "branch": 92,
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6286": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6288": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6289": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6290": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6294": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6296": {
      "op": "SHL"
    },
    "6297": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6298": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6299": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6301": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6303": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6304": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "ADD",
      "path": "2"
    },
    "6305": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6306": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1A"
    },
    "6308": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "6310": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6311": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "ADD",
      "path": "2"
    },
    "6312": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6313": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "6346": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "6348": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6349": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "ADD",
      "path": "2"
    },
    "6350": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6351": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6352": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6353": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6354": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6355": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6356": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "SUB",
      "path": "2"
    },
    "6357": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "6359": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "ADD",
      "path": "2"
    },
    "6360": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6361": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "REVERT",
      "path": "2"
    },
    "6362": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4305,
        4349
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6363": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4370,
        4371
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 53
    },
    "6364": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4366,
        4367
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6365": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4366,
        4371
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6366": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4366,
        4371
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18E3"
    },
    "6369": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4366,
        4371
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6370": {
      "dev": "Division by zero",
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4366,
        4371
      ],
      "op": "INVALID",
      "path": "2"
    },
    "6371": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4366,
        4371
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6372": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4366,
        4371
      ],
      "op": "DIV",
      "path": "2"
    },
    "6373": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4366,
        4371
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6374": {
      "fn": "SafeMathUpgradeable.div",
      "offset": [
        4228,
        4378
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6375": {
      "op": "POP"
    },
    "6376": {
      "op": "POP"
    },
    "6377": {
      "op": "POP"
    },
    "6378": {
      "fn": "SafeMathUpgradeable.div",
      "jump": "o",
      "offset": [
        4228,
        4378
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6379": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3147,
        3302
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6380": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3205,
        3212
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6382": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3237,
        3238
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 54
    },
    "6383": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3232,
        3233
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6384": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3232,
        3238
      ],
      "op": "GT",
      "path": "2"
    },
    "6385": {
      "branch": 93,
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3232,
        3238
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6386": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1942"
    },
    "6389": {
      "branch": 93,
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6390": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6392": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6393": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6394": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6398": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6400": {
      "op": "SHL"
    },
    "6401": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6402": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6403": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6405": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6407": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6408": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "ADD",
      "path": "2"
    },
    "6409": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6410": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1E"
    },
    "6412": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x24"
    },
    "6414": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6415": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "ADD",
      "path": "2"
    },
    "6416": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6417": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "6450": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x44"
    },
    "6452": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6453": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "ADD",
      "path": "2"
    },
    "6454": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6455": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6456": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6457": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6458": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6459": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6460": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "SUB",
      "path": "2"
    },
    "6461": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "6463": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "ADD",
      "path": "2"
    },
    "6464": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6465": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "REVERT",
      "path": "2"
    },
    "6466": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3224,
        3273
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6467": {
      "op": "POP"
    },
    "6468": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3290,
        3295
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 55
    },
    "6469": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3290,
        3295
      ],
      "op": "SUB",
      "path": "2"
    },
    "6470": {
      "fn": "SafeMathUpgradeable.sub",
      "offset": [
        3290,
        3295
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6471": {
      "fn": "SafeMathUpgradeable.sub",
      "jump": "o",
      "offset": [
        3147,
        3302
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6472": {
      "fn": "AddressUpgradeable.isContract",
      "offset": [
        737,
        1150
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6473": {
      "fn": "AddressUpgradeable.isContract",
      "offset": [
        1097,
        1117
      ],
      "op": "EXTCODESIZE",
      "path": "7"
    },
    "6474": {
      "fn": "AddressUpgradeable.isContract",
      "offset": [
        1135,
        1143
      ],
      "op": "ISZERO",
      "path": "7",
      "statement": 56
    },
    "6475": {
      "fn": "AddressUpgradeable.isContract",
      "offset": [
        1135,
        1143
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "6476": {
      "fn": "AddressUpgradeable.isContract",
      "offset": [
        1135,
        1143
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6477": {
      "fn": "AddressUpgradeable.isContract",
      "jump": "o",
      "offset": [
        737,
        1150
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6478": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        759,
        823
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "6479": {
      "offset": [
        1512,
        1525
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6481": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1512,
        1525
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6482": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1512,
        1525
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "6485": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1512,
        1525
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6486": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1512,
        1525
      ],
      "op": "DIV",
      "path": "3"
    },
    "6487": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1512,
        1525
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "6489": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1512,
        1525
      ],
      "op": "AND",
      "path": "3"
    },
    "6490": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1512,
        1525
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6491": {
      "offset": [
        1512,
        1545
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1967"
    },
    "6494": {
      "offset": [
        1512,
        1545
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6495": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1512,
        1545
      ],
      "op": "POP",
      "path": "3"
    },
    "6496": {
      "offset": [
        1529,
        1545
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1967"
    },
    "6499": {
      "offset": [
        1529,
        1543
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1696"
    },
    "6502": {
      "jump": "i",
      "offset": [
        1529,
        1545
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6503": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1529,
        1545
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6504": {
      "offset": [
        1512,
        1562
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6505": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1512,
        1562
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1975"
    },
    "6508": {
      "offset": [
        1512,
        1562
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6509": {
      "op": "POP"
    },
    "6510": {
      "offset": [
        1550,
        1562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6512": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1550,
        1562
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6513": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1550,
        1562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "6515": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1550,
        1562
      ],
      "op": "AND",
      "path": "3"
    },
    "6516": {
      "offset": [
        1549,
        1562
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6517": {
      "offset": [
        1512,
        1562
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6518": {
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19B0"
    },
    "6521": {
      "offset": [
        1504,
        1613
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6522": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6524": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6525": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6529": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6531": {
      "op": "SHL"
    },
    "6532": {
      "offset": [
        1504,
        1613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6533": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6534": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6536": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "ADD",
      "path": "3"
    },
    "6537": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6538": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6539": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6541": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "ADD",
      "path": "3"
    },
    "6542": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6543": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6544": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "SUB",
      "path": "3"
    },
    "6545": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6546": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6547": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2E"
    },
    "6549": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6550": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6551": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6553": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "ADD",
      "path": "3"
    },
    "6554": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6555": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EC4"
    },
    "6558": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2E"
    },
    "6560": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6561": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "6562": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6564": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "ADD",
      "path": "3"
    },
    "6565": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6566": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "POP",
      "path": "3"
    },
    "6567": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "POP",
      "path": "3"
    },
    "6568": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6570": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6571": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6572": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6573": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "SUB",
      "path": "3"
    },
    "6574": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6575": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "REVERT",
      "path": "3"
    },
    "6576": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6577": {
      "offset": [
        1624,
        1643
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6579": {
      "offset": [
        1647,
        1660
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6580": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1647,
        1660
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "6583": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1647,
        1660
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6584": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1647,
        1660
      ],
      "op": "DIV",
      "path": "3"
    },
    "6585": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1647,
        1660
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "6587": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1647,
        1660
      ],
      "op": "AND",
      "path": "3"
    },
    "6588": {
      "offset": [
        1646,
        1660
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6589": {
      "offset": [
        1670,
        1768
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6590": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1670,
        1768
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6591": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1670,
        1768
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8F3"
    },
    "6594": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1670,
        1768
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6595": {
      "offset": [
        1704,
        1717
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6597": {
      "offset": [
        1704,
        1724
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6598": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1704,
        1724
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6599": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6601": {
      "op": "NOT"
    },
    "6602": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "6605": {
      "op": "NOT"
    },
    "6606": {
      "offset": [
        1704,
        1724
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6607": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1704,
        1724
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6608": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1704,
        1724
      ],
      "op": "AND",
      "path": "3"
    },
    "6609": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1704,
        1724
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "6612": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1704,
        1724
      ],
      "op": "OR",
      "path": "3"
    },
    "6613": {
      "offset": [
        1738,
        1757
      ],
      "op": "AND",
      "path": "3"
    },
    "6614": {
      "offset": [
        1720,
        1724
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "6616": {
      "offset": [
        1738,
        1757
      ],
      "op": "OR",
      "path": "3"
    },
    "6617": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1738,
        1757
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6618": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1738,
        1757
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6619": {
      "offset": [
        1794,
        1808
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6620": {
      "offset": [
        1790,
        1856
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6621": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1790,
        1856
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x905"
    },
    "6624": {
      "offset": [
        1790,
        1856
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6625": {
      "offset": [
        1840,
        1845
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6627": {
      "offset": [
        1824,
        1845
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6628": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1824,
        1845
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6629": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "6632": {
      "op": "NOT"
    },
    "6633": {
      "offset": [
        1824,
        1845
      ],
      "op": "AND",
      "path": "3"
    },
    "6634": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1824,
        1845
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6635": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        1824,
        1845
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6636": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "offset": [
        759,
        823
      ],
      "op": "POP",
      "path": "8"
    },
    "6637": {
      "fn": "ContextUpgradeable.__Context_init_unchained",
      "jump": "o",
      "offset": [
        759,
        823
      ],
      "op": "JUMP",
      "path": "8"
    },
    "6638": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1067,
        1259
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6639": {
      "offset": [
        1512,
        1525
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6641": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1512,
        1525
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6642": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1512,
        1525
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "6645": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1512,
        1525
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6646": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1512,
        1525
      ],
      "op": "DIV",
      "path": "3"
    },
    "6647": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1512,
        1525
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "6649": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1512,
        1525
      ],
      "op": "AND",
      "path": "3"
    },
    "6650": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1512,
        1525
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6651": {
      "offset": [
        1512,
        1545
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A07"
    },
    "6654": {
      "offset": [
        1512,
        1545
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6655": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1512,
        1545
      ],
      "op": "POP",
      "path": "3"
    },
    "6656": {
      "offset": [
        1529,
        1545
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A07"
    },
    "6659": {
      "offset": [
        1529,
        1543
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1696"
    },
    "6662": {
      "jump": "i",
      "offset": [
        1529,
        1545
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6663": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1529,
        1545
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6664": {
      "offset": [
        1512,
        1562
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6665": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1512,
        1562
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A15"
    },
    "6668": {
      "offset": [
        1512,
        1562
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6669": {
      "op": "POP"
    },
    "6670": {
      "offset": [
        1550,
        1562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6672": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1550,
        1562
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6673": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1550,
        1562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "6675": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1550,
        1562
      ],
      "op": "AND",
      "path": "3"
    },
    "6676": {
      "offset": [
        1549,
        1562
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6677": {
      "offset": [
        1512,
        1562
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6678": {
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A50"
    },
    "6681": {
      "offset": [
        1504,
        1613
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6682": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6684": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6685": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6689": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6691": {
      "op": "SHL"
    },
    "6692": {
      "offset": [
        1504,
        1613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6693": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6694": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6696": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "ADD",
      "path": "3"
    },
    "6697": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6698": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6699": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6701": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "ADD",
      "path": "3"
    },
    "6702": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6703": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6704": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "SUB",
      "path": "3"
    },
    "6705": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6706": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6707": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2E"
    },
    "6709": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6710": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6711": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6713": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "ADD",
      "path": "3"
    },
    "6714": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6715": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EC4"
    },
    "6718": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2E"
    },
    "6720": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6721": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "6722": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6724": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "ADD",
      "path": "3"
    },
    "6725": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6726": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "POP",
      "path": "3"
    },
    "6727": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "POP",
      "path": "3"
    },
    "6728": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6730": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6731": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6732": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6733": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "SUB",
      "path": "3"
    },
    "6734": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6735": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "REVERT",
      "path": "3"
    },
    "6736": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6737": {
      "offset": [
        1624,
        1643
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6739": {
      "offset": [
        1647,
        1660
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6740": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1647,
        1660
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "6743": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1647,
        1660
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6744": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1647,
        1660
      ],
      "op": "DIV",
      "path": "3"
    },
    "6745": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1647,
        1660
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "6747": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1647,
        1660
      ],
      "op": "AND",
      "path": "3"
    },
    "6748": {
      "offset": [
        1646,
        1660
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6749": {
      "offset": [
        1670,
        1768
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6750": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1670,
        1768
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6751": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1670,
        1768
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A7B"
    },
    "6754": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1670,
        1768
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6755": {
      "offset": [
        1704,
        1717
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6757": {
      "offset": [
        1704,
        1724
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6758": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1704,
        1724
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6759": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6761": {
      "op": "NOT"
    },
    "6762": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "6765": {
      "op": "NOT"
    },
    "6766": {
      "offset": [
        1704,
        1724
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6767": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1704,
        1724
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6768": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1704,
        1724
      ],
      "op": "AND",
      "path": "3"
    },
    "6769": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1704,
        1724
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "6772": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1704,
        1724
      ],
      "op": "OR",
      "path": "3"
    },
    "6773": {
      "offset": [
        1738,
        1757
      ],
      "op": "AND",
      "path": "3"
    },
    "6774": {
      "offset": [
        1720,
        1724
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "6776": {
      "offset": [
        1738,
        1757
      ],
      "op": "OR",
      "path": "3"
    },
    "6777": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1738,
        1757
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6778": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1738,
        1757
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6779": {
      "offset": [
        1670,
        1768
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6780": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1134,
        1151
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6782": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1154,
        1166
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A85"
    },
    "6785": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1154,
        1164
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12C0"
    },
    "6788": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "jump": "i",
      "offset": [
        1154,
        1166
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6789": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1154,
        1166
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6790": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1176,
        1182
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 57,
      "value": "0x33"
    },
    "6792": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1176,
        1194
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6793": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1176,
        1194
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6798": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6800": {
      "op": "SHL"
    },
    "6801": {
      "op": "SUB"
    },
    "6802": {
      "op": "NOT"
    },
    "6803": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1176,
        1194
      ],
      "op": "AND",
      "path": "1"
    },
    "6804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6808": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6810": {
      "op": "SHL"
    },
    "6811": {
      "op": "SUB"
    },
    "6812": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1176,
        1194
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6813": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1176,
        1194
      ],
      "op": "AND",
      "path": "1"
    },
    "6814": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1176,
        1194
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6815": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1176,
        1194
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6816": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1176,
        1194
      ],
      "op": "OR",
      "path": "1"
    },
    "6817": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1176,
        1194
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6818": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1176,
        1194
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6819": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1176,
        1194
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "6820": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1209,
        1252
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 58,
      "value": "0x40"
    },
    "6822": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1209,
        1252
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6823": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1176,
        1194
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6824": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1176,
        1194
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6825": {
      "op": "POP"
    },
    "6826": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1176,
        1194
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6827": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6829": {
      "op": "SWAP1"
    },
    "6830": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1209,
        1252
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "6863": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1209,
        1252
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6864": {
      "op": "DUP3"
    },
    "6865": {
      "op": "SWAP1"
    },
    "6866": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1209,
        1252
      ],
      "op": "LOG3",
      "path": "1"
    },
    "6867": {
      "offset": [
        1778,
        1779
      ],
      "op": "POP",
      "path": "3"
    },
    "6868": {
      "offset": [
        1794,
        1808
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6869": {
      "offset": [
        1790,
        1856
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6870": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1790,
        1856
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x905"
    },
    "6873": {
      "offset": [
        1790,
        1856
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6874": {
      "offset": [
        1840,
        1845
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6876": {
      "offset": [
        1824,
        1845
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6877": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1824,
        1845
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6878": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "6881": {
      "op": "NOT"
    },
    "6882": {
      "offset": [
        1824,
        1845
      ],
      "op": "AND",
      "path": "3"
    },
    "6883": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1824,
        1845
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6884": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1824,
        1845
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "6885": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1067,
        1259
      ],
      "op": "POP",
      "path": "1"
    },
    "6886": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "jump": "o",
      "offset": [
        1067,
        1259
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6887": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1903,
        2007
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "6888": {
      "offset": [
        1512,
        1525
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6890": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1512,
        1525
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6891": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1512,
        1525
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "6894": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1512,
        1525
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6895": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1512,
        1525
      ],
      "op": "DIV",
      "path": "3"
    },
    "6896": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1512,
        1525
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "6898": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1512,
        1525
      ],
      "op": "AND",
      "path": "3"
    },
    "6899": {
      "branch": 81,
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1512,
        1525
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6900": {
      "offset": [
        1512,
        1545
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B00"
    },
    "6903": {
      "branch": 81,
      "offset": [
        1512,
        1545
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6904": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1512,
        1545
      ],
      "op": "POP",
      "path": "3"
    },
    "6905": {
      "offset": [
        1529,
        1545
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B00"
    },
    "6908": {
      "offset": [
        1529,
        1543
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1696"
    },
    "6911": {
      "jump": "i",
      "offset": [
        1529,
        1545
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6912": {
      "branch": 82,
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1529,
        1545
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6913": {
      "offset": [
        1512,
        1562
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6914": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1512,
        1562
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B0E"
    },
    "6917": {
      "branch": 82,
      "offset": [
        1512,
        1562
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6918": {
      "op": "POP"
    },
    "6919": {
      "offset": [
        1550,
        1562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6921": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1550,
        1562
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6922": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1550,
        1562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "6924": {
      "branch": 83,
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1550,
        1562
      ],
      "op": "AND",
      "path": "3"
    },
    "6925": {
      "offset": [
        1549,
        1562
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6926": {
      "offset": [
        1512,
        1562
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6927": {
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B49"
    },
    "6930": {
      "branch": 83,
      "offset": [
        1504,
        1613
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6931": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6933": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6934": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6938": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6940": {
      "op": "SHL"
    },
    "6941": {
      "offset": [
        1504,
        1613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6942": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6943": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6945": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "ADD",
      "path": "3"
    },
    "6946": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6947": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6948": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6950": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "ADD",
      "path": "3"
    },
    "6951": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6952": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6953": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "SUB",
      "path": "3"
    },
    "6954": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6955": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6956": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2E"
    },
    "6958": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6959": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6960": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "6962": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "ADD",
      "path": "3"
    },
    "6963": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6964": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EC4"
    },
    "6967": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2E"
    },
    "6969": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6970": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "6971": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6973": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "ADD",
      "path": "3"
    },
    "6974": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6975": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "POP",
      "path": "3"
    },
    "6976": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "POP",
      "path": "3"
    },
    "6977": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6979": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6980": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6981": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "6982": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "SUB",
      "path": "3"
    },
    "6983": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6984": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "REVERT",
      "path": "3"
    },
    "6985": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1504,
        1613
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6986": {
      "offset": [
        1624,
        1643
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6988": {
      "offset": [
        1647,
        1660
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6989": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1647,
        1660
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "6992": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1647,
        1660
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6993": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1647,
        1660
      ],
      "op": "DIV",
      "path": "3"
    },
    "6994": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1647,
        1660
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "6996": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1647,
        1660
      ],
      "op": "AND",
      "path": "3"
    },
    "6997": {
      "offset": [
        1646,
        1660
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "6998": {
      "offset": [
        1670,
        1768
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6999": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1670,
        1768
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7000": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1670,
        1768
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B74"
    },
    "7003": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1670,
        1768
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7004": {
      "offset": [
        1704,
        1717
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7006": {
      "offset": [
        1704,
        1724
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7007": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1704,
        1724
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7008": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7010": {
      "op": "NOT"
    },
    "7011": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "7014": {
      "op": "NOT"
    },
    "7015": {
      "offset": [
        1704,
        1724
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7016": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1704,
        1724
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7017": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1704,
        1724
      ],
      "op": "AND",
      "path": "3"
    },
    "7018": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1704,
        1724
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "7021": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1704,
        1724
      ],
      "op": "OR",
      "path": "3"
    },
    "7022": {
      "offset": [
        1738,
        1757
      ],
      "op": "AND",
      "path": "3"
    },
    "7023": {
      "offset": [
        1720,
        1724
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "7025": {
      "offset": [
        1738,
        1757
      ],
      "op": "OR",
      "path": "3"
    },
    "7026": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1738,
        1757
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7027": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1738,
        1757
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "7028": {
      "offset": [
        1670,
        1768
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7029": {
      "offset": [
        1710,
        1711
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "7031": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1978,
        1985
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 59,
      "value": "0x65"
    },
    "7033": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1978,
        2000
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "7034": {
      "offset": [
        1790,
        1856
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7035": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1790,
        1856
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "7036": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1790,
        1856
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x905"
    },
    "7039": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1790,
        1856
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7040": {
      "offset": [
        1840,
        1845
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7042": {
      "offset": [
        1824,
        1845
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7043": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1824,
        1845
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "7044": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "7047": {
      "op": "NOT"
    },
    "7048": {
      "offset": [
        1824,
        1845
      ],
      "op": "AND",
      "path": "3"
    },
    "7049": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1824,
        1845
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "7050": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1824,
        1845
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "7051": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "offset": [
        1903,
        2007
      ],
      "op": "POP",
      "path": "10"
    },
    "7052": {
      "fn": "ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained",
      "jump": "o",
      "offset": [
        1903,
        2007
      ],
      "op": "JUMP",
      "path": "10"
    },
    "7053": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3088,
        3850
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7054": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3518,
        3541
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "7056": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3544,
        3613
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1BE2"
    },
    "7059": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3572,
        3576
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7060": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3544,
        3613
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7062": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3544,
        3613
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7063": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3544,
        3613
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7064": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3544,
        3613
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7066": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3544,
        3613
      ],
      "op": "ADD",
      "path": "6"
    },
    "7067": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3544,
        3613
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7069": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3544,
        3613
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7070": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3544,
        3613
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7071": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3544,
        3613
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7073": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3544,
        3613
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7074": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3544,
        3613
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7075": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3544,
        3613
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7077": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3544,
        3613
      ],
      "op": "ADD",
      "path": "6"
    },
    "7078": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3544,
        3613
      ],
      "op": "PUSH32",
      "path": "6",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "7111": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3544,
        3613
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7112": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3544,
        3613
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7113": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3544,
        3613
      ],
      "op": "POP",
      "path": "6"
    },
    "7114": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3552,
        3557
      ],
      "op": "DUP6",
      "path": "6"
    },
    "7115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7119": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7121": {
      "op": "SHL"
    },
    "7122": {
      "op": "SUB"
    },
    "7123": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3544,
        3571
      ],
      "op": "AND",
      "path": "6"
    },
    "7124": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3544,
        3571
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C3E"
    },
    "7127": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3544,
        3571
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7128": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3544,
        3613
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "7129": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3544,
        3613
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7130": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3544,
        3613
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7131": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3544,
        3613
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xFFFFFFFF"
    },
    "7136": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3544,
        3613
      ],
      "op": "AND",
      "path": "6"
    },
    "7137": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "jump": "i",
      "offset": [
        3544,
        3613
      ],
      "op": "JUMP",
      "path": "6"
    },
    "7138": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3544,
        3613
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7139": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3627,
        3644
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7140": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3627,
        3644
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7141": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3518,
        3613
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7142": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3518,
        3613
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7143": {
      "op": "POP"
    },
    "7144": {
      "branch": 87,
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3627,
        3648
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7145": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3623,
        3844
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x155C"
    },
    "7148": {
      "branch": 87,
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3623,
        3844
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7149": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3767,
        3777
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 60
    },
    "7150": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3756,
        3786
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7151": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3756,
        3786
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7153": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3756,
        3786
      ],
      "op": "ADD",
      "path": "6"
    },
    "7154": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3756,
        3786
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7155": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3756,
        3786
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7156": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3756,
        3786
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7158": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3756,
        3786
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7159": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3756,
        3786
      ],
      "op": "LT",
      "path": "6"
    },
    "7160": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3756,
        3786
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "7161": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3756,
        3786
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C01"
    },
    "7164": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3756,
        3786
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7165": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3756,
        3786
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "7167": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3756,
        3786
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7168": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3756,
        3786
      ],
      "op": "REVERT",
      "path": "6"
    },
    "7169": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3756,
        3786
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "7170": {
      "op": "POP"
    },
    "7171": {
      "branch": 88,
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3756,
        3786
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7172": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x155C"
    },
    "7175": {
      "branch": 88,
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "7176": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7178": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7179": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7183": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7185": {
      "op": "SHL"
    },
    "7186": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7187": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7188": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "7190": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "ADD",
      "path": "6"
    },
    "7191": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7192": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7193": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7195": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "ADD",
      "path": "6"
    },
    "7196": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7197": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7198": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "SUB",
      "path": "6"
    },
    "7199": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "DUP3",
      "path": "6"
    },
    "7200": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7201": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2A"
    },
    "7203": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "DUP2",
      "path": "6"
    },
    "7204": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "7205": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "7207": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "ADD",
      "path": "6"
    },
    "7208": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7209": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F5F"
    },
    "7212": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2A"
    },
    "7214": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7215": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "CODECOPY",
      "path": "6"
    },
    "7216": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7218": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "ADD",
      "path": "6"
    },
    "7219": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7220": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "POP",
      "path": "6"
    },
    "7221": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "POP",
      "path": "6"
    },
    "7222": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "7224": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "7225": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7226": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "7227": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "SUB",
      "path": "6"
    },
    "7228": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "7229": {
      "fn": "SafeERC20Upgradeable._callOptionalReturn",
      "offset": [
        3748,
        3833
      ],
      "op": "REVERT",
      "path": "6"
    },
    "7230": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3592,
        3785
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7231": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3695,
        3707
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "7233": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3726,
        3778
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 61,
      "value": "0x1C4D"
    },
    "7236": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3748,
        3754
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7237": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3756,
        3760
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7238": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3762,
        3763
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7240": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3765,
        3777
      ],
      "op": "DUP6",
      "path": "7"
    },
    "7241": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3726,
        3747
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C57"
    },
    "7244": {
      "fn": "AddressUpgradeable.functionCall",
      "jump": "i",
      "offset": [
        3726,
        3778
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7245": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3726,
        3778
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7246": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3719,
        3778
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7247": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3719,
        3778
      ],
      "op": "POP",
      "path": "7"
    },
    "7248": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3592,
        3785
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7249": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3592,
        3785
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "7250": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3592,
        3785
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "7251": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3592,
        3785
      ],
      "op": "POP",
      "path": "7"
    },
    "7252": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3592,
        3785
      ],
      "op": "POP",
      "path": "7"
    },
    "7253": {
      "fn": "AddressUpgradeable.functionCall",
      "offset": [
        3592,
        3785
      ],
      "op": "POP",
      "path": "7"
    },
    "7254": {
      "fn": "AddressUpgradeable.functionCall",
      "jump": "o",
      "offset": [
        3592,
        3785
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7255": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4619,
        5142
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7256": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4746,
        4758
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "7258": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4803,
        4808
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 62
    },
    "7259": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4778,
        4799
      ],
      "op": "SELFBALANCE",
      "path": "7"
    },
    "7260": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4778,
        4808
      ],
      "op": "LT",
      "path": "7"
    },
    "7261": {
      "branch": 77,
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4778,
        4808
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "7262": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C98"
    },
    "7265": {
      "branch": 77,
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7266": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7268": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "7269": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7273": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7275": {
      "op": "SHL"
    },
    "7276": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7277": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7278": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "7280": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "ADD",
      "path": "7"
    },
    "7281": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7282": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7283": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7285": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "ADD",
      "path": "7"
    },
    "7286": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7287": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7288": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "SUB",
      "path": "7"
    },
    "7289": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7290": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7291": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x26"
    },
    "7293": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7294": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7295": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7297": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "ADD",
      "path": "7"
    },
    "7298": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7299": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E9E"
    },
    "7302": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x26"
    },
    "7304": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7305": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "CODECOPY",
      "path": "7"
    },
    "7306": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7308": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "ADD",
      "path": "7"
    },
    "7309": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7310": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "POP",
      "path": "7"
    },
    "7311": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "POP",
      "path": "7"
    },
    "7312": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7314": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "7315": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7316": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7317": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "SUB",
      "path": "7"
    },
    "7318": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7319": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "REVERT",
      "path": "7"
    },
    "7320": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4770,
        4851
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7321": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4869,
        4887
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 63,
      "value": "0x1CA1"
    },
    "7324": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4880,
        4886
      ],
      "op": "DUP6",
      "path": "7"
    },
    "7325": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4869,
        4879
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1948"
    },
    "7328": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "jump": "i",
      "offset": [
        4869,
        4887
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7329": {
      "branch": 78,
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4869,
        4887
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7330": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CF2"
    },
    "7333": {
      "branch": 78,
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7334": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7336": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7337": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "7338": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7342": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7344": {
      "op": "SHL"
    },
    "7345": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7346": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7347": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7349": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "7351": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7352": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "ADD",
      "path": "7"
    },
    "7353": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7354": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1D"
    },
    "7356": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "7358": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7359": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "ADD",
      "path": "7"
    },
    "7360": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7361": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "7394": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x44"
    },
    "7396": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7397": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "ADD",
      "path": "7"
    },
    "7398": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7399": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7400": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "7401": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7402": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7403": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7404": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "SUB",
      "path": "7"
    },
    "7405": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x64"
    },
    "7407": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "ADD",
      "path": "7"
    },
    "7408": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7409": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "REVERT",
      "path": "7"
    },
    "7410": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4861,
        4921
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7411": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4992,
        5004
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7413": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5006,
        5029
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "7415": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5039
      ],
      "op": "DUP7",
      "path": "7"
    },
    "7416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7420": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7422": {
      "op": "SHL"
    },
    "7423": {
      "op": "SUB"
    },
    "7424": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5044
      ],
      "op": "AND",
      "path": "7"
    },
    "7425": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5053,
        5058
      ],
      "op": "DUP6",
      "path": "7"
    },
    "7426": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5061,
        5065
      ],
      "op": "DUP8",
      "path": "7"
    },
    "7427": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7429": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "7430": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7431": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7432": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7433": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "7434": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7435": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7437": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "ADD",
      "path": "7"
    },
    "7438": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7439": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7440": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7441": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7442": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7443": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7445": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7446": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "LT",
      "path": "7"
    },
    "7447": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D31"
    },
    "7450": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7451": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7452": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "7453": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7454": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7455": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7457": {
      "op": "NOT"
    },
    "7458": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7459": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "7460": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "ADD",
      "path": "7"
    },
    "7461": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7462": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7464": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7465": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7466": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "ADD",
      "path": "7"
    },
    "7467": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7468": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "ADD",
      "path": "7"
    },
    "7469": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D12"
    },
    "7472": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7473": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7474": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "7476": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7477": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7479": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "SUB",
      "path": "7"
    },
    "7480": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "7483": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "EXP",
      "path": "7"
    },
    "7484": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "SUB",
      "path": "7"
    },
    "7485": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7486": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "NOT",
      "path": "7"
    },
    "7487": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7488": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "7489": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "AND",
      "path": "7"
    },
    "7490": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7491": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7492": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "7493": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "AND",
      "path": "7"
    },
    "7494": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7495": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7496": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "OR",
      "path": "7"
    },
    "7497": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "DUP6",
      "path": "7"
    },
    "7498": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7499": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "POP",
      "path": "7"
    },
    "7500": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "POP",
      "path": "7"
    },
    "7501": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "POP",
      "path": "7"
    },
    "7502": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "POP",
      "path": "7"
    },
    "7503": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "POP",
      "path": "7"
    },
    "7504": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "POP",
      "path": "7"
    },
    "7505": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7506": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "POP",
      "path": "7"
    },
    "7507": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "ADD",
      "path": "7"
    },
    "7508": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7509": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "POP",
      "path": "7"
    },
    "7510": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "POP",
      "path": "7"
    },
    "7511": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7513": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7515": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "7516": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7517": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7518": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "SUB",
      "path": "7"
    },
    "7519": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7520": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "DUP6",
      "path": "7"
    },
    "7521": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "DUP8",
      "path": "7"
    },
    "7522": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "GAS",
      "path": "7"
    },
    "7523": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "CALL",
      "path": "7"
    },
    "7524": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "7525": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "POP",
      "path": "7"
    },
    "7526": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "POP",
      "path": "7"
    },
    "7527": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "POP",
      "path": "7"
    },
    "7528": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "7529": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7530": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7532": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7533": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "EQ",
      "path": "7"
    },
    "7534": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D93"
    },
    "7537": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7538": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7540": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "7541": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7542": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "POP",
      "path": "7"
    },
    "7543": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "7545": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "NOT",
      "path": "7"
    },
    "7546": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3F"
    },
    "7548": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "7549": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "ADD",
      "path": "7"
    },
    "7550": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "AND",
      "path": "7"
    },
    "7551": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7552": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "ADD",
      "path": "7"
    },
    "7553": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7555": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7556": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "7557": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7558": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7559": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "7560": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7562": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7564": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7565": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "ADD",
      "path": "7"
    },
    "7566": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "7567": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D98"
    },
    "7570": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7571": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7572": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "7574": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7575": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "POP",
      "path": "7"
    },
    "7576": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7577": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5033,
        5066
      ],
      "op": "POP",
      "path": "7"
    },
    "7578": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4991,
        5066
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7579": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4991,
        5066
      ],
      "op": "POP",
      "path": "7"
    },
    "7580": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4991,
        5066
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7581": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4991,
        5066
      ],
      "op": "POP",
      "path": "7"
    },
    "7582": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5083,
        5135
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 64,
      "value": "0x1DA8"
    },
    "7585": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5101,
        5108
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7586": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5110,
        5120
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7587": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5122,
        5134
      ],
      "op": "DUP7",
      "path": "7"
    },
    "7588": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5083,
        5100
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1DB3"
    },
    "7591": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "jump": "i",
      "offset": [
        5083,
        5135
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7592": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5083,
        5135
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7593": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        5076,
        5135
      ],
      "op": "SWAP8",
      "path": "7"
    },
    "7594": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "offset": [
        4619,
        5142
      ],
      "op": "SWAP7",
      "path": "7"
    },
    "7595": {
      "op": "POP"
    },
    "7596": {
      "op": "POP"
    },
    "7597": {
      "op": "POP"
    },
    "7598": {
      "op": "POP"
    },
    "7599": {
      "op": "POP"
    },
    "7600": {
      "op": "POP"
    },
    "7601": {
      "op": "POP"
    },
    "7602": {
      "fn": "AddressUpgradeable.functionCallWithValue",
      "jump": "o",
      "offset": [
        4619,
        5142
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7603": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6122,
        6847
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7604": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6237,
        6249
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "7606": {
      "branch": 79,
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6265,
        6272
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7607": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6261,
        6841
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "7608": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6261,
        6841
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1DC2"
    },
    "7611": {
      "branch": 79,
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6261,
        6841
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7612": {
      "op": "POP"
    },
    "7613": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6295,
        6305
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 65
    },
    "7614": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6288,
        6305
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C50"
    },
    "7617": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6288,
        6305
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7618": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6261,
        6841
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7619": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6406,
        6423
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7620": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6406,
        6423
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "7621": {
      "branch": 80,
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6406,
        6427
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "7622": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6402,
        6831
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1DD2"
    },
    "7625": {
      "branch": 80,
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6402,
        6831
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7626": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6664,
        6674
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7627": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6658,
        6675
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "7628": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6724,
        6739
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7629": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6711,
        6721
      ],
      "op": "DUP5",
      "path": "7"
    },
    "7630": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6707,
        6709
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7632": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6703,
        6722
      ],
      "op": "ADD",
      "path": "7"
    },
    "7633": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6696,
        6740
      ],
      "op": "REVERT",
      "path": "7"
    },
    "7634": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6613,
        6758
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7635": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6803,
        6815
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 66
    },
    "7636": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7638": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "7639": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7643": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7645": {
      "op": "SHL"
    },
    "7646": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7647": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7648": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "7650": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "ADD",
      "path": "7"
    },
    "7651": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7652": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7653": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7655": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "ADD",
      "path": "7"
    },
    "7656": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7657": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7658": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "SUB",
      "path": "7"
    },
    "7659": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7660": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7661": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7662": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7663": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7664": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "7665": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7666": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7667": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7669": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "ADD",
      "path": "7"
    },
    "7670": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7671": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "POP",
      "path": "7"
    },
    "7672": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7673": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "7674": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7675": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7677": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "ADD",
      "path": "7"
    },
    "7678": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7679": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7680": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7681": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7682": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7684": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7685": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7686": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7687": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "LT",
      "path": "7"
    },
    "7688": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "7689": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E1C"
    },
    "7692": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7693": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7694": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7695": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "ADD",
      "path": "7"
    },
    "7696": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "7697": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7698": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7699": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "ADD",
      "path": "7"
    },
    "7700": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7701": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7703": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "ADD",
      "path": "7"
    },
    "7704": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E04"
    },
    "7707": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7708": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7709": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "POP",
      "path": "7"
    },
    "7710": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "POP",
      "path": "7"
    },
    "7711": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "POP",
      "path": "7"
    },
    "7712": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "POP",
      "path": "7"
    },
    "7713": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7714": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "POP",
      "path": "7"
    },
    "7715": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7716": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7717": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "ADD",
      "path": "7"
    },
    "7718": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7719": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "7721": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "AND",
      "path": "7"
    },
    "7722": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7723": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "7724": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E49"
    },
    "7727": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "7728": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7729": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "DUP3",
      "path": "7"
    },
    "7730": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "SUB",
      "path": "7"
    },
    "7731": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7732": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "7733": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "7735": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "DUP4",
      "path": "7"
    },
    "7736": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7738": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "SUB",
      "path": "7"
    },
    "7739": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "7742": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "EXP",
      "path": "7"
    },
    "7743": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "SUB",
      "path": "7"
    },
    "7744": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "NOT",
      "path": "7"
    },
    "7745": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "AND",
      "path": "7"
    },
    "7746": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7747": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7748": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7750": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "ADD",
      "path": "7"
    },
    "7751": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7752": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "POP",
      "path": "7"
    },
    "7753": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7754": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "POP",
      "path": "7"
    },
    "7755": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "7756": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "POP",
      "path": "7"
    },
    "7757": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "POP",
      "path": "7"
    },
    "7758": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "POP",
      "path": "7"
    },
    "7759": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7761": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "7762": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7763": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "7764": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "SUB",
      "path": "7"
    },
    "7765": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7766": {
      "fn": "AddressUpgradeable._verifyCallResult",
      "offset": [
        6796,
        6816
      ],
      "op": "REVERT",
      "path": "7"
    },
    "7767": {
      "op": "JUMPDEST"
    },
    "7768": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7770": {
      "op": "DUP1"
    },
    "7771": {
      "op": "MLOAD"
    },
    "7772": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7774": {
      "op": "DUP2"
    },
    "7775": {
      "op": "ADD"
    },
    "7776": {
      "op": "DUP3"
    },
    "7777": {
      "op": "MSTORE"
    },
    "7778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7780": {
      "op": "DUP1"
    },
    "7781": {
      "op": "DUP3"
    },
    "7782": {
      "op": "MSTORE"
    },
    "7783": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7785": {
      "op": "DUP3"
    },
    "7786": {
      "op": "ADD"
    },
    "7787": {
      "op": "DUP2"
    },
    "7788": {
      "op": "SWAP1"
    },
    "7789": {
      "op": "MSTORE"
    },
    "7790": {
      "op": "SWAP2"
    },
    "7791": {
      "op": "DUP2"
    },
    "7792": {
      "op": "ADD"
    },
    "7793": {
      "op": "SWAP2"
    },
    "7794": {
      "op": "SWAP1"
    },
    "7795": {
      "op": "SWAP2"
    },
    "7796": {
      "op": "MSTORE"
    },
    "7797": {
      "op": "SWAP1"
    },
    "7798": {
      "op": "JUMP"
    }
  },
  "sha1": "4e9b09e92b1f9a341458633655d488a8df5d1ef5",
  "source": "// Current version: 9\n// This contract's version: 10\n// Changes: 1. temporarily modified rebase() to directly rebase out USDs token\n//\t\t\t   held by VaultCore. (normally it first swaps reward & interest\n//\t\t\t   earned in strategies to USDs, then rebases out these USDs)\n// Arbitrum-one proxy address: 0xF783DD830A4650D2A8594423F123250652340E3f\n\n// SPDX-License-Identifier: MIT\npragma solidity >=0.6.12;\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/SafeERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\";\nimport \"../../interfaces/IStrategy.sol\";\n\n\n/**\n * @title Vault of USDs protocol\n * @dev Control Mint, Redeem, Allocate and Rebase of USDs\n * @dev Live on Arbitrum Layer 2\n * @author Sperax Foundation\n */\ncontract Vault is Initializable, OwnableUpgradeable, ReentrancyGuardUpgradeable {\n\tusing SafeERC20Upgradeable for IERC20Upgradeable;\n\tusing SafeMathUpgradeable for uint;\n\n\tevent CollateralAdded(address collateralAddr, bool addded, address defaultStrategyAddr);\n\tevent StrategyAdded(address strategyAddr, bool added);\n\tevent CollateralAllocated(address indexed collateralAddr, address indexed depositStrategyAddr, uint allocateAmount);\n\tevent TotalValueLocked(\n\t\tuint totalValueLocked,\n\t\tuint totalValueInVault,\n\t\tuint totalValueInStrategies\n\t);\n\n\tstruct collateralStruct {\n\t\taddress collateralAddr;\n\t\tbool added;\n\t\taddress defaultStrategyAddr;\n\t}\n\tstruct strategyStruct {\n\t\taddress strategyAddr;\n\t\tbool added;\n\t}\n\tmapping(address => collateralStruct) public collateralsInfo;\n\tmapping(address => strategyStruct) public strategiesInfo;\n\n\taddress[] public allCollateralAddr;\t// the list of all added collaterals\n\taddress[] public allStrategyAddr;\t// the list of all strategy addresses\n\n\t/**\n\t * @dev contract initializer\n\t */\n\tfunction initialize() public initializer {\n\t\tOwnableUpgradeable.__Ownable_init();\n\t\tReentrancyGuardUpgradeable.__ReentrancyGuard_init();\n\t}\n\n\n\t/**\n\t * @dev authorize an ERC20 token as one of the collaterals supported by USDs mint/redeem\n\t * @param _collateralAddr ERC20 address to be authorized\n\t * @param _defaultStrategyAddr strategy address of which the collateral is allocated into on allocate()\n\t */\n\tfunction addCollateral(address _collateralAddr, address _defaultStrategyAddr) external onlyOwner {\n\t\trequire(!collateralsInfo[_collateralAddr].added, \"Collateral added\");\n\t\trequire(ERC20Upgradeable(_collateralAddr).decimals() <= 18, \"Collaterals decimals need to be less than 18\");\n\t\tcollateralStruct storage addingCollateral = collateralsInfo[_collateralAddr];\n\t\taddingCollateral.collateralAddr = _collateralAddr;\n\t\taddingCollateral.added = true;\n\t\taddingCollateral.defaultStrategyAddr = _defaultStrategyAddr;\n\t\tallCollateralAddr.push(addingCollateral.collateralAddr);\n\t\temit CollateralAdded(_collateralAddr, addingCollateral.added, _defaultStrategyAddr);\n\t}\n\n\t/**\n\t * @dev authorize an strategy\n\t * @param _strategyAddr strategy contract address\n\t */\n\tfunction addStrategy(address _strategyAddr) external onlyOwner {\n\t\trequire(!strategiesInfo[_strategyAddr].added, \"Strategy added\");\n\t\tstrategyStruct storage addingStrategy = strategiesInfo[_strategyAddr];\n\t\taddingStrategy.strategyAddr = _strategyAddr;\n\t\taddingStrategy.added = true;\n\t\tallStrategyAddr.push(addingStrategy.strategyAddr);\n\t\temit StrategyAdded(_strategyAddr, true);\n\t}\n\n\t/**\n\t * @notice harvest USDs held by VaultCore\n\t * @dev VaultCore does not organically hold/generate USDs, transfer USDs to\n\t *\t\tVaultCore manually\n\t */\n\t function harvest() external onlyOwner nonReentrant {\n \t\tIStrategy strategy;\n \t\tcollateralStruct memory collateral;\n \t\tfor (uint y = 0; y < allCollateralAddr.length; y++) {\n \t\t\tcollateral = collateralsInfo[allCollateralAddr[y]];\n \t\t\tif (collateral.defaultStrategyAddr != address(0)) {\n \t\t\t\tstrategy = IStrategy(collateral.defaultStrategyAddr);\n \t\t\t\trequire(strategy.supportsCollateral(collateral.collateralAddr));\n\t\t\t\t_harvestInterest(strategy, collateral.collateralAddr);\n \t\t\t\t_harvestReward(strategy);\n \t\t\t}\n \t\t}\n \t}\n\t/**\n\t * @notice harvest reward token earned in strategies\n\t * @dev rewardLiquidationThreshold is the maximum amount of CRV used to\n\t * \t\trebase; the rest is sent to rwdReserve.\n\t */\n\tfunction _harvestReward(IStrategy strategy) internal {\n\t\taddress rwdTokenAddr = strategy.rewardTokenAddress();\n\t\tuint256 rewardEarned = strategy.checkRewardEarned();\n\t\tif (rewardEarned > 0) {\n\t\t\tuint256 rerwardCollected = strategy.collectRewardToken();\n\t\t}\n\t}\n\n\t/**\n\t * @notice harvest interest earned in strategies\n\t * @dev interestLiquidationThreshold is the maximum interest allowed;\n\t *\t\tif interest earned is higher than that, txn will be reverted. Lower\n\t *\t\trewardLiquidationThreshold and increase interestLiquidationThreshold\n\t */\n\tfunction _harvestInterest(IStrategy strategy, address collateralAddr) internal {\n\t\tcollateralStruct memory collateral = collateralsInfo[collateralAddr];\n\t\tuint interestEarned = strategy.checkInterestEarned(collateralAddr);\n\t\tif (interestEarned > 0) {\n\t\t\t(address interestToken, uint256 interestCollected) = strategy.collectInterest(\n\t\t\t\taddress(this),\n\t\t\t\tcollateral.collateralAddr\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * @dev allocate collateral on this contract into strategies.\n\t */\n\tfunction allocate() external onlyOwner nonReentrant {\n\t\tIStrategy strategy;\n\t\tcollateralStruct memory collateral;\n\t\tfor (uint y = 0; y < allCollateralAddr.length; y++) {\n\t\t\tcollateral = collateralsInfo[allCollateralAddr[y]];\n\t\t\tif (collateral.defaultStrategyAddr != address(0)) {\n\t\t\t\tstrategy = IStrategy(collateral.defaultStrategyAddr);\n\t\t\t \trequire(strategy.supportsCollateral(collateral.collateralAddr));\n\t\t\t\tuint amtToAllocate = IERC20Upgradeable(collateral.collateralAddr).balanceOf(address(this));\n\t\t\t\tIERC20Upgradeable(collateral.collateralAddr).safeTransfer(collateral.defaultStrategyAddr, amtToAllocate);\n\t\t\t\tstrategy.deposit(collateral.collateralAddr, amtToAllocate);\n\t\t\t\temit CollateralAllocated(collateral.collateralAddr, collateral.defaultStrategyAddr, amtToAllocate);\n\t\t\t}\n\n\t\t}\n\t}\n\n\t/**\n\t * @dev the value of collaterals in this contract and strategies\n\t */\n\tfunction totalValueLocked() public view returns (uint value) {\n\t\tvalue = totalValueInVault().add(totalValueInStrategies());\n\t}\n\n\t/**\n\t * @dev the value of collaterals in this contract\n\t */\n\tfunction totalValueInVault() public view returns (uint value) {\n\t\tfor (uint y = 0; y < allCollateralAddr.length; y++) {\n\t\t\tcollateralStruct memory collateral = collateralsInfo[allCollateralAddr[y]];\n\t\t\tvalue = value.add(_valueInVault(collateral.collateralAddr));\n\t\t}\n\t}\n\n\t/**\n\t * @dev the value of collateral of _collateralAddr in this contract\n\t */\n\tfunction _valueInVault(address _collateralAddr) internal view returns (uint value) {\n\t\tcollateralStruct memory collateral = collateralsInfo[_collateralAddr];\n\t\tuint priceColla = 10**8;\n\t\tuint precisionColla = 10**8;\n\t\tuint collateralAddrDecimal = uint(ERC20Upgradeable(collateral.collateralAddr).decimals());\n\t\tuint collateralTotalValueInVault = IERC20Upgradeable(collateral.collateralAddr).balanceOf(address(this)).mul(priceColla).div(precisionColla);\n\t\tuint collateralTotalValueInVault_18 = collateralTotalValueInVault.mul(10**(uint(18).sub(collateralAddrDecimal)));\n\t\tvalue = collateralTotalValueInVault_18;\n\t}\n\n\t/**\n\t * @dev the value of collaterals in the strategies\n\t */\n\tfunction totalValueInStrategies() public view returns (uint value) {\n\t\tfor (uint y = 0; y < allCollateralAddr.length; y++) {\n\t\t\tcollateralStruct memory collateral = collateralsInfo[allCollateralAddr[y]];\n\t\t\tvalue = value.add(_valueInStrategy(collateral.collateralAddr));\n\t\t}\n\t}\n\n\t/**\n\t * @dev the value of collateral of _collateralAddr in its strategy\n\t */\n\tfunction _valueInStrategy(address _collateralAddr) internal view returns (uint) {\n\t\tcollateralStruct memory collateral = collateralsInfo[_collateralAddr];\n\t\tif (collateral.defaultStrategyAddr == address(0)) {\n\t\t\treturn 0;\n\t\t}\n\t\tIStrategy strategy = IStrategy(collateral.defaultStrategyAddr);\n\t\tif (!strategy.supportsCollateral(collateral.collateralAddr)) {\n\t\t\treturn 0;\n\t\t}\n\t\tuint priceColla = 10**8;\n\t\tuint precisionColla = 10**8;\n\t\tuint collateralAddrDecimal = uint(ERC20Upgradeable(collateral.collateralAddr).decimals());\n\t\tuint collateralTotalValueInStrategy = strategy.checkBalance(collateral.collateralAddr).mul(priceColla).div(precisionColla);\n\t\tuint collateralTotalValueInStrategy_18 = collateralTotalValueInStrategy.mul(10**(uint(18).sub(collateralAddrDecimal)));\n\t\treturn collateralTotalValueInStrategy_18;\n\t}\n}\n",
  "sourceMap": "1009:7706:19:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/vault/Vault.sol",
  "type": "contract"
}